#+TITLE: This is the title
#+AUTHOR: Yann Esposito
#+EMAIL: yann@esposito.host
#+KEYWORDS: programming demo
#+DESCRIPTION: css demonstration
#+OPTIONS: H:5
#+OPTIONS: auto-id:t toc:t

@@html:<nav>
<a href="/index.html">Home</a> |
<a href="/slides.html">Slides</a> |
<a href="/about-me.html">About</a>
<span class="details">
(<a href="https://gitea.esy.fun/yogsototh">code</a>
<a href="https://espial.esy.fun/u:yogsototh">bookmarks</a>
<a href="https://espial.esy.fun/u:yogsototh/notes">notes</a>)
</span>
</nav>@@

* Notes
:PROPERTIES:
:CUSTOM_ID: notes-4ff2
:END:
** Spacemacs
:PROPERTIES:
:CUSTOM_ID: spacemacs
:END:

Awesome a bit unknown commands:

- =SPC f s=: save
- =SPC f f=: create/open a file
- =SPC r l=: helm resume (start at the latest projectile-find-file for example)
- =SPC s l=: resume-last-search
- =g c c=: comment out a line
- =SPC r y=: show previous yanked things
- =SPC /=: find in all project
- =SPC *=: find word under cursor in all project
- =C-o=: Jump back
- ="ay=: to yank into register =a=, then ="ap= to paste
* Level 1 in org-mode
  :PROPERTIES:
  :CUSTOM_ID: level-1-in-org-mode-e308
  :END:

This is a text I write so we can test many different details of a web page.
The text can be *bold*, /italic/, +strikethrough+ or =keyword=.

Here is a [[file:index.html][link to another page]].

There should be whitespace between paragraphs.

Multiples lines
in the source
code should
be set as a single
paragraph.
But if I use a double space  
There should be a forced newline.

* Width
:PROPERTIES:
:CUSTOM_ID: width
:END:

Testing the width: I use a max width of 71

#+begin_src ascii
--------10--------20--------30--------40--------50--------60--------70--
123456789-123456789-123456789-123456789-123456789-123456789-123456789-1
123456789-123456789-123456789-123456789-123456789-123456789-123456789-12
123456789-123456789-123456789-123456789-123456789-123456789-123456789-123
123456789-123456789-123456789-123456789-123456789-123456789-123456789-1234
123456789-123456789-123456789-123456789-123456789-123456789-123456789-12345
123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456
123456789-123456789-123456789-123456789-123456789-123456789-123456789-1234567
123456789-123456789-123456789-123456789-123456789-123456789-123456789-12345678
123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789
123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-

a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J
K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j
k l m n o p q r s t u v w x y z
#+end_src

a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J
K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j
k l m n o p q r s t u v w x y z


* Math
  :PROPERTIES:
  :CUSTOM_ID: math
  :END:
Let also try to write some math inside the text $\pi_1(X,x_0)$.
In the middle of the text again $x$ and $x_i\times 0$.

\(x^y / \log(x)\)

\[  \prod_{i=0}^n \sum_{x_i\in E} \frac{1}{x_i} \]

* Blocks
:PROPERTIES:
:CUSTOM_ID: blocks
:END:
** Notes
:PROPERTIES:
:CUSTOM_ID: notes
:END:
#+begin_notes
This is some note.
With a bit of information and text.
Perhaps a list:

- thing
- another thing
#+end_notes

** Examples
:PROPERTIES:
:CUSTOM_ID: examples
:END:

#+begin_example
This is an example.
We can say a few things.
Perhaps a list:

- thing
- another thing
#+end_example

* Lists
:PROPERTIES:
:CUSTOM_ID: lists
:END:
** Ordered lists
:PROPERTIES:
:CUSTOM_ID: ordered-lists
:END:
1. counting with very very long lines. Just to check that everything is all
   right regarding very long lines inside list, but also nested lists.
2. foo
3. bar
4. baz
5. counting
6. up
7. to
8. a
9. big
10. number enough
11. to have two
12. digits
13. The simplest example of a homotopy group is the /fundamental group/ of
    a space, which is written $\pi_1(X,x_0)$: Given a space $X$ and a point
    $x_0$ in it, one can make a group whose elements are loops at $x_0$
    (continuous paths from $x_0$ to $x_0$), considered up to homotopy, with
    the group operations given by the identity path (standing still), path
    concatenation, and path reversal. For example, the fundamental group of
    the 2-sphere is trivial, but the fundamental group of the torus is
    not, which shows that the sphere and the torus are not homotopy
    equivalent. The intuition is that every loop on the sphere is homotopic
    to the identity, because its inside can be filled in. In contrast, a
    loop on the torus that goes through the donut's hole is not homotopic
    to the identity, so there are non-trivial elements in the fundamental
    group.
14. Lot of things.
** Unordered list
:PROPERTIES:
:CUSTOM_ID: unordered-list
:END:
- counting with very very long lines. Just to check that everything is all
  right regarding very long lines inside list, but also nested lists.
- foo
- bar
- baz
- counting
- up
- to
- a
- big
- number enough
- to have two
- digits
- The simplest example of a homotopy group is the /fundamental group/ of
  a space, which is written $\pi_1(X,x_0)$: Given a space $X$ and a point
  $x_0$ in it, one can make a group whose elements are loops at $x_0$
  (continuous paths from $x_0$ to $x_0$), considered up to homotopy, with
  the group operations given by the identity path (standing still), path
  concatenation, and path reversal. For example, the fundamental group of
  the 2-sphere is trivial, but the fundamental group of the torus is
  not, which shows that the sphere and the torus are not homotopy
  equivalent. The intuition is that every loop on the sphere is homotopic
  to the identity, because its inside can be filled in. In contrast, a
  loop on the torus that goes through the donut's hole is not homotopic
  to the identity, so there are non-trivial elements in the fundamental
  group.
- Lot of things.
** Nested
:PROPERTIES:
:CUSTOM_ID: nested
:END:

- counting with very very long lines. Just to check that everything is all
  right regarding very long lines inside list, but also nested lists.
- foo
  - bar
    - baz
      - quux
- The simplest example of a homotopy group is the /fundamental group/ of
  a space, which is written $\pi_1(X,x_0)$: Given a space $X$ and a point
  $x_0$ in it, one can make a group whose elements are loops at $x_0$
  (continuous paths from $x_0$ to $x_0$), considered up to homotopy, with
  the group operations given by the identity path (standing still), path
  concatenation, and path reversal.
  1. counting with very very long lines. Just to check that everything is all
     right regarding very long lines inside list, but also nested lists.
  2. foo
     1. Something else to nest.
     2. For example, the fundamental group of the 2-sphere is trivial,
        but the fundamental group of the torus is not, which shows that the
        sphere and the torus are not homotopy equivalent. The intuition is
        that every loop on the sphere is homotopic to the identity, because
        its inside can be filled in. In contrast, a loop on the torus that
        goes through the donut's hole is not homotopic to the identity, so
        there are non-trivial elements in the fundamental group.
  3. The simplest example of a homotopy group is the /fundamental group/ of
     a space, which is written $\pi_1(X,x_0)$: Given a space $X$ and a point
     $x_0$ in it, one can make a group whose elements are loops at $x_0$
     (continuous paths from $x_0$ to $x_0$), considered up to homotopy, with
     the group operations given by the identity path (standing still), path
     concatenation, and path reversal.
  4. Lot of things.
- Lot of things.
* Blockquote
:PROPERTIES:
:CUSTOM_ID: blockquote
:END:

 #+begin_quote
 This is a blockquote following a header.

 When something is important enough, you do it even if the odds are not in your
 favor.
 #+end_quote
 
* Source code
:PROPERTIES:
:CUSTOM_ID: source-code
:END:

#+begin_src javascript
// Javascript code with syntax highlighting.
var fun = function lang(l) {
  dateformat.i18n = require('./lang/' + l)
  return true;
}
#+end_src

#+begin_src ruby
# Ruby code with syntax highlighting
GitHubPages::Dependencies.gems.each do |gem, version|
  s.add_dependency(gem, "= #{version}")
end
#+end_src

#+begin_src clojure
(defn clj-fn
  "A clojure function with syntax highlighting"
  [arg]
  (clojure.pprint/pprint arg))
#+end_src

#+begin_src haskell
-- main hello world
main :: IO ()
main = do
  putStrLn "What is your name?"
  name <- getLine
  putStrLn $ "Hello " <> name <> "!"
#+end_src

** Tangled
:PROPERTIES:
:CUSTOM_ID: tangled
:END:

#+begin_src clojure :tangle my-dir/pprint.clj :mkdir t
(defn clj-fn
  "A clojure function with syntax highlighting"
  [arg]
  (clojure.pprint/pprint arg))
#+end_src

#+begin_src haskell :tangle hello_world.hs
-- main hello world
main :: IO ()
main = do
  putStrLn "What is your name?"
  name <- getLine
  putStrLn $ "Hello " <> name <> "!"
#+end_src

* Tables
:PROPERTIES:
:CUSTOM_ID: tables
:END:

 | head1     | head two                  |
 |-----------+---------------------------|
 | Sir Robin | the not so brave          |
 | Lancelot  | search the =holy= *graal* |
 | Galaad    | the /pure/                |
 | Zoot      | Just =Zoot=               |

Bad too wide table...

 | head1     | head two                  | head3                 | head4              | head5                                           | head 6 | head7                                 |
 |-----------+---------------------------+-----------------------+--------------------+-------------------------------------------------+--------+---------------------------------------|
 | Sir Robin | the not so brave          | very big content here | super long content | What could I say, I like trying to break things | n/a    | superlongwordthatcouldnotfitcorrectly |
 | Lancelot  | search the =holy= *graal* |                       |                    |                                                 |        |                                       |
 | Galaad    | the /pure/                |                       |                    |                                                 |        |                                       |
 | Zoot      | Just =Zoot=               |                       |                    |                                                 |        |                                       |

* Rules
:PROPERTIES:
:CUSTOM_ID: rules
:END:

There's a horizontal rule below this

------

Another here

------

After the rule.

* Image
:PROPERTIES:
:CUSTOM_ID: image
:END:

an image:

#+ATTR_HTML: The Experiment
#+CAPTION: Testing include an image
#+NAME: fig:test-image
[[../img/a.png]]


We could try inline image
[[../img/a.png]]
just to check.

- [[../img/a.png]] item with img
  - [[../img/a.png]] item with img

* TODOs
:PROPERTIES:
:CUSTOM_ID: todos
:END:
****** TODO todo
:PROPERTIES:
:CUSTOM_ID: todo
:END:
******* IN-PROGRESS in-progress
:PROPERTIES:
:CUSTOM_ID: in-progress
:END:
******** IN-REVIEW in-review
:PROPERTIES:
:CUSTOM_ID: in-review
:END:
******* HOLD on hold state
:PROPERTIES:
:CUSTOM_ID: on-hold-state
:END:
- State "HOLD"       from "IN-REVIEW"  [2019-07-09 Tue 13:44] \\
  some reason
******* WAITING waiting status
:PROPERTIES:
:CUSTOM_ID: waiting-status
:END:
- State "WAITING"    from              [2019-07-09 Tue 13:44] \\
  waiting for someone
******* DONE done status
:PROPERTIES:
:CUSTOM_ID: done-status
:END:
******* CANCELED canceled status
CLOSED: [2019-07-09 Tue 13:45]
:PROPERTIES:
:CUSTOM_ID: canceled-status
:END:
- State "CANCELED"   from              [2019-07-09 Tue 13:45] \\
cancel reason
* Level 1
:PROPERTIES:
:CUSTOM_ID: level-1
:END:
** Level 2
:PROPERTIES:
:CUSTOM_ID: level-2
:END:
*** Level 3
:PROPERTIES:
:CUSTOM_ID: level-3
:END:
**** Level 4
:PROPERTIES:
:CUSTOM_ID: level-4
:END:
***** Level 5
:PROPERTIES:
:CUSTOM_ID: level-5
:END:
****** Level 6
:PROPERTIES:
:CUSTOM_ID: level-6
:END:
******* Level 7
:PROPERTIES:
:CUSTOM_ID: level-7
:END:
******** Level 8
:PROPERTIES:
:CUSTOM_ID: level-8
:END:
********* Level 9
:PROPERTIES:
:CUSTOM_ID: level-9
:END:
********** Level 10
:PROPERTIES:
:CUSTOM_ID: level-10
:END:
*********** Level 11
:PROPERTIES:
:CUSTOM_ID: level-11
:END:
************ Level 12
:PROPERTIES:
:CUSTOM_ID: level-12
:END:
* TODO Todo 1
:PROPERTIES:
:CUSTOM_ID: todo-1
:END:
** TODO Todo 2
:PROPERTIES:
:CUSTOM_ID: todo-2
:END:
*** TODO Todo 3
:PROPERTIES:
:CUSTOM_ID: todo-3
:END:
**** TODO Todo 4
:PROPERTIES:
:CUSTOM_ID: todo-4
:END:
***** TODO Todo 5
:PROPERTIES:
:CUSTOM_ID: todo-5
:END:
****** TODO Todo 6
:PROPERTIES:
:CUSTOM_ID: todo-6
:END:
******* TODO Todo 7
:PROPERTIES:
:CUSTOM_ID: todo-7
:END:
******** TODO Todo 8
:PROPERTIES:
:CUSTOM_ID: todo-8
:END:
********* TODO Todo 9
:PROPERTIES:
:CUSTOM_ID: todo-9
:END:
********** TODO Todo 10
:PROPERTIES:
:CUSTOM_ID: todo-10
:END:
*********** TODO Todo 11
:PROPERTIES:
:CUSTOM_ID: todo-11
:END:
************ TODO Todo 12
:PROPERTIES:
:CUSTOM_ID: todo-12
:END:
