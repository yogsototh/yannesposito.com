<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
	   xmlns:content="http://purl.org/rss/1.0/modules/content/"
	   xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	   xmlns:dc="http://purl.org/dc/elements/1.1/"
	   xmlns:atom="http://www.w3.org/2005/Atom"
	   xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	   xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	   xmlns:georss="http://www.georss.org/georss"
     xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
     xmlns:media="http://search.yahoo.com/mrss/"><channel>
  <title>her.esy.fun</title>
  <atom:link href="https://her.esy.fun/rss.xml" rel="self" type="application/rss+xml" />
  <link>https://her.esy.fun</link>
  <description><![CDATA[her.esy.fun articles, mostly random personal thoughts]]></description>
  <language>en</language>
  <pubDate>Sat, 30 Oct 2021 00:00:00 +0200</pubDate>
  <lastBuildDate>Sat, 19 Feb 2022 00:00:00 +0100</lastBuildDate>
  <generator>mkrss.sh</generator>
  <webMaster>yann@esposito.host (Yann Esposito)</webMaster>
  <image>
    <url>https://her.esy.fun/img/FlatAvatar.png</url>
    <title>her.esy.fun</title>
    <link>https://her.esy.fun</link>
  </image>

<item>
<title>My personal environment sync</title>
<guid>https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html</guid>
<pubDate>Sat, 30 Oct 2021 00:00:00 +0200</pubDate>
<category>programming</category>
<description><![CDATA[
<div id="content"><p>I have a quite specific system that I improved along the years to manage my local environment. Think about, binaries I expect to have in my shell, as well as configuration files for various utilities, and a few personal scripts.</p><p>The notion of what is exactly my local environment is not perfectly defined. I expect every of my computers to behave slightly differently. Some are for work-only, some personal use only.</p><p>For the things I want everywhere, I have a peculiar personal system.</p><p>I use a personal script that depends on <a href="https://yadm.io">yadm</a> and <a href="https://github.com/nix-community/home-manager">home-manager</a>.</p><p>My script try to check if some files where updated and react accordingly:</p><ol><li>I download the dot-files changes via <code>yadm</code>.</li><li>If my home-manager files changes, it will run <code>home-manager switch</code> ; if it fails, try to update nix channels then try again.</li><li>If my doom emacs packages changed, it will run <code>doom sync</code></li><li>If the script itself changed, it re-run the script after updating itself.</li></ol><p>If the script detect that I changed my emacs configuration, it runs <code>doom
sync</code> or <code>doom sync -u</code>.</p><p>Here it is:</p><div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-1" aria-hidden="true"></a><span class="co">#!/bin/bash</span></span>
<span id="cb1-2"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-2" aria-hidden="true"></a></span>
<span id="cb1-3"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-3" aria-hidden="true"></a><span class="co">### logs fn helpers</span></span>
<span id="cb1-4"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-4" aria-hidden="true"></a></span>
<span id="cb1-5"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-5" aria-hidden="true"></a><span class="co">## colors for tput</span></span>
<span id="cb1-6"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-6" aria-hidden="true"></a><span class="co"># black=0</span></span>
<span id="cb1-7"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-7" aria-hidden="true"></a><span class="va">red=</span>1</span>
<span id="cb1-8"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-8" aria-hidden="true"></a><span class="va">green=</span>2</span>
<span id="cb1-9"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-9" aria-hidden="true"></a><span class="va">yellow=</span>3</span>
<span id="cb1-10"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-10" aria-hidden="true"></a><span class="va">blue=</span>4</span>
<span id="cb1-11"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-11" aria-hidden="true"></a><span class="co"># magenta=5</span></span>
<span id="cb1-12"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-12" aria-hidden="true"></a><span class="co"># cyan=6</span></span>
<span id="cb1-13"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-13" aria-hidden="true"></a><span class="co"># white=7</span></span>
<span id="cb1-14"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-14" aria-hidden="true"></a><span class="fu">highpr()</span> <span class="kw">{</span></span>
<span id="cb1-15"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-15" aria-hidden="true"></a>    <span class="bu">printf</span> <span class="st">&quot;</span><span class="va">$(</span><span class="ex">tput</span> setaf <span class="va">$green)</span><span class="st">â†’</span><span class="va">$(</span><span class="ex">tput</span> sgr0<span class="va">)</span><span class="st"> </span><span class="va">$(</span><span class="ex">tput</span> bold<span class="va">)</span><span class="st">%-60s</span><span class="va">$(</span><span class="ex">tput</span> sgr0<span class="va">)</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="va">$*</span><span class="st">&quot;</span></span>
<span id="cb1-16"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-16" aria-hidden="true"></a><span class="kw">}</span></span>
<span id="cb1-17"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-17" aria-hidden="true"></a><span class="fu">ok()</span> <span class="kw">{</span></span>
<span id="cb1-18"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-18" aria-hidden="true"></a>    <span class="bu">local</span> <span class="va">txt=</span><span class="st">&quot;OK&quot;</span></span>
<span id="cb1-19"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-19" aria-hidden="true"></a>    <span class="bu">echo</span> -e <span class="st">&quot; [</span><span class="va">$(</span><span class="ex">tput</span> bold<span class="va">)$(</span><span class="ex">tput</span> setaf <span class="va">$green)${txt}$(</span><span class="ex">tput</span> sgr0<span class="va">)</span><span class="st">]&quot;</span> <span class="op">&gt;&amp;2</span></span>
<span id="cb1-20"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-20" aria-hidden="true"></a><span class="kw">}</span></span>
<span id="cb1-21"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-21" aria-hidden="true"></a><span class="fu">info()</span> <span class="kw">{</span></span>
<span id="cb1-22"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-22" aria-hidden="true"></a>    <span class="bu">echo</span> -e <span class="st">&quot; [</span><span class="va">$(</span><span class="ex">tput</span> bold<span class="va">)$(</span><span class="ex">tput</span> setaf <span class="va">$blue)$*$(</span><span class="ex">tput</span> sgr0<span class="va">)</span><span class="st">]&quot;</span> <span class="op">&gt;&amp;2</span></span>
<span id="cb1-23"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-23" aria-hidden="true"></a><span class="kw">}</span></span>
<span id="cb1-24"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-24" aria-hidden="true"></a><span class="fu">warn()</span> <span class="kw">{</span></span>
<span id="cb1-25"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-25" aria-hidden="true"></a>    <span class="bu">echo</span> -e <span class="st">&quot;</span><span class="va">$(</span><span class="ex">tput</span> bold<span class="va">)$(</span><span class="ex">tput</span> setaf <span class="va">$yellow)$*$(</span><span class="ex">tput</span> sgr0<span class="va">)</span><span class="st">&quot;</span> <span class="op">&gt;&amp;2</span></span>
<span id="cb1-26"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-26" aria-hidden="true"></a><span class="kw">}</span></span>
<span id="cb1-27"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-27" aria-hidden="true"></a><span class="fu">err()</span> <span class="kw">{</span></span>
<span id="cb1-28"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-28" aria-hidden="true"></a>    <span class="bu">echo</span> -e <span class="st">&quot;</span><span class="va">$(</span><span class="ex">tput</span> bold<span class="va">)$(</span><span class="ex">tput</span> setaf <span class="va">$red)$*$(</span><span class="ex">tput</span> sgr0<span class="va">)</span><span class="st">&quot;</span> <span class="op">&gt;&amp;2</span></span>
<span id="cb1-29"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-29" aria-hidden="true"></a><span class="kw">}</span></span>
<span id="cb1-30"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-30" aria-hidden="true"></a><span class="fu">fail()</span> <span class="kw">{</span></span>
<span id="cb1-31"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-31" aria-hidden="true"></a>    <span class="ex">err</span> -e <span class="st">&quot;\n[ERR] </span><span class="va">$*</span><span class="st">&quot;</span></span>
<span id="cb1-32"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-32" aria-hidden="true"></a>    <span class="bu">exit</span> 1</span>
<span id="cb1-33"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-33" aria-hidden="true"></a><span class="kw">}</span></span>
<span id="cb1-34"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-34" aria-hidden="true"></a></span>
<span id="cb1-35"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-35" aria-hidden="true"></a><span class="ex">highpr</span> <span class="st">&quot;check nix&quot;</span></span>
<span id="cb1-36"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-36" aria-hidden="true"></a><span class="kw">if</span> !<span class="bu"> [</span> <span class="ot">-x</span> <span class="st">&quot;</span><span class="va">$(</span><span class="bu">command</span> -v nix<span class="va">)</span><span class="st">&quot;</span><span class="bu"> ]</span>; <span class="kw">then</span></span>
<span id="cb1-37"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-37" aria-hidden="true"></a>    <span class="bu">echo</span></span>
<span id="cb1-38"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-38" aria-hidden="true"></a>    <span class="ex">err</span> <span class="st">&quot;nix does not seem to be installed.&quot;</span></span>
<span id="cb1-39"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-39" aria-hidden="true"></a>    <span class="ex">err</span> <span class="st">&quot;Install it from: https://nixos.org/nix/&quot;</span></span>
<span id="cb1-40"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-40" aria-hidden="true"></a>    <span class="bu">exit</span> 1</span>
<span id="cb1-41"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-41" aria-hidden="true"></a><span class="kw">fi</span></span>
<span id="cb1-42"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-42" aria-hidden="true"></a><span class="ex">ok</span></span>
<span id="cb1-43"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-43" aria-hidden="true"></a></span>
<span id="cb1-44"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-44" aria-hidden="true"></a><span class="ex">highpr</span> <span class="st">&quot;yadm fetch&quot;</span></span>
<span id="cb1-45"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-45" aria-hidden="true"></a><span class="ex">yadm</span> fetch --quiet  <span class="kw">||</span> <span class="ex">fail</span> <span class="st">&quot;yadm fetch failed&quot;</span></span>
<span id="cb1-46"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-46" aria-hidden="true"></a><span class="ex">ok</span></span>
<span id="cb1-47"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-47" aria-hidden="true"></a></span>
<span id="cb1-48"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-48" aria-hidden="true"></a><span class="co"># check the hash of a few files before doing yadm pull</span></span>
<span id="cb1-49"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-49" aria-hidden="true"></a><span class="va">OLD_SYNC_ENV_ID=$(</span><span class="ex">yadm</span> rev-parse HEAD:bin/sync-env.sh<span class="va">)</span></span>
<span id="cb1-50"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-50" aria-hidden="true"></a><span class="va">OLD_HOME_MANAGER_ID=$(</span><span class="ex">yadm</span> rev-parse HEAD:.config/nixpkgs/home.nix<span class="va">)</span></span>
<span id="cb1-51"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-51" aria-hidden="true"></a><span class="va">OLD_DOOM_PACKAGES=$(</span><span class="ex">yadm</span> rev-parse HEAD:.doom.d/packages.el<span class="va">)</span></span>
<span id="cb1-52"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-52" aria-hidden="true"></a><span class="va">OLD_DOOM_INIT=$(</span><span class="ex">yadm</span> rev-parse HEAD:.doom.d/init.el<span class="va">)</span></span>
<span id="cb1-53"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-53" aria-hidden="true"></a></span>
<span id="cb1-54"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-54" aria-hidden="true"></a><span class="ex">highpr</span> <span class="st">&quot;yadm pull&quot;</span></span>
<span id="cb1-55"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-55" aria-hidden="true"></a><span class="ex">yadm</span> pull --quiet <span class="kw">||</span> <span class="ex">fail</span> <span class="st">&quot;yadm pull failed&quot;</span></span>
<span id="cb1-56"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-56" aria-hidden="true"></a><span class="ex">ok</span></span>
<span id="cb1-57"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-57" aria-hidden="true"></a></span>
<span id="cb1-58"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-58" aria-hidden="true"></a><span class="co"># check the hash of a few files after doing yadm pull</span></span>
<span id="cb1-59"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-59" aria-hidden="true"></a><span class="va">NEW_SYNC_ENV_ID=$(</span><span class="ex">yadm</span> rev-parse HEAD:bin/sync-env.sh<span class="va">)</span></span>
<span id="cb1-60"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-60" aria-hidden="true"></a><span class="va">NEW_HOME_MANAGER_ID=$(</span><span class="ex">yadm</span> rev-parse HEAD:.config/nixpkgs/home.nix<span class="va">)</span></span>
<span id="cb1-61"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-61" aria-hidden="true"></a><span class="va">NEW_DOOM_PACKAGES=$(</span><span class="ex">yadm</span> rev-parse HEAD:.doom.d/packages.el<span class="va">)</span></span>
<span id="cb1-62"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-62" aria-hidden="true"></a><span class="va">NEW_DOOM_INIT=$(</span><span class="ex">yadm</span> rev-parse HEAD:.doom.d/init.el<span class="va">)</span></span>
<span id="cb1-63"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-63" aria-hidden="true"></a></span>
<span id="cb1-64"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-64" aria-hidden="true"></a><span class="ex">highpr</span> <span class="st">&quot;check sync-env diff&quot;</span></span>
<span id="cb1-65"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-65" aria-hidden="true"></a><span class="kw">if</span> !<span class="bu"> [</span> <span class="st">&quot;</span><span class="va">$OLD_SYNC_ENV_ID</span><span class="st">&quot;</span> <span class="ot">=</span> <span class="st">&quot;</span><span class="va">$NEW_SYNC_ENV_ID</span><span class="st">&quot;</span><span class="bu"> ]</span>; <span class="kw">then</span></span>
<span id="cb1-66"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-66" aria-hidden="true"></a>    <span class="ex">warn</span> <span class="st">&quot; changed&quot;</span></span>
<span id="cb1-67"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-67" aria-hidden="true"></a>    <span class="ex">warn</span> <span class="st">&quot; Starting ~/bin/sync-env.sh again&quot;</span></span>
<span id="cb1-68"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-68" aria-hidden="true"></a>    <span class="bu">echo</span></span>
<span id="cb1-69"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-69" aria-hidden="true"></a>    <span class="ex">~/bin/sync-env.sh</span></span>
<span id="cb1-70"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-70" aria-hidden="true"></a>    <span class="bu">exit</span> <span class="va">$?</span></span>
<span id="cb1-71"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-71" aria-hidden="true"></a><span class="kw">fi</span></span>
<span id="cb1-72"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-72" aria-hidden="true"></a><span class="ex">ok</span></span>
<span id="cb1-73"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-73" aria-hidden="true"></a></span>
<span id="cb1-74"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-74" aria-hidden="true"></a><span class="kw">if</span><span class="bu"> [</span> <span class="ot">-f</span> <span class="st">&quot;</span><span class="va">$HOME</span><span class="st">/.yadm/files.gpg&quot;</span><span class="bu"> ]</span>; <span class="kw">then</span></span>
<span id="cb1-75"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-75" aria-hidden="true"></a>  <span class="ex">highpr</span> <span class="st">&quot;yadm decrypt&quot;</span></span>
<span id="cb1-76"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-76" aria-hidden="true"></a>  <span class="ex">yadm</span> decrypt <span class="kw">||</span> <span class="ex">fail</span> <span class="st">&quot;yadm decrypt failed&quot;</span></span>
<span id="cb1-77"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-77" aria-hidden="true"></a>  <span class="ex">ok</span></span>
<span id="cb1-78"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-78" aria-hidden="true"></a><span class="kw">fi</span></span>
<span id="cb1-79"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-79" aria-hidden="true"></a></span>
<span id="cb1-80"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-80" aria-hidden="true"></a><span class="ex">highpr</span> <span class="st">&quot;home-manager&quot;</span></span>
<span id="cb1-81"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-81" aria-hidden="true"></a><span class="va">USERNAME_NIX_FILE=</span><span class="st">&quot;</span><span class="va">$HOME</span><span class="st">/.config/nixpkgs/username.nix&quot;</span></span>
<span id="cb1-82"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-82" aria-hidden="true"></a><span class="kw">if</span><span class="bu"> [</span> <span class="ot">!</span> <span class="ot">-f</span>  <span class="st">&quot;</span><span class="va">$USERNAME_NIX_FILE</span><span class="st">&quot;</span><span class="bu"> ]</span>; <span class="kw">then</span></span>
<span id="cb1-83"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-83" aria-hidden="true"></a>  <span class="bu">echo</span> <span class="st">&quot;</span><span class="dt">\&quot;</span><span class="va">$USER</span><span class="dt">\&quot;</span><span class="st">&quot;</span> <span class="op">&gt;&gt;</span> <span class="st">&quot;</span><span class="va">$USERNAME_NIX_FILE</span><span class="st">&quot;</span></span>
<span id="cb1-84"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-84" aria-hidden="true"></a><span class="kw">fi</span></span>
<span id="cb1-85"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-85" aria-hidden="true"></a><span class="kw">if</span> !<span class="bu"> [</span> <span class="st">&quot;</span><span class="va">$OLD_HOME_MANAGER_ID</span><span class="st">&quot;</span> <span class="ot">=</span> <span class="st">&quot;</span><span class="va">$NEW_HOME_MANAGER_ID</span><span class="st">&quot;</span><span class="bu"> ]</span>; <span class="kw">then</span></span>
<span id="cb1-86"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-86" aria-hidden="true"></a>    <span class="bu">echo</span></span>
<span id="cb1-87"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-87" aria-hidden="true"></a>    <span class="ex">highpr</span> <span class="st">&quot;home-manager switch&quot;</span></span>
<span id="cb1-88"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-88" aria-hidden="true"></a>    <span class="ex">home-manager</span> switch <span class="kw">||</span> <span class="kw">\</span></span>
<span id="cb1-89"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-89" aria-hidden="true"></a>      <span class="kw">(</span> <span class="ex">nix-channel</span> --update <span class="kw">&amp;&amp;</span> <span class="ex">home-manager</span> switch <span class="kw">)</span> <span class="kw">||</span> <span class="kw">\</span></span>
<span id="cb1-90"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-90" aria-hidden="true"></a>      <span class="ex">fail</span> <span class="st">&quot;home-manager switch failed&quot;</span></span>
<span id="cb1-91"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-91" aria-hidden="true"></a>    <span class="ex">ok</span></span>
<span id="cb1-92"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-92" aria-hidden="true"></a><span class="kw">else</span></span>
<span id="cb1-93"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-93" aria-hidden="true"></a>    <span class="ex">info</span> <span class="st">&quot;skipped&quot;</span></span>
<span id="cb1-94"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-94" aria-hidden="true"></a><span class="kw">fi</span></span>
<span id="cb1-95"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-95" aria-hidden="true"></a></span>
<span id="cb1-96"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-96" aria-hidden="true"></a><span class="ex">highpr</span> <span class="st">&quot;doom-emacs&quot;</span></span>
<span id="cb1-97"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-97" aria-hidden="true"></a><span class="va">doompath=</span><span class="st">&quot;</span><span class="va">$HOME</span><span class="st">/.emacs.d/bin/doom&quot;</span></span>
<span id="cb1-98"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-98" aria-hidden="true"></a><span class="kw">if</span> !<span class="bu"> [</span> <span class="st">&quot;</span><span class="va">$OLD_DOOM_PACKAGES</span><span class="st">&quot;</span> <span class="ot">=</span> <span class="st">&quot;</span><span class="va">$NEW_DOOM_PACKAGES</span><span class="st">&quot;</span><span class="bu"> ]</span> <span class="kw">||</span> <span class="kw">\</span></span>
<span id="cb1-99"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-99" aria-hidden="true"></a>   !<span class="bu"> [</span> <span class="st">&quot;</span><span class="va">$OLD_DOOM_INIT</span><span class="st">&quot;</span>     <span class="ot">=</span> <span class="st">&quot;</span><span class="va">$NEW_DOOM_INIT</span><span class="st">&quot;</span>  ]; then</span>
<span id="cb1-100"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-100" aria-hidden="true"></a>  if [[ <span class="ot">-x</span> <span class="va">$doompath</span> ]]; then</span>
<span id="cb1-101"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-101" aria-hidden="true"></a>      echo</span>
<span id="cb1-102"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-102" aria-hidden="true"></a>      highpr <span class="st">&quot;doom sync&quot;</span></span>
<span id="cb1-103"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-103" aria-hidden="true"></a>      <span class="va">$doompath</span> sync || fail <span class="st">&quot;doom failed to sync&quot;</span></span>
<span id="cb1-104"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-104" aria-hidden="true"></a>      ok</span>
<span id="cb1-105"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-105" aria-hidden="true"></a>  else</span>
<span id="cb1-106"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-106" aria-hidden="true"></a>     fail <span class="st">&quot;Cannot find doom executable at </span><span class="va">$doompath</span><span class="st">&quot;</span>;</span>
<span id="cb1-107"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-107" aria-hidden="true"></a>  fi</span>
<span id="cb1-108"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-108" aria-hidden="true"></a>else</span>
<span id="cb1-109"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-109" aria-hidden="true"></a>   info <span class="st">&quot;skipped&quot;</span></span>
<span id="cb1-110"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb1-110" aria-hidden="true"></a>fi</span></code></pre></div><h2 id="boostraping">Bootstrapping</h2><p>Bootstrapping this system is always a nice problem to think about. It is smooth when everything is set but to bootstrap it I need binaries installed by this systemâ€¦ Soâ€¦ How to handle the dependency cycle correctly?</p><p>To minimize the pain, I removed more and more bootstrapping dependencies. Now my almost single dependence for bootstrapping my environment is <code>nix</code>. I haven't initialized any machine for a long time now. The following should work.</p><ol><li><p>Use fish<a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a> <code>chsh /bin/fish</code></p></li><li><p>Install nix <code>curl -L https://nixos.org/nix/install | sh</code></p></li><li><p>Install home-manager</p><div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb2-1" aria-hidden="true"></a><span class="ex">nix-channel</span> --add https://github.com/nix-community/home-manager/archive/release-21.05.tar.gz home-manager</span>
<span id="cb2-2"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb2-2" aria-hidden="true"></a><span class="ex">nix-channel</span> --update</span>
<span id="cb2-3"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb2-3" aria-hidden="true"></a><span class="bu">export</span> <span class="va">NIX_PATH=$HOME</span>/.nix-defexpr/channels<span class="va">${NIX_PATH:+</span>:<span class="va">}$NIX_PATH</span></span>
<span id="cb2-4"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb2-4" aria-hidden="true"></a><span class="ex">nix-shell</span> <span class="st">&#39;&lt;home-manager&gt;&#39;</span> -A install</span></code></pre></div></li><li><p>Install and use <code>yadm</code></p><div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb3-1" aria-hidden="true"></a><span class="ex">nix-shell</span> -p yadm</span>
<span id="cb3-2"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb3-2" aria-hidden="true"></a><span class="ex">yadm</span> boostrap</span>
<span id="cb3-3"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb3-3" aria-hidden="true"></a><span class="ex">yadm</span> remote set-url origin <span class="op">&lt;</span>url-to-my-dot-files-repo<span class="op">&gt;</span></span>
<span id="cb3-4"><a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#cb3-4" aria-hidden="true"></a><span class="ex">yadm</span> pull</span></code></pre></div></li><li><p>Still in the <code>nix-shell</code> with <code>yadm</code> run <code>~/bin/sync-env.sh</code></p></li></ol><p>There is a risk that step 3 fail because I pin most of my packages in home-manager configuration, and it will try to install <code>yadm</code>. This can conflict with the <code>yadm</code> installed in the current <code>nix-shell</code>. So sometime I need to:</p><ol><li>Remove the line installing <code>yadm</code> in my home-manager configuration first</li><li>run <code>home-manager sync</code></li><li>get out of the <code>nix-shell</code>,</li><li>add <code>yadm</code> back in the <code>home-manager</code> config</li><li>run <code>home-manager sync</code> again, but this time out of the <code>nix-shell</code>.</li><li>Finally I can run my <code>~/bin/sync-env.sh</code> command.</li></ol><p>So this post will probably be useful as a personal note in the future. Because bootstrapping is generally not trivial. I will probably update this post if something is missing.</p><section class="footnotes" role="doc-endnotes"><hr></hr><ol><li id="fn1" role="doc-endnote"><p>I use fish for interactive shell. I use <code>zsh</code> for quick dirty scripts (a lot better than bash), and I switch to <a href="https://hackage.haskell.html/package/turtle">turtle</a> if I need to be serious about the script.<a href="https://her.esy.fun/posts/0021-my-personal-environment-sync/index.html#fnref1" class="footnote-back" role="doc-backlink">â†©ï¸Ž</a></p></li></ol></section></div>
]]></description>
</item>


<item>
<title>iA writer clone within doom-emacs</title>
<guid>https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html</guid>
<pubDate>Sun, 24 Oct 2021 00:00:00 +0200</pubDate>
<category>emacs</category>
<category>org-mode</category>
<description><![CDATA[
<div id="content"><p>So I played with tweaking my emacs configuration again. I think I made something worth to be shared. I wanted to have the same effect than in iA writer within emacs. And I just reached this.</p><p>So the effect I am looking to achieve can be seen in this video.</p><video src="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/zen-writer-demo.mov" width="100%" controls="(null)" autoplay="(null)">
</video><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/zen-writer-demo.mov">zen-writer-demo video (7.2MB)</a><p>It highlight the current sentence (in black) while the rest of the text is gray. The main issue with the <code>hl-sentence</code> package alone is that it set a specific face to the current sentence, but does not affect the other text in the buffer. In fact to make it work as I would expect, you need to make the default color grey, and only set black for the highlighted text.</p><p>Fortunately, I have recently created a personal theme close to that. I just created a new specific one. Everything is mostly "gray" except the font <code>hl-sentence</code> which is black.</p><p>And that's it. So to make it all work I need.</p><ul><li>a Gray theme,</li><li>the package <code>hl-sentence</code>,</li><li>the <code>writeroom</code> package.</li></ul><p>So how to achieve that yourself? Here is how I do it.</p><h2 id="the-zen-writer-theme">The zen-writer theme</h2><p>Download <a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/doom-zen-writer-theme.el">Doom Zen-Writer theme</a>. This depend on doom-themes and here is the code of the theme. Just put it in you <code>~/.doom.d/themes</code> directory.</p><h2 id="add-this-is-your--packages-el-">add this is your <code>packages.el</code></h2><pre class="elisp"><code>(package! hl-sentence
  :pin &quot;86ae38d3103bd20da5485cbdd59dfbd396c45ee4&quot;)
</code></pre><h2 id="helpers">Helpers</h2><p>You probably want to be able to put you out of this writing mode. Here is a <a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/zen-writer.el">zen-writer.el</a> file that contain my keymaps and useful functions.</p><p>Put it in you <code>~/.doom.d/</code> directory and in you <code>config.el</code> put</p><div class="sourceCode" id="cb2" data-org-language="emacs-lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb2-1"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb2-1" aria-hidden="true"></a>(load! <span class="st">&quot;~/.doom.d/zen-writer.el&quot;</span>)</span></code></pre></div><p>And with this you should pass to zen mode with <code>SPC y z z</code>.</p><p>To make the un-zen works. You will need to have a <code>y/auto-update-theme</code> function that set your current theme. My function change the theme depending on the time of the day or the day of the week.</p><p>So here it is for inspiration:</p><div class="sourceCode" id="cb3" data-org-language="emacs-lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb3-1"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-1" aria-hidden="true"></a>(<span class="kw">defun</span><span class="fu"> y/auto-update-theme </span>()</span>
<span id="cb3-2"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-2" aria-hidden="true"></a>  <span class="st">&quot;depending on time use different theme&quot;</span></span>
<span id="cb3-3"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-3" aria-hidden="true"></a>  <span class="co">;; very early =&gt; gruvbox-light, solarized-light, nord-light</span></span>
<span id="cb3-4"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-4" aria-hidden="true"></a>  (<span class="kw">let*</span> ((day-of-week (format-time-string <span class="st">&quot;%a&quot;</span>))</span>
<span id="cb3-5"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-5" aria-hidden="true"></a>         (week-end? (<span class="kw">or</span> (<span class="kw">equal</span> <span class="st">&quot;Sat&quot;</span> day-of-week)</span>
<span id="cb3-6"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-6" aria-hidden="true"></a>                        (<span class="kw">equal</span> <span class="st">&quot;Sun&quot;</span> day-of-week)))</span>
<span id="cb3-7"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-7" aria-hidden="true"></a>         (hour (<span class="kw">nth</span> <span class="dv">2</span> (decode-time (current-time))))</span>
<span id="cb3-8"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-8" aria-hidden="true"></a>         (time-to-sleep? (<span class="kw">or</span> (<span class="op">&gt;</span> hour <span class="dv">22</span>) (<span class="op">&lt;</span> hour <span class="dv">7</span>)))</span>
<span id="cb3-9"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-9" aria-hidden="true"></a></span>
<span id="cb3-10"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-10" aria-hidden="true"></a>         (theme (<span class="kw">cond</span></span>
<span id="cb3-11"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-11" aria-hidden="true"></a>                 (time-to-sleep?  &#39;doom-plain-dark)</span>
<span id="cb3-12"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-12" aria-hidden="true"></a>                 (week-end?       &#39;doom-nord-light)</span>
<span id="cb3-13"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-13" aria-hidden="true"></a>                 ((<span class="op">&lt;=</span> <span class="dv">7</span> hour <span class="dv">8</span>)   &#39;doom-gruvbox-light)</span>
<span id="cb3-14"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-14" aria-hidden="true"></a>                 ((<span class="op">=</span> <span class="dv">9</span> hour)      &#39;doom-solarized-light)</span>
<span id="cb3-15"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-15" aria-hidden="true"></a>                 ((<span class="op">&lt;=</span> <span class="dv">10</span> hour <span class="dv">16</span>) &#39;doom-solarized-white)</span>
<span id="cb3-16"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-16" aria-hidden="true"></a>                 ((<span class="op">&lt;=</span> <span class="dv">17</span> hour <span class="dv">18</span>) &#39;doom-gruvbox-light)</span>
<span id="cb3-17"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-17" aria-hidden="true"></a>                 ((<span class="op">&lt;=</span> <span class="dv">19</span> hour <span class="dv">22</span>) &#39;doom-oceanic-next))))</span>
<span id="cb3-18"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-18" aria-hidden="true"></a>    (<span class="kw">when</span> (<span class="kw">not</span> (<span class="kw">equal</span> doom-theme theme))</span>
<span id="cb3-19"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-19" aria-hidden="true"></a>      (<span class="kw">setq</span> doom-theme theme)</span>
<span id="cb3-20"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-20" aria-hidden="true"></a>      (load-theme doom-theme <span class="kw">t</span>))</span>
<span id="cb3-21"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-21" aria-hidden="true"></a>    <span class="co">;; run that function again next hour</span></span>
<span id="cb3-22"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb3-22" aria-hidden="true"></a>    (run-at-time (<span class="kw">format</span> <span class="st">&quot;%02d:%02d&quot;</span> (<span class="op">+</span> hour <span class="dv">1</span>) <span class="dv">0</span>) <span class="kw">nil</span> &#39;y/auto-update-theme)))</span></code></pre></div><h2 id="bonus">Bonus</h2><p>I use Nerd Fonts and in particular the font `iMWritingDuoS` which is I think a clone of the iAWriter font.</p><div class="sourceCode" id="cb4" data-org-language="emacs-lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb4-1"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb4-1" aria-hidden="true"></a>(<span class="kw">setq</span> doom-variable-pitch-font</span>
<span id="cb4-2"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb4-2" aria-hidden="true"></a>      (font-spec :family <span class="st">&quot;iMWritingDuoS Nerd Font&quot;</span> :size <span class="dv">12</span>))</span></code></pre></div><p>I hope you find this useful. I really like how it looks now.</p><h2 id="annex">Annex</h2><p>The code source used in this article.</p><h3 id="zen-writer">zen-writer</h3><div class="sourceCode" id="zen-writer.el" data-org-language="emacs-lisp" data-tangle="zen-writer.el"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="zen-writer.el-1"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-1" aria-hidden="true"></a><span class="co">;;; zen-writer.el -*- lexical-binding: t; -*-</span></span>
<span id="zen-writer.el-2"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-2" aria-hidden="true"></a></span>
<span id="zen-writer.el-3"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-3" aria-hidden="true"></a>(<span class="kw">defun</span><span class="fu"> y/zen </span>()</span>
<span id="zen-writer.el-4"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-4" aria-hidden="true"></a>  (interactive)</span>
<span id="zen-writer.el-5"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-5" aria-hidden="true"></a>  (<span class="kw">setq</span> doom-theme &#39;doom-zen-writer)</span>
<span id="zen-writer.el-6"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-6" aria-hidden="true"></a>  (load-theme doom-theme <span class="kw">t</span>)</span>
<span id="zen-writer.el-7"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-7" aria-hidden="true"></a>  (hl-sentence-mode +<span class="dv">1</span>))</span>
<span id="zen-writer.el-8"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-8" aria-hidden="true"></a></span>
<span id="zen-writer.el-9"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-9" aria-hidden="true"></a>(<span class="kw">defun</span><span class="fu"> y/unzen </span>()</span>
<span id="zen-writer.el-10"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-10" aria-hidden="true"></a>  (interactive)</span>
<span id="zen-writer.el-11"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-11" aria-hidden="true"></a>  (y/auto-update-theme)</span>
<span id="zen-writer.el-12"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-12" aria-hidden="true"></a>  (hl-sentence-mode <span class="dv">-1</span>))</span>
<span id="zen-writer.el-13"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-13" aria-hidden="true"></a></span>
<span id="zen-writer.el-14"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-14" aria-hidden="true"></a>(<span class="kw">defun</span><span class="fu"> y/zen-full </span>()</span>
<span id="zen-writer.el-15"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-15" aria-hidden="true"></a>  (interactive)</span>
<span id="zen-writer.el-16"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-16" aria-hidden="true"></a>  (y/zen)</span>
<span id="zen-writer.el-17"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-17" aria-hidden="true"></a>  (toggle-frame-fullscreen)</span>
<span id="zen-writer.el-18"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-18" aria-hidden="true"></a>  (doom-big-font-mode +<span class="dv">1</span>))</span>
<span id="zen-writer.el-19"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-19" aria-hidden="true"></a></span>
<span id="zen-writer.el-20"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-20" aria-hidden="true"></a>(<span class="kw">defun</span><span class="fu"> y/unzen-full </span>()</span>
<span id="zen-writer.el-21"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-21" aria-hidden="true"></a>  (interactive)</span>
<span id="zen-writer.el-22"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-22" aria-hidden="true"></a>  (y/unzen)</span>
<span id="zen-writer.el-23"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-23" aria-hidden="true"></a>  (toggle-frame-fullscreen)</span>
<span id="zen-writer.el-24"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-24" aria-hidden="true"></a>  (doom-big-font-mode <span class="dv">-1</span>))</span>
<span id="zen-writer.el-25"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-25" aria-hidden="true"></a></span>
<span id="zen-writer.el-26"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-26" aria-hidden="true"></a>(map! :leader</span>
<span id="zen-writer.el-27"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-27" aria-hidden="true"></a>      (:prefix (<span class="st">&quot;y z&quot;</span> . <span class="st">&quot;Zen Writer&quot;</span>)</span>
<span id="zen-writer.el-28"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-28" aria-hidden="true"></a>       :desc <span class="st">&quot;Full Zen Writer&quot;</span> <span class="st">&quot;z&quot;</span> #&#39;y/zen-full</span>
<span id="zen-writer.el-29"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-29" aria-hidden="true"></a>       :desc <span class="st">&quot;un-Full Zen Writer&quot;</span> <span class="st">&quot;u&quot;</span> #&#39;y/unzen-full</span>
<span id="zen-writer.el-30"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-30" aria-hidden="true"></a>       :desc <span class="st">&quot;Zen Writer&quot;</span> <span class="st">&quot;t&quot;</span> #&#39;y/zen</span>
<span id="zen-writer.el-31"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#zen-writer.el-31" aria-hidden="true"></a>       :desc <span class="st">&quot;un-Zen Writer&quot;</span> <span class="st">&quot;q&quot;</span> #&#39;y/unzen))</span></code></pre></div><h3 id="zen-writer-doom-theme">zen-writer doom theme</h3><div class="sourceCode" id="cb5" data-org-language="emacs-lisp" data-tangle="doom-zen-writer-theme.el"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb5-1"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-1" aria-hidden="true"></a><span class="co">;;; doom-zen-writer-theme.el --- -*- lexical-binding: t; no-byte-compile: t; -*-</span></span>
<span id="cb5-2"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-2" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb5-3"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-3" aria-hidden="true"></a><span class="co">;; Author: Yann Esposito &lt;https://github.com/yogsototh&gt;</span></span>
<span id="cb5-4"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-4" aria-hidden="true"></a><span class="co">;; Created: October 24, 2021</span></span>
<span id="cb5-5"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-5" aria-hidden="true"></a><span class="co">;; Version: 1.0.0</span></span>
<span id="cb5-6"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-6" aria-hidden="true"></a><span class="co">;; Keywords: custom themes, faces</span></span>
<span id="cb5-7"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-7" aria-hidden="true"></a><span class="co">;; Homepage: https://github.com/hlissner/emacs-doom-themes</span></span>
<span id="cb5-8"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-8" aria-hidden="true"></a><span class="co">;; Package-Requires: ((emacs &quot;25.1&quot;) (cl-lib &quot;0.5&quot;) (doom-themes &quot;2.2.1&quot;))</span></span>
<span id="cb5-9"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-9" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb5-10"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-10" aria-hidden="true"></a><span class="co">;;; Code:</span></span>
<span id="cb5-11"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-11" aria-hidden="true"></a></span>
<span id="cb5-12"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-12" aria-hidden="true"></a>(<span class="kw">require</span> &#39;doom-themes)</span>
<span id="cb5-13"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-13" aria-hidden="true"></a></span>
<span id="cb5-14"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-14" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb5-15"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-15" aria-hidden="true"></a><span class="co">;;; Variables</span></span>
<span id="cb5-16"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-16" aria-hidden="true"></a></span>
<span id="cb5-17"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-17" aria-hidden="true"></a>(defgroup doom-plain-theme <span class="kw">nil</span></span>
<span id="cb5-18"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-18" aria-hidden="true"></a>  <span class="st">&quot;Options for the `doom-plain&#39; theme.&quot;</span></span>
<span id="cb5-19"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-19" aria-hidden="true"></a>  :group &#39;doom-themes)</span>
<span id="cb5-20"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-20" aria-hidden="true"></a></span>
<span id="cb5-21"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-21" aria-hidden="true"></a>(defcustom doom-plain-padded-modeline doom-themes-padded-modeline</span>
<span id="cb5-22"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-22" aria-hidden="true"></a>  <span class="st">&quot;If non-nil, adds a 4px padding to the mode-line.</span></span>
<span id="cb5-23"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-23" aria-hidden="true"></a><span class="st">Can be an integer to determine the exact padding.&quot;</span></span>
<span id="cb5-24"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-24" aria-hidden="true"></a>  :group &#39;doom-plain-theme</span>
<span id="cb5-25"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-25" aria-hidden="true"></a>  <span class="bu">:type</span> &#39;(<span class="kw">or</span> <span class="kw">integer</span> <span class="kw">boolean</span>))</span>
<span id="cb5-26"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-26" aria-hidden="true"></a></span>
<span id="cb5-27"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-27" aria-hidden="true"></a></span>
<span id="cb5-28"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-28" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb5-29"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-29" aria-hidden="true"></a><span class="co">;;; Theme definition</span></span>
<span id="cb5-30"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-30" aria-hidden="true"></a></span>
<span id="cb5-31"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-31" aria-hidden="true"></a>(def-doom-theme doom-zen-writer</span>
<span id="cb5-32"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-32" aria-hidden="true"></a>  <span class="st">&quot;Theme inspired by gko&#39;s plain.&quot;</span></span>
<span id="cb5-33"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-33" aria-hidden="true"></a></span>
<span id="cb5-34"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-34" aria-hidden="true"></a>  <span class="co">;; name      default/256/16</span></span>
<span id="cb5-35"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-35" aria-hidden="true"></a>  ((bg         &#39;(<span class="st">&quot;#ffffff&quot;</span>))</span>
<span id="cb5-36"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-36" aria-hidden="true"></a>   (bg-alt     &#39;(<span class="st">&quot;#eaecea&quot;</span>))</span>
<span id="cb5-37"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-37" aria-hidden="true"></a>   (base0      &#39;(<span class="st">&quot;#969896&quot;</span>))</span>
<span id="cb5-38"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-38" aria-hidden="true"></a>   (base1      &#39;(<span class="st">&quot;#f1f3f5&quot;</span>))</span>
<span id="cb5-39"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-39" aria-hidden="true"></a>   (base2      &#39;(<span class="st">&quot;#606666&quot;</span>))</span>
<span id="cb5-40"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-40" aria-hidden="true"></a>   (base3      &#39;(<span class="st">&quot;#cccccc&quot;</span>))</span>
<span id="cb5-41"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-41" aria-hidden="true"></a>   (base4      &#39;(<span class="st">&quot;#e7e7e7&quot;</span>))</span>
<span id="cb5-42"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-42" aria-hidden="true"></a>   (base5      &#39;(<span class="st">&quot;#a5a8a6&quot;</span>))</span>
<span id="cb5-43"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-43" aria-hidden="true"></a>   (base6      &#39;(<span class="st">&quot;#fafafa&quot;</span>))</span>
<span id="cb5-44"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-44" aria-hidden="true"></a>   (base7      &#39;(<span class="st">&quot;#dfdfdf&quot;</span>))</span>
<span id="cb5-45"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-45" aria-hidden="true"></a>   (base8      &#39;(<span class="st">&quot;#fafafa&quot;</span>))</span>
<span id="cb5-46"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-46" aria-hidden="true"></a>   (fg         &#39;(<span class="st">&quot;#969896&quot;</span>))</span>
<span id="cb5-47"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-47" aria-hidden="true"></a>   (fg-alt     (doom-lighten fg <span class="fl">0.15</span>))</span>
<span id="cb5-48"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-48" aria-hidden="true"></a></span>
<span id="cb5-49"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-49" aria-hidden="true"></a>   (grey       fg)</span>
<span id="cb5-50"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-50" aria-hidden="true"></a>   (red        fg)</span>
<span id="cb5-51"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-51" aria-hidden="true"></a>   (blue       fg)</span>
<span id="cb5-52"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-52" aria-hidden="true"></a>   (dark-blue  fg)</span>
<span id="cb5-53"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-53" aria-hidden="true"></a>   (orange     fg)</span>
<span id="cb5-54"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-54" aria-hidden="true"></a>   (green      fg)</span>
<span id="cb5-55"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-55" aria-hidden="true"></a>   (teal       fg)</span>
<span id="cb5-56"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-56" aria-hidden="true"></a>   (yellow     fg)</span>
<span id="cb5-57"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-57" aria-hidden="true"></a>   (magenta    fg)</span>
<span id="cb5-58"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-58" aria-hidden="true"></a>   (violet     fg)</span>
<span id="cb5-59"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-59" aria-hidden="true"></a>   (cyan       fg)</span>
<span id="cb5-60"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-60" aria-hidden="true"></a>   (dark-cyan  fg)</span>
<span id="cb5-61"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-61" aria-hidden="true"></a></span>
<span id="cb5-62"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-62" aria-hidden="true"></a>   <span class="co">;; face categories -- required for all themes</span></span>
<span id="cb5-63"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-63" aria-hidden="true"></a>   (highlight      base2)</span>
<span id="cb5-64"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-64" aria-hidden="true"></a>   (vertical-bar   base5)</span>
<span id="cb5-65"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-65" aria-hidden="true"></a>   (selection      base1)</span>
<span id="cb5-66"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-66" aria-hidden="true"></a>   (builtin        base0)</span>
<span id="cb5-67"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-67" aria-hidden="true"></a>   (comments       base5)</span>
<span id="cb5-68"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-68" aria-hidden="true"></a>   (doc-comments   base5)</span>
<span id="cb5-69"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-69" aria-hidden="true"></a>   (constants      base0)</span>
<span id="cb5-70"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-70" aria-hidden="true"></a>   (functions      fg)</span>
<span id="cb5-71"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-71" aria-hidden="true"></a>   (keywords       fg)</span>
<span id="cb5-72"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-72" aria-hidden="true"></a>   (methods        fg)</span>
<span id="cb5-73"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-73" aria-hidden="true"></a>   (operators      fg)</span>
<span id="cb5-74"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-74" aria-hidden="true"></a>   (<span class="kw">type</span>           fg)</span>
<span id="cb5-75"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-75" aria-hidden="true"></a>   (strings        base0)</span>
<span id="cb5-76"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-76" aria-hidden="true"></a>   (variables      base0)</span>
<span id="cb5-77"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-77" aria-hidden="true"></a>   (numbers        base0)</span>
<span id="cb5-78"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-78" aria-hidden="true"></a>   (region         base4)</span>
<span id="cb5-79"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-79" aria-hidden="true"></a>   (<span class="kw">error</span>          (doom-blend fg <span class="st">&quot;#ff0000&quot;</span> <span class="fl">0.4</span>))</span>
<span id="cb5-80"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-80" aria-hidden="true"></a>   (<span class="kw">warning</span>        base2)</span>
<span id="cb5-81"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-81" aria-hidden="true"></a>   (success        green)</span>
<span id="cb5-82"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-82" aria-hidden="true"></a>   (vc-modified    base5)</span>
<span id="cb5-83"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-83" aria-hidden="true"></a>   (vc-added       (doom-lighten fg <span class="fl">0.7</span>))</span>
<span id="cb5-84"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-84" aria-hidden="true"></a>   (vc-deleted     base2)</span>
<span id="cb5-85"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-85" aria-hidden="true"></a></span>
<span id="cb5-86"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-86" aria-hidden="true"></a>   <span class="co">;; custom categories</span></span>
<span id="cb5-87"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-87" aria-hidden="true"></a>   (-modeline-pad</span>
<span id="cb5-88"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-88" aria-hidden="true"></a>    (<span class="kw">when</span> doom-plain-padded-modeline</span>
<span id="cb5-89"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-89" aria-hidden="true"></a>      (<span class="kw">if</span> (<span class="kw">integerp</span> doom-plain-padded-modeline) doom-plain-padded-modeline <span class="dv">4</span>)))</span>
<span id="cb5-90"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-90" aria-hidden="true"></a></span>
<span id="cb5-91"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-91" aria-hidden="true"></a>   (modeline-bg              (doom-darken bg-alt <span class="fl">0.15</span>))</span>
<span id="cb5-92"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-92" aria-hidden="true"></a>   (modeline-bg-alt          (doom-darken bg-alt <span class="fl">0.1</span>))</span>
<span id="cb5-93"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-93" aria-hidden="true"></a>   (modeline-bg-inactive     (doom-darken bg-alt <span class="fl">0.1</span>))</span>
<span id="cb5-94"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-94" aria-hidden="true"></a>   (modeline-bg-inactive-alt bg-alt)</span>
<span id="cb5-95"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-95" aria-hidden="true"></a>   (modeline-fg              fg)</span>
<span id="cb5-96"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-96" aria-hidden="true"></a>   (modeline-fg-alt          (doom-darken modeline-bg-inactive <span class="fl">0.35</span>)))</span>
<span id="cb5-97"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-97" aria-hidden="true"></a></span>
<span id="cb5-98"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-98" aria-hidden="true"></a>  <span class="co">;;;; Base theme face overrides</span></span>
<span id="cb5-99"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-99" aria-hidden="true"></a>  ((<span class="kw">error</span>   :underline `(:style wave :color ,<span class="kw">error</span>))</span>
<span id="cb5-100"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-100" aria-hidden="true"></a>   (<span class="kw">warning</span> :underline `(:style wave :color ,<span class="kw">warning</span>))</span>
<span id="cb5-101"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-101" aria-hidden="true"></a>   (hl-sentence :foreground <span class="st">&quot;#000000&quot;</span> :background bg)</span>
<span id="cb5-102"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-102" aria-hidden="true"></a>   ((font-lock-constant-face &amp;override)      :slant &#39;italic)</span>
<span id="cb5-103"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-103" aria-hidden="true"></a>   ((font-lock-comment-face &amp;override)       :slant &#39;italic)</span>
<span id="cb5-104"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-104" aria-hidden="true"></a>   ((font-lock-function-name-face &amp;override) :slant &#39;italic)</span>
<span id="cb5-105"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-105" aria-hidden="true"></a>   ((font-lock-type-face &amp;override)          :slant &#39;italic)</span>
<span id="cb5-106"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-106" aria-hidden="true"></a>   (hl-line :background base8)</span>
<span id="cb5-107"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-107" aria-hidden="true"></a>   ((line-number &amp;override) :foreground base3)</span>
<span id="cb5-108"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-108" aria-hidden="true"></a>   ((line-number-current-line &amp;override) :foreground base2)</span>
<span id="cb5-109"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-109" aria-hidden="true"></a>   (mode-line</span>
<span id="cb5-110"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-110" aria-hidden="true"></a>    :background modeline-bg :foreground modeline-fg</span>
<span id="cb5-111"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-111" aria-hidden="true"></a>    :box (<span class="kw">if</span> -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg)))</span>
<span id="cb5-112"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-112" aria-hidden="true"></a>   (mode-line-inactive</span>
<span id="cb5-113"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-113" aria-hidden="true"></a>    :background modeline-bg-inactive :foreground modeline-fg-alt</span>
<span id="cb5-114"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-114" aria-hidden="true"></a>    :box (<span class="kw">if</span> -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-inactive)))</span>
<span id="cb5-115"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-115" aria-hidden="true"></a>   (mode-line-emphasis :foreground highlight)</span>
<span id="cb5-116"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-116" aria-hidden="true"></a></span>
<span id="cb5-117"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-117" aria-hidden="true"></a>   <span class="co">;;;; doom-modeline</span></span>
<span id="cb5-118"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-118" aria-hidden="true"></a>   (doom-modeline-bar :background modeline-bg)</span>
<span id="cb5-119"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-119" aria-hidden="true"></a>   (doom-modeline-bar-inactive :inherit &#39;doom-modeline-bar)</span>
<span id="cb5-120"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-120" aria-hidden="true"></a>   (doom-modeline-project-dir :foreground fg)</span>
<span id="cb5-121"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-121" aria-hidden="true"></a>   (doom-modeline-buffer-file :foreground fg)</span>
<span id="cb5-122"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-122" aria-hidden="true"></a>   (doom-modeline-buffer-modified :weight &#39;bold :foreground <span class="st">&quot;#000000&quot;</span>)</span>
<span id="cb5-123"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-123" aria-hidden="true"></a>   (doom-modeline-panel :inherit &#39;mode-line-highlight :background base3 :foreground fg)</span>
<span id="cb5-124"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-124" aria-hidden="true"></a>   <span class="co">;;;; ivy</span></span>
<span id="cb5-125"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-125" aria-hidden="true"></a>   (ivy-posframe :background bg-alt)</span>
<span id="cb5-126"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-126" aria-hidden="true"></a>   <span class="co">;;;; magit</span></span>
<span id="cb5-127"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-127" aria-hidden="true"></a>   ((magit-diff-added-highlight &amp;override)   :foreground fg :background (doom-blend vc-added bg <span class="fl">0.3</span>))</span>
<span id="cb5-128"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-128" aria-hidden="true"></a>   ((magit-diff-removed &amp;override)           :foreground (doom-lighten fg <span class="fl">0.4</span>) :background (doom-blend vc-deleted bg <span class="fl">0.1</span>))</span>
<span id="cb5-129"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-129" aria-hidden="true"></a>   ((magit-diff-removed-highlight &amp;override) :foreground fg :background (doom-blend vc-deleted bg <span class="fl">0.22</span>))</span>
<span id="cb5-130"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-130" aria-hidden="true"></a>   <span class="co">;;;; lsp-mode</span></span>
<span id="cb5-131"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-131" aria-hidden="true"></a>   (lsp-headerline-breadcrumb-symbols-face :foreground keywords :weight &#39;bold)</span>
<span id="cb5-132"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-132" aria-hidden="true"></a>   <span class="co">;;;; outline &lt;built-in&gt;</span></span>
<span id="cb5-133"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-133" aria-hidden="true"></a>   (outline<span class="dv">-1</span> :slant &#39;italic :foreground fg-alt)</span>
<span id="cb5-134"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-134" aria-hidden="true"></a>   (outline<span class="dv">-2</span> :inherit &#39;outline<span class="dv">-1</span> :foreground base2)</span>
<span id="cb5-135"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-135" aria-hidden="true"></a>   (outline<span class="dv">-3</span> :inherit &#39;outline<span class="dv">-2</span>)</span>
<span id="cb5-136"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-136" aria-hidden="true"></a>   (outline<span class="dv">-4</span> :inherit &#39;outline<span class="dv">-3</span>)</span>
<span id="cb5-137"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-137" aria-hidden="true"></a>   (outline<span class="dv">-5</span> :inherit &#39;outline<span class="dv">-4</span>)</span>
<span id="cb5-138"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-138" aria-hidden="true"></a>   (outline<span class="dv">-6</span> :inherit &#39;outline<span class="dv">-5</span>)</span>
<span id="cb5-139"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-139" aria-hidden="true"></a>   (outline<span class="dv">-7</span> :inherit &#39;outline<span class="dv">-6</span>)</span>
<span id="cb5-140"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-140" aria-hidden="true"></a>   (outline<span class="dv">-8</span> :inherit &#39;outline<span class="dv">-7</span>)</span>
<span id="cb5-141"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-141" aria-hidden="true"></a>   <span class="co">;;;; org &lt;built-in&gt;</span></span>
<span id="cb5-142"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-142" aria-hidden="true"></a>   ((org-block &amp;override) :background bg-alt)</span>
<span id="cb5-143"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-143" aria-hidden="true"></a>   ((org-block-begin-line &amp;override) :foreground base5)</span>
<span id="cb5-144"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-144" aria-hidden="true"></a>   <span class="co">;;;; solaire-mode</span></span>
<span id="cb5-145"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-145" aria-hidden="true"></a>   (solaire-mode-line-face</span>
<span id="cb5-146"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-146" aria-hidden="true"></a>    :inherit &#39;mode-line</span>
<span id="cb5-147"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-147" aria-hidden="true"></a>    :background modeline-bg-alt</span>
<span id="cb5-148"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-148" aria-hidden="true"></a>    :box (<span class="kw">if</span> -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-alt)))</span>
<span id="cb5-149"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-149" aria-hidden="true"></a>   (solaire-mode-line-inactive-face</span>
<span id="cb5-150"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-150" aria-hidden="true"></a>    :inherit &#39;mode-line-inactive</span>
<span id="cb5-151"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-151" aria-hidden="true"></a>    :background modeline-bg-inactive-alt</span>
<span id="cb5-152"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-152" aria-hidden="true"></a>    :box (<span class="kw">if</span> -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-inactive-alt)))))</span>
<span id="cb5-153"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-153" aria-hidden="true"></a></span>
<span id="cb5-154"><a href="https://her.esy.fun/posts/0021-ia-writer-clone-within-doom-emacs/index.html#cb5-154" aria-hidden="true"></a><span class="co">;;; doom-zen-writer-theme.el ends here</span></span></code></pre></div></div>
]]></description>
</item>


<item>
<title>Cool looking org-mode</title>
<guid>https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html</guid>
<pubDate>Sat, 21 Aug 2021 00:00:00 +0200</pubDate>
<category>org-mode</category>
<category>emacs</category>
<description><![CDATA[
<div id="content"><div class="notes"><p>TL;DR: My tweaked configuration to make org-mode even more pleasant to use.</p></div><h2 id="the-code">The code</h2><p>At the end of this article there is a long digression about why I ended up here. But instead of bothering you with the why here is a what it looks like, and how to achieve it.</p><p>First you need to install some dependencies.</p><ol><li>Install nerdfonts<a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a></li><li>Tell org-mode to use <code>variable-pitch-mode</code> (variable width font)</li><li>Use <code>(setq org-hide-emphasis-markers t)</code></li><li>Configure a lot of org-mode specific faces to still use a monospaced font.</li></ol><p>Here are some images of the result. Notice one important factor of the feel is that I work on a mac with retina display. Often font rendering feel too bold by default. But this is perfect to have a writing environment even if screenshot does not look as slick as other ones, the usage is superior.</p><figure><img src="https://her.esy.fun/posts/0020-cool-looking-org-mode/top.png.webp" title="top" alt="org-mode headers"></img><figcaption aria-hidden="true">org-mode headers</figcaption></figure><figure><img src="https://her.esy.fun/posts/0020-cool-looking-org-mode/img-with-caption.png.webp" title="img-with-caption" alt="org-mode some inline image"></img><figcaption aria-hidden="true">org-mode some inline image</figcaption></figure><figure><img src="https://her.esy.fun/posts/0020-cool-looking-org-mode/code.png.webp" title="img-with-caption" alt="org-mode with some code block"></img><figcaption aria-hidden="true">org-mode with some code block</figcaption></figure><figure><img src="https://her.esy.fun/posts/0020-cool-looking-org-mode/y-org-mode.png.webp" title="nano-emacs" alt="Org mode with a modified doom-solarized light theme (use a grey background)"></img><figcaption aria-hidden="true">Org mode with a modified doom-solarized light theme (use a grey background)</figcaption></figure><p>The main trick is to change org-mode to use different font depending on the kind of bloc. I use two fonts variant which are an iA Writer clone fonts; iM Writing Nerd Font.</p><p>First you need to install nerd-fonts<a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>. You will get that <code>iMWritingDuoS Nerd Font</code>. If you look at the code block; I support the case when the font is not installed and fall back to Georgia or PT Serif. One nice little bonus of the config is to make the fixed width fonts smaller. This is often something I like when writing in org-mode.</p><p>There is a minor dependency on <code>doom</code> as I use <code>doom-color</code> for the color of the links. But you could easily use any color you like if you do not use doom.</p><div class="sourceCode" id="cb1" data-org-language="emacs-lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb1-1"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-1" aria-hidden="true"></a>(<span class="kw">setq</span> org-ellipsis <span class="st">&quot; [+]&quot;</span>)</span>
<span id="cb1-2"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-2" aria-hidden="true"></a>(add-hook &#39;org-mode-hook &#39;variable-pitch-mode)</span>
<span id="cb1-3"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-3" aria-hidden="true"></a>(<span class="kw">let*</span> ((variable-tuple</span>
<span id="cb1-4"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-4" aria-hidden="true"></a>        (<span class="kw">cond</span></span>
<span id="cb1-5"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-5" aria-hidden="true"></a>         ((x-list-fonts <span class="st">&quot;iMWritingDuoS Nerd Font&quot;</span>)   &#39;(:family <span class="st">&quot;iMWritingDuoS Nerd Font&quot;</span>))</span>
<span id="cb1-6"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-6" aria-hidden="true"></a>         ((x-list-fonts <span class="st">&quot;Georgia&quot;</span>)   &#39;(:family <span class="st">&quot;Georgia&quot;</span>))</span>
<span id="cb1-7"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-7" aria-hidden="true"></a>         ((x-list-fonts <span class="st">&quot;PT Serif&quot;</span>)  &#39;(:family <span class="st">&quot;PT Serif&quot;</span>))))</span>
<span id="cb1-8"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-8" aria-hidden="true"></a>       (fixed-tuple</span>
<span id="cb1-9"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-9" aria-hidden="true"></a>        (<span class="kw">cond</span></span>
<span id="cb1-10"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-10" aria-hidden="true"></a>         ((x-list-fonts <span class="st">&quot;iMWritingDuoS Nerd Font Mono&quot;</span>)   &#39;(:family <span class="st">&quot;iMWritingDuoS Nerd Font Mono&quot;</span>   :height <span class="dv">160</span>))</span>
<span id="cb1-11"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-11" aria-hidden="true"></a>         ((x-list-fonts <span class="st">&quot;Menlo&quot;</span>)               &#39;(:family <span class="st">&quot;Menlo&quot;</span>    :height <span class="dv">120</span>))</span>
<span id="cb1-12"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-12" aria-hidden="true"></a>         ((x-list-fonts <span class="st">&quot;PT Mono&quot;</span>)             &#39;(:family <span class="st">&quot;PT Mono&quot;</span>  :height <span class="dv">120</span>))))</span>
<span id="cb1-13"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-13" aria-hidden="true"></a>       (headline `(:inherit default :weight bold)))</span>
<span id="cb1-14"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-14" aria-hidden="true"></a>  (custom-theme-set-faces</span>
<span id="cb1-15"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-15" aria-hidden="true"></a>   &#39;user</span>
<span id="cb1-16"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-16" aria-hidden="true"></a>   `(org-level<span class="dv">-1</span> ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-17"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-17" aria-hidden="true"></a>   `(org-level<span class="dv">-2</span> ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-18"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-18" aria-hidden="true"></a>   `(org-level<span class="dv">-3</span> ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-19"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-19" aria-hidden="true"></a>   `(org-level<span class="dv">-4</span> ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-20"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-20" aria-hidden="true"></a>   `(org-level<span class="dv">-5</span> ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-21"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-21" aria-hidden="true"></a>   `(org-level<span class="dv">-6</span> ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-22"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-22" aria-hidden="true"></a>   `(org-level<span class="dv">-7</span> ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-23"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-23" aria-hidden="true"></a>   `(org-level<span class="dv">-8</span> ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-24"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-24" aria-hidden="true"></a>   `(org-document-title ((<span class="kw">t</span> (,@headline ,@variable-tuple))))</span>
<span id="cb1-25"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-25" aria-hidden="true"></a></span>
<span id="cb1-26"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-26" aria-hidden="true"></a>   `(variable-pitch     ((<span class="kw">t</span> ,@variable-tuple)))</span>
<span id="cb1-27"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-27" aria-hidden="true"></a>   `(fixed-pitch        ((<span class="kw">t</span> ,@fixed-tuple)))</span>
<span id="cb1-28"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-28" aria-hidden="true"></a></span>
<span id="cb1-29"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-29" aria-hidden="true"></a>   &#39;(org-ellipsis ((<span class="kw">t</span> (:inherit fixed-pitch :foreground <span class="st">&quot;gray40&quot;</span> :underline <span class="kw">nil</span>))))</span>
<span id="cb1-30"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-30" aria-hidden="true"></a>   &#39;(org-block            ((<span class="kw">t</span> (:inherit fixed-pitch))))</span>
<span id="cb1-31"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-31" aria-hidden="true"></a>   &#39;(org-block-begin-line ((<span class="kw">t</span> (:inherit fixed-pitch))))</span>
<span id="cb1-32"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-32" aria-hidden="true"></a>   &#39;(org-block-end-line   ((<span class="kw">t</span> (:inherit fixed-pitch))))</span>
<span id="cb1-33"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-33" aria-hidden="true"></a>   &#39;(org-src              ((<span class="kw">t</span> (:inherit fixed-pitch))))</span>
<span id="cb1-34"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-34" aria-hidden="true"></a>   &#39;(org-properties       ((<span class="kw">t</span> (:inherit fixed-pitch))))</span>
<span id="cb1-35"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-35" aria-hidden="true"></a>   &#39;(org-code             ((<span class="kw">t</span> (:inherit (<span class="kw">shadow</span> fixed-pitch)))))</span>
<span id="cb1-36"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-36" aria-hidden="true"></a>   &#39;(org-date             ((<span class="kw">t</span> (:inherit (<span class="kw">shadow</span> fixed-pitch)))))</span>
<span id="cb1-37"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-37" aria-hidden="true"></a>   &#39;(org-document-info    ((<span class="kw">t</span> (:inherit (<span class="kw">shadow</span> fixed-pitch)))))</span>
<span id="cb1-38"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-38" aria-hidden="true"></a>   &#39;(org-document-info-keyword ((<span class="kw">t</span> (:inherit (<span class="kw">shadow</span> fixed-pitch)))))</span>
<span id="cb1-39"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-39" aria-hidden="true"></a>   &#39;(org-drawer           ((<span class="kw">t</span> (:inherit (<span class="kw">shadow</span> fixed-pitch)))))</span>
<span id="cb1-40"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-40" aria-hidden="true"></a>   &#39;(org-indent           ((<span class="kw">t</span> (:inherit (org-hide fixed-pitch)))))</span>
<span id="cb1-41"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-41" aria-hidden="true"></a>   `(org-link             ((<span class="kw">t</span> (:inherit fixed-pitch :foreground ,(doom-color &#39;blue) :underline <span class="kw">t</span>))))</span>
<span id="cb1-42"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-42" aria-hidden="true"></a>   &#39;(org-meta-line        ((<span class="kw">t</span> (:inherit (font-lock-comment-face fixed-pitch)))))</span>
<span id="cb1-43"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-43" aria-hidden="true"></a>   &#39;(org-property-value   ((<span class="kw">t</span> (:inherit fixed-pitch))) <span class="kw">t</span>)</span>
<span id="cb1-44"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-44" aria-hidden="true"></a>   &#39;(org-special-keyword  ((<span class="kw">t</span> (:inherit (font-lock-comment-face fixed-pitch)))))</span>
<span id="cb1-45"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-45" aria-hidden="true"></a>   &#39;(org-table            ((<span class="kw">t</span> (:inherit fixed-pitch))))</span>
<span id="cb1-46"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-46" aria-hidden="true"></a>   &#39;(org-tag              ((<span class="kw">t</span> (:inherit (<span class="kw">shadow</span> fixed-pitch) :weight bold :height <span class="fl">0.8</span>))))</span>
<span id="cb1-47"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb1-47" aria-hidden="true"></a>   &#39;(org-verbatim         ((<span class="kw">t</span> (:inherit (<span class="kw">shadow</span> fixed-pitch)))))))</span></code></pre></div><h2 id="digression-about-why-i-did-that-">Digression about why I did that;</h2><p>For some reason a went to the rabbit hole of tweaking my emacs. In fact, it first started as; let's try to switch from <code>doom-emacs</code><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a> to <code>nano-emacs</code><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a>. But, doing so, I realized I wouldn't be able to reach the quality and optimization provided by doom-emacs myself. So instead of doing this, I first tried to copy the theme of nano. Then I realized one of the biggest factor of nano look & feel was its usage of "Roboto Mono" but with weight light (or Thin).</p><p>See</p><figure><img src="https://her.esy.fun/posts/0020-cool-looking-org-mode/nano-emacs-light.png.webp" title="nano-emacs" alt="GNU Emacs / N Î› N O Look (light theme)"></img><figcaption aria-hidden="true">GNU Emacs / N Î› N O Look (light theme)</figcaption></figure><figure><img src="https://her.esy.fun/posts/0020-cool-looking-org-mode/nano-emacs-dark.png.webp" title="nano-emacs" alt="GNU Emacs / N Î› N O Look (dark theme)"></img><figcaption aria-hidden="true">GNU Emacs / N Î› N O Look (dark theme)</figcaption></figure><p>OK soâ€¦ I just tried to match the theme colors. It was easy to create a theme with matching colors. <strong>But</strong>, to make it really looks like nano; almost monochrome with two accent colors; it would mean a lot more work than anyone could expect. For most emacs mode you probably need to add a set of specific font faces. This choice is also what makes nano looks so good too. This is not just about the color, but about a lot more details than that. Using the good colors only at the right place is difficult to achieve. And not only the colors, but also, the correct fonts, the spacing of text elements etcâ€¦</p><p>Unfortunately if you want the nano look and feel in doom, it is much more work than just copying the nano theme.</p><p>But this research of look and feel opened the door to using thin fonts in emacs. And also tweaking the fonts which really improve the look & feel of emacs.</p><p>With this conf, I do not use the same font for coding and for writing prose or a blog post with code blocks. So far, I like this new look and feel.</p><h2 id="bonuses">Bonuses</h2><h3 id="thin-code-fonts">Thin Code fonts</h3><p>After lot of try, I finally switched my default coding font to SauceCodePro Nerd Font Mono with weight <code>semi-light</code>. This is a clone of Adobe <code>SourceCode Pro</code>. And on a retina display it is really nice to use.</p><div class="sourceCode" id="cb2" data-org-language="emacs-lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb2-1"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb2-1" aria-hidden="true"></a>(<span class="kw">setq</span> doom-font (font-spec :family <span class="st">&quot;SauceCodePro Nerd Font Mono&quot;</span> :size <span class="dv">12</span> :weight &#39;semi-light)</span>
<span id="cb2-2"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb2-2" aria-hidden="true"></a>      doom-variable-pitch-font (font-spec :family <span class="st">&quot;iMWritingDuoS Nerd Font&quot;</span> :size <span class="dv">14</span>))</span></code></pre></div><h3 id="an-unfinished-nano-theme-for-doom">An unfinished nano theme for doom</h3><p>Even though the result is not 100% satisfactory, you could start using my work. Save this file into <code>~/.doom.d/themes/doom-nano-theme.el</code>:</p><div class="sourceCode" id="cb3" data-org-language="lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb3-1"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-1" aria-hidden="true"></a><span class="co">;;; doom-nano-theme.el --- inspired by Nicolas Rougier nano-theme -*- lexical-binding: t; no-byte-compile: t; -*-</span></span>
<span id="cb3-2"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-2" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb3-3"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-3" aria-hidden="true"></a><span class="co">;; Author: Yann Esposito &lt;https://yannesposito.com&gt;</span></span>
<span id="cb3-4"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-4" aria-hidden="true"></a><span class="co">;; Created: August 16, 2021</span></span>
<span id="cb3-5"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-5" aria-hidden="true"></a><span class="co">;; Version: 1.0.0</span></span>
<span id="cb3-6"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-6" aria-hidden="true"></a><span class="co">;; Keywords: custom themes, faces</span></span>
<span id="cb3-7"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-7" aria-hidden="true"></a><span class="co">;; Homepage: https://github.com/hlissner/emacs-doom-themes</span></span>
<span id="cb3-8"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-8" aria-hidden="true"></a><span class="co">;; Package-Requires: ((emacs &quot;25.1&quot;) (cl-lib &quot;0.5&quot;) (doom-themes &quot;2.2.1&quot;))</span></span>
<span id="cb3-9"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-9" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb3-10"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-10" aria-hidden="true"></a><span class="co">;;; Commentary:</span></span>
<span id="cb3-11"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-11" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb3-12"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-12" aria-hidden="true"></a><span class="co">;; Ported from nano-theme: https://github.com/rougier/nano-theme</span></span>
<span id="cb3-13"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-13" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb3-14"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-14" aria-hidden="true"></a><span class="co">;;; Code:</span></span>
<span id="cb3-15"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-15" aria-hidden="true"></a></span>
<span id="cb3-16"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-16" aria-hidden="true"></a>(<span class="kw">require</span> &#39;doom-themes)</span>
<span id="cb3-17"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-17" aria-hidden="true"></a></span>
<span id="cb3-18"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-18" aria-hidden="true"></a><span class="co">;;; Variables</span></span>
<span id="cb3-19"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-19" aria-hidden="true"></a></span>
<span id="cb3-20"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-20" aria-hidden="true"></a>(defgroup doom-plain-theme <span class="kw">nil</span></span>
<span id="cb3-21"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-21" aria-hidden="true"></a>  <span class="st">&quot;Options for the `doom-plain&#39; theme.&quot;</span></span>
<span id="cb3-22"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-22" aria-hidden="true"></a>  :group &#39;doom-themes)</span>
<span id="cb3-23"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-23" aria-hidden="true"></a></span>
<span id="cb3-24"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-24" aria-hidden="true"></a>(defcustom doom-plain-padded-modeline doom-themes-padded-modeline</span>
<span id="cb3-25"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-25" aria-hidden="true"></a>  <span class="st">&quot;If non-nil, adds a 4px padding to the mode-line.</span></span>
<span id="cb3-26"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-26" aria-hidden="true"></a><span class="st">Can be an integer to determine the exact padding.&quot;</span></span>
<span id="cb3-27"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-27" aria-hidden="true"></a>  :group &#39;doom-plain-theme</span>
<span id="cb3-28"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-28" aria-hidden="true"></a>  <span class="bu">:type</span> &#39;(<span class="kw">or</span> <span class="kw">integer</span> <span class="kw">boolean</span>))</span>
<span id="cb3-29"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-29" aria-hidden="true"></a><span class="co">;;</span></span>
<span id="cb3-30"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-30" aria-hidden="true"></a><span class="co">;;; Theme definition</span></span>
<span id="cb3-31"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-31" aria-hidden="true"></a></span>
<span id="cb3-32"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-32" aria-hidden="true"></a>(def-doom-theme doom-nano</span>
<span id="cb3-33"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-33" aria-hidden="true"></a>  <span class="st">&quot;Theme inspired by Nicolas Rougier nano-theme&quot;</span></span>
<span id="cb3-34"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-34" aria-hidden="true"></a></span>
<span id="cb3-35"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-35" aria-hidden="true"></a>  <span class="co">;; name      default/256/16</span></span>
<span id="cb3-36"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-36" aria-hidden="true"></a>  ((nano-color-foreground &#39;(<span class="st">&quot;#37474F&quot;</span>)) <span class="co">;; Blue Grey / L800</span></span>
<span id="cb3-37"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-37" aria-hidden="true"></a>   (nano-color-background &#39;(<span class="st">&quot;#FFFFFF&quot;</span>)) <span class="co">;; White</span></span>
<span id="cb3-38"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-38" aria-hidden="true"></a>   (nano-color-highlight  &#39;(<span class="st">&quot;#FAFAFA&quot;</span>)) <span class="co">;; Very Light Grey</span></span>
<span id="cb3-39"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-39" aria-hidden="true"></a>   (nano-color-critical   &#39;(<span class="st">&quot;#FF6F00&quot;</span>)) <span class="co">;; Amber / L900</span></span>
<span id="cb3-40"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-40" aria-hidden="true"></a>   (nano-color-salient    &#39;(<span class="st">&quot;#673AB7&quot;</span>)) <span class="co">;; Deep Purple / L500</span></span>
<span id="cb3-41"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-41" aria-hidden="true"></a>   (nano-color-strong     &#39;(<span class="st">&quot;#000000&quot;</span>)) <span class="co">;; Black</span></span>
<span id="cb3-42"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-42" aria-hidden="true"></a>   (nano-color-popout     &#39;(<span class="st">&quot;#FFAB91&quot;</span>)) <span class="co">;; Deep Orange / L200</span></span>
<span id="cb3-43"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-43" aria-hidden="true"></a>   (nano-color-subtle     &#39;(<span class="st">&quot;#ECEFF1&quot;</span>)) <span class="co">;; Blue Grey / L50</span></span>
<span id="cb3-44"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-44" aria-hidden="true"></a>   (nano-color-faded      &#39;(<span class="st">&quot;#B0BEC5&quot;</span>)) <span class="co">;; Blue Grey / L200</span></span>
<span id="cb3-45"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-45" aria-hidden="true"></a></span>
<span id="cb3-46"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-46" aria-hidden="true"></a>   (bg         nano-color-background)</span>
<span id="cb3-47"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-47" aria-hidden="true"></a>   (bg-alt     nano-color-highlight)</span>
<span id="cb3-48"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-48" aria-hidden="true"></a>   (base0      &#39;(<span class="st">&quot;#18282f&quot;</span>))</span>
<span id="cb3-49"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-49" aria-hidden="true"></a>   (base1      &#39;(<span class="st">&quot;#24323a&quot;</span>))</span>
<span id="cb3-50"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-50" aria-hidden="true"></a>   (base2      &#39;(<span class="st">&quot;#556066&quot;</span>))</span>
<span id="cb3-51"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-51" aria-hidden="true"></a>   (base3      &#39;(<span class="st">&quot;#6f787d&quot;</span>))</span>
<span id="cb3-52"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-52" aria-hidden="true"></a>   (base4      &#39;(<span class="st">&quot;#8a9296&quot;</span>))</span>
<span id="cb3-53"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-53" aria-hidden="true"></a>   (base5      &#39;(<span class="st">&quot;#a6acaf&quot;</span>))</span>
<span id="cb3-54"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-54" aria-hidden="true"></a>   (base6      &#39;(<span class="st">&quot;#e7e8e9&quot;</span>))</span>
<span id="cb3-55"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-55" aria-hidden="true"></a>   (base7      &#39;(<span class="st">&quot;#f6f6f6&quot;</span>))</span>
<span id="cb3-56"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-56" aria-hidden="true"></a>   (base8      &#39;(<span class="st">&quot;#fafafa&quot;</span>))</span>
<span id="cb3-57"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-57" aria-hidden="true"></a>   (fg         nano-color-foreground)</span>
<span id="cb3-58"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-58" aria-hidden="true"></a>   (fg-alt     nano-color-faded)</span>
<span id="cb3-59"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-59" aria-hidden="true"></a></span>
<span id="cb3-60"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-60" aria-hidden="true"></a>   (grey       fg)</span>
<span id="cb3-61"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-61" aria-hidden="true"></a>   (red        fg)</span>
<span id="cb3-62"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-62" aria-hidden="true"></a>   (blue       fg)</span>
<span id="cb3-63"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-63" aria-hidden="true"></a>   (dark-blue  fg)</span>
<span id="cb3-64"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-64" aria-hidden="true"></a>   (orange     fg)</span>
<span id="cb3-65"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-65" aria-hidden="true"></a>   (green      fg)</span>
<span id="cb3-66"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-66" aria-hidden="true"></a>   (teal       fg)</span>
<span id="cb3-67"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-67" aria-hidden="true"></a>   (yellow     fg)</span>
<span id="cb3-68"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-68" aria-hidden="true"></a>   (magenta    fg)</span>
<span id="cb3-69"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-69" aria-hidden="true"></a>   (violet     fg)</span>
<span id="cb3-70"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-70" aria-hidden="true"></a>   (cyan       fg)</span>
<span id="cb3-71"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-71" aria-hidden="true"></a>   (dark-cyan  fg)</span>
<span id="cb3-72"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-72" aria-hidden="true"></a></span>
<span id="cb3-73"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-73" aria-hidden="true"></a></span>
<span id="cb3-74"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-74" aria-hidden="true"></a>   <span class="co">;; face categories -- required for all themes</span></span>
<span id="cb3-75"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-75" aria-hidden="true"></a>   (highlight      nano-color-salient)</span>
<span id="cb3-76"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-76" aria-hidden="true"></a>   (vertical-bar   base5)</span>
<span id="cb3-77"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-77" aria-hidden="true"></a>   (selection      nano-color-highlight)</span>
<span id="cb3-78"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-78" aria-hidden="true"></a>   (builtin        nano-color-salient)</span>
<span id="cb3-79"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-79" aria-hidden="true"></a>   (comments       nano-color-faded)</span>
<span id="cb3-80"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-80" aria-hidden="true"></a>   (doc-comments   nano-color-faded)</span>
<span id="cb3-81"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-81" aria-hidden="true"></a>   (constants      nano-color-strong)</span>
<span id="cb3-82"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-82" aria-hidden="true"></a>   (functions      nano-color-salient)</span>
<span id="cb3-83"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-83" aria-hidden="true"></a>   (keywords       nano-color-strong)</span>
<span id="cb3-84"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-84" aria-hidden="true"></a>   (methods        nano-color-salient)</span>
<span id="cb3-85"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-85" aria-hidden="true"></a>   (operators      nano-color-strong)</span>
<span id="cb3-86"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-86" aria-hidden="true"></a>   (<span class="kw">type</span>           nano-color-strong)</span>
<span id="cb3-87"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-87" aria-hidden="true"></a>   (strings        base0)</span>
<span id="cb3-88"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-88" aria-hidden="true"></a>   (variables      base0)</span>
<span id="cb3-89"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-89" aria-hidden="true"></a>   (numbers        base0)</span>
<span id="cb3-90"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-90" aria-hidden="true"></a>   (region         base4)</span>
<span id="cb3-91"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-91" aria-hidden="true"></a>   (<span class="kw">error</span>          nano-color-critical)</span>
<span id="cb3-92"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-92" aria-hidden="true"></a>   (<span class="kw">warning</span>        nano-color-popout)</span>
<span id="cb3-93"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-93" aria-hidden="true"></a>   (success        nano-color-salient)</span>
<span id="cb3-94"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-94" aria-hidden="true"></a>   (vc-modified    nano-color-salient)</span>
<span id="cb3-95"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-95" aria-hidden="true"></a>   (vc-added       fg-alt)</span>
<span id="cb3-96"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-96" aria-hidden="true"></a>   (vc-deleted     nano-color-critical)</span>
<span id="cb3-97"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-97" aria-hidden="true"></a></span>
<span id="cb3-98"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-98" aria-hidden="true"></a>   <span class="co">;; custom categories</span></span>
<span id="cb3-99"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-99" aria-hidden="true"></a>   (-modeline-pad</span>
<span id="cb3-100"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-100" aria-hidden="true"></a>    (<span class="kw">when</span> doom-plain-padded-modeline</span>
<span id="cb3-101"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-101" aria-hidden="true"></a>      (<span class="kw">if</span> (<span class="kw">integerp</span> doom-plain-padded-modeline) doom-plain-padded-modeline <span class="dv">4</span>)))</span>
<span id="cb3-102"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-102" aria-hidden="true"></a></span>
<span id="cb3-103"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-103" aria-hidden="true"></a>   (modeline-bg              (doom-darken bg-alt <span class="fl">0.15</span>))</span>
<span id="cb3-104"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-104" aria-hidden="true"></a>   (modeline-bg-alt          (doom-darken bg-alt <span class="fl">0.1</span>))</span>
<span id="cb3-105"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-105" aria-hidden="true"></a>   (modeline-bg-inactive     (doom-darken bg-alt <span class="fl">0.1</span>))</span>
<span id="cb3-106"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-106" aria-hidden="true"></a>   (modeline-bg-inactive-alt bg-alt)</span>
<span id="cb3-107"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-107" aria-hidden="true"></a>   (modeline-fg              fg)</span>
<span id="cb3-108"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-108" aria-hidden="true"></a>   (modeline-fg-alt          (doom-darken modeline-bg-inactive <span class="fl">0.35</span>)))</span>
<span id="cb3-109"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-109" aria-hidden="true"></a></span>
<span id="cb3-110"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-110" aria-hidden="true"></a>  <span class="co">;;;; Base theme face overrides</span></span>
<span id="cb3-111"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-111" aria-hidden="true"></a>  ((<span class="kw">error</span>   :underline `(:style wave :color ,<span class="kw">error</span>))</span>
<span id="cb3-112"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-112" aria-hidden="true"></a>   (<span class="kw">warning</span> :underline `(:style wave :color ,<span class="kw">warning</span>))</span>
<span id="cb3-113"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-113" aria-hidden="true"></a>   ((font-lock-constant-face &amp;override)      :slant &#39;italic)</span>
<span id="cb3-114"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-114" aria-hidden="true"></a>   ((font-lock-comment-face &amp;override)       :slant &#39;italic)</span>
<span id="cb3-115"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-115" aria-hidden="true"></a>   ((font-lock-function-name-face &amp;override) :slant &#39;italic)</span>
<span id="cb3-116"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-116" aria-hidden="true"></a>   ((font-lock-type-face &amp;override)          :slant &#39;italic)</span>
<span id="cb3-117"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-117" aria-hidden="true"></a>   <span class="co">;;(hl-line :background base8)</span></span>
<span id="cb3-118"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-118" aria-hidden="true"></a>   ((line-number &amp;override) :foreground base3)</span>
<span id="cb3-119"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-119" aria-hidden="true"></a>   ((line-number-current-line &amp;override) :foreground base2)</span>
<span id="cb3-120"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-120" aria-hidden="true"></a>   (mode-line</span>
<span id="cb3-121"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-121" aria-hidden="true"></a>    :background modeline-bg :foreground modeline-fg</span>
<span id="cb3-122"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-122" aria-hidden="true"></a>    :box (<span class="kw">if</span> -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg)))</span>
<span id="cb3-123"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-123" aria-hidden="true"></a>   (mode-line-inactive</span>
<span id="cb3-124"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-124" aria-hidden="true"></a>    :background modeline-bg-inactive :foreground modeline-fg-alt</span>
<span id="cb3-125"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-125" aria-hidden="true"></a>    :box (<span class="kw">if</span> -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-inactive)))</span>
<span id="cb3-126"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-126" aria-hidden="true"></a>   (mode-line-emphasis :foreground highlight)</span>
<span id="cb3-127"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-127" aria-hidden="true"></a></span>
<span id="cb3-128"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-128" aria-hidden="true"></a>   <span class="co">;;;; doom-modeline</span></span>
<span id="cb3-129"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-129" aria-hidden="true"></a>   (doom-modeline-bar :background modeline-bg)</span>
<span id="cb3-130"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-130" aria-hidden="true"></a>   (doom-modeline-bar-inactive :inherit &#39;doom-modeline-bar)</span>
<span id="cb3-131"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-131" aria-hidden="true"></a>   (doom-modeline-project-dir :foreground fg)</span>
<span id="cb3-132"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-132" aria-hidden="true"></a>   (doom-modeline-buffer-file :foreground fg)</span>
<span id="cb3-133"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-133" aria-hidden="true"></a>   (doom-modeline-buffer-modified :weight &#39;bold :foreground <span class="st">&quot;#000000&quot;</span>)</span>
<span id="cb3-134"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-134" aria-hidden="true"></a>   (doom-modeline-panel :inherit &#39;mode-line-highlight :background base3 :foreground fg)</span>
<span id="cb3-135"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-135" aria-hidden="true"></a>   <span class="co">;;;; ivy</span></span>
<span id="cb3-136"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-136" aria-hidden="true"></a>   (ivy-posframe :background bg-alt)</span>
<span id="cb3-137"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-137" aria-hidden="true"></a>   <span class="co">;;;; magit</span></span>
<span id="cb3-138"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-138" aria-hidden="true"></a>   ((magit-diff-added-highlight &amp;override)   :foreground fg :background (doom-blend vc-added bg <span class="fl">0.3</span>))</span>
<span id="cb3-139"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-139" aria-hidden="true"></a>   ((magit-diff-removed &amp;override)           :foreground (doom-lighten fg <span class="fl">0.4</span>) :background (doom-blend vc-deleted bg <span class="fl">0.1</span>))</span>
<span id="cb3-140"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-140" aria-hidden="true"></a>   ((magit-diff-removed-highlight &amp;override) :foreground fg :background (doom-blend vc-deleted bg <span class="fl">0.22</span>))</span>
<span id="cb3-141"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-141" aria-hidden="true"></a>   <span class="co">;;;; lsp-mode</span></span>
<span id="cb3-142"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-142" aria-hidden="true"></a>   (lsp-headerline-breadcrumb-symbols-face :foreground keywords :weight &#39;bold)</span>
<span id="cb3-143"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-143" aria-hidden="true"></a>   <span class="co">;;;; outline &lt;built-in&gt;</span></span>
<span id="cb3-144"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-144" aria-hidden="true"></a>   (outline<span class="dv">-1</span> :slant   &#39;italic :foreground fg-alt)</span>
<span id="cb3-145"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-145" aria-hidden="true"></a>   (outline<span class="dv">-2</span> :inherit &#39;outline<span class="dv">-1</span> :foreground base2)</span>
<span id="cb3-146"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-146" aria-hidden="true"></a>   (outline<span class="dv">-3</span> :inherit &#39;outline<span class="dv">-2</span>)</span>
<span id="cb3-147"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-147" aria-hidden="true"></a>   (outline<span class="dv">-4</span> :inherit &#39;outline<span class="dv">-3</span>)</span>
<span id="cb3-148"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-148" aria-hidden="true"></a>   (outline<span class="dv">-5</span> :inherit &#39;outline<span class="dv">-4</span>)</span>
<span id="cb3-149"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-149" aria-hidden="true"></a>   (outline<span class="dv">-6</span> :inherit &#39;outline<span class="dv">-5</span>)</span>
<span id="cb3-150"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-150" aria-hidden="true"></a>   (outline<span class="dv">-7</span> :inherit &#39;outline<span class="dv">-6</span>)</span>
<span id="cb3-151"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-151" aria-hidden="true"></a>   (outline<span class="dv">-8</span> :inherit &#39;outline<span class="dv">-7</span>)</span>
<span id="cb3-152"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-152" aria-hidden="true"></a></span>
<span id="cb3-153"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-153" aria-hidden="true"></a>   (org-level<span class="dv">-1</span> :inherit &#39;org-level<span class="dv">-1</span> :foreground nano-color-strong)</span>
<span id="cb3-154"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-154" aria-hidden="true"></a>   (org-level<span class="dv">-2</span> :inherit &#39;org-level<span class="dv">-2</span> :foreground nano-color-strong)</span>
<span id="cb3-155"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-155" aria-hidden="true"></a>   (org-level<span class="dv">-3</span> :inherit &#39;org-level<span class="dv">-3</span> :foreground nano-color-strong)</span>
<span id="cb3-156"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-156" aria-hidden="true"></a>   (org-level<span class="dv">-4</span> :inherit &#39;org-level<span class="dv">-4</span> :foreground nano-color-strong)</span>
<span id="cb3-157"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-157" aria-hidden="true"></a>   (org-level<span class="dv">-5</span> :inherit &#39;org-level<span class="dv">-5</span> :foreground nano-color-strong)</span>
<span id="cb3-158"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-158" aria-hidden="true"></a>   (org-level<span class="dv">-6</span> :inherit &#39;org-level<span class="dv">-6</span> :foreground nano-color-strong)</span>
<span id="cb3-159"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-159" aria-hidden="true"></a>   (org-level<span class="dv">-7</span> :inherit &#39;org-level<span class="dv">-7</span> :foreground nano-color-strong)</span>
<span id="cb3-160"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-160" aria-hidden="true"></a>   (org-level<span class="dv">-8</span> :inherit &#39;org-level<span class="dv">-8</span> :foreground nano-color-strong)</span>
<span id="cb3-161"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-161" aria-hidden="true"></a></span>
<span id="cb3-162"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-162" aria-hidden="true"></a>   (org-code     :inherit &#39;org-code</span>
<span id="cb3-163"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-163" aria-hidden="true"></a>                 :foreground nano-color-salient</span>
<span id="cb3-164"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-164" aria-hidden="true"></a>                 :weight &#39;bold)</span>
<span id="cb3-165"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-165" aria-hidden="true"></a>   (org-verbatim :inherit &#39;org-verbatim</span>
<span id="cb3-166"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-166" aria-hidden="true"></a>                 :foreground nano-color-salient</span>
<span id="cb3-167"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-167" aria-hidden="true"></a>                 :weight &#39;bold)</span>
<span id="cb3-168"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-168" aria-hidden="true"></a>   (org-upcoming-deadline :inherit &#39;org-upcoming-deadline</span>
<span id="cb3-169"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-169" aria-hidden="true"></a>                          :foreground nano-color-critical</span>
<span id="cb3-170"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-170" aria-hidden="true"></a>                          :weight &#39;bold)</span>
<span id="cb3-171"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-171" aria-hidden="true"></a>   (org-upcoming-distant-deadline :inherit &#39;org-upcoming-distant-deadline</span>
<span id="cb3-172"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-172" aria-hidden="true"></a>                                  :foreground nano-color-salient)</span>
<span id="cb3-173"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-173" aria-hidden="true"></a></span>
<span id="cb3-174"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-174" aria-hidden="true"></a>   (org-habit-overdue-face</span>
<span id="cb3-175"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-175" aria-hidden="true"></a>    :inherit &#39;org-habit-overdue-face</span>
<span id="cb3-176"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-176" aria-hidden="true"></a>    :background fg-alt)</span>
<span id="cb3-177"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-177" aria-hidden="true"></a>   (org-habit-overdue-future-face</span>
<span id="cb3-178"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-178" aria-hidden="true"></a>    :inherit &#39;org-habit-overdue-future-face</span>
<span id="cb3-179"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-179" aria-hidden="true"></a>    :background nano-color-subtle)</span>
<span id="cb3-180"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-180" aria-hidden="true"></a>   (org-habit-alert-face</span>
<span id="cb3-181"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-181" aria-hidden="true"></a>    :inherit &#39;org-habit-alert-face</span>
<span id="cb3-182"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-182" aria-hidden="true"></a>    :background nano-color-critical)</span>
<span id="cb3-183"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-183" aria-hidden="true"></a>   (org-habit-alert-future-face</span>
<span id="cb3-184"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-184" aria-hidden="true"></a>    :inherit &#39;org-habit-alert-future-face</span>
<span id="cb3-185"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-185" aria-hidden="true"></a>    :background nano-color-subtle)</span>
<span id="cb3-186"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-186" aria-hidden="true"></a></span>
<span id="cb3-187"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-187" aria-hidden="true"></a>   (org-scheduled-today :inherit &#39;org-scheduled-today :foreground fg)</span>
<span id="cb3-188"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-188" aria-hidden="true"></a>   (org-scheduled-previously :inherit &#39;org-scheduled-previously :foreground fg)</span>
<span id="cb3-189"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-189" aria-hidden="true"></a></span>
<span id="cb3-190"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-190" aria-hidden="true"></a>   <span class="co">;;;; org &lt;built-in&gt;</span></span>
<span id="cb3-191"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-191" aria-hidden="true"></a>   ((org-block &amp;override) :background bg-alt)</span>
<span id="cb3-192"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-192" aria-hidden="true"></a>   ((org-block-begin-line &amp;override) :foreground base5)</span>
<span id="cb3-193"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-193" aria-hidden="true"></a>   <span class="co">;;;; solaire-mode</span></span>
<span id="cb3-194"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-194" aria-hidden="true"></a>   (solaire-mode-line-face</span>
<span id="cb3-195"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-195" aria-hidden="true"></a>    :inherit &#39;mode-line</span>
<span id="cb3-196"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-196" aria-hidden="true"></a>    :background modeline-bg-alt</span>
<span id="cb3-197"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-197" aria-hidden="true"></a>    :box (<span class="kw">if</span> -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-alt)))</span>
<span id="cb3-198"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-198" aria-hidden="true"></a>   (solaire-mode-line-inactive-face</span>
<span id="cb3-199"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-199" aria-hidden="true"></a>    :inherit &#39;mode-line-inactive</span>
<span id="cb3-200"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-200" aria-hidden="true"></a>    :background modeline-bg-inactive-alt</span>
<span id="cb3-201"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-201" aria-hidden="true"></a>    :box (<span class="kw">if</span> -modeline-pad `(:line-width ,-modeline-pad :color ,modeline-bg-inactive-alt)))))</span>
<span id="cb3-202"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-202" aria-hidden="true"></a></span>
<span id="cb3-203"><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#cb3-203" aria-hidden="true"></a><span class="co">;;; doom-plain-theme.el ends here</span></span></code></pre></div><p>You will probably need more work to achieve the colors you expect. For that, using <code>SPC-u C-x =</code> will probably be useful. It will show the font face under the cursor.</p><p>Best of luck.</p><section class="footnotes" role="doc-endnotes"><hr></hr><ol><li id="fn1" role="doc-endnote"><p><a href="https://www.nerdfonts.com">https://www.nerdfonts.com</a><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#fnref1" class="footnote-back" role="doc-backlink">â†©ï¸Ž</a></p></li><li id="fn2" role="doc-endnote"><p><a href="https://www.nerdfonts.com">https://www.nerdfonts.com</a><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#fnref2" class="footnote-back" role="doc-backlink">â†©ï¸Ž</a></p></li><li id="fn3" role="doc-endnote"><p><a href="https://github.com/hlissner/doom-emacs">https://github.com/hlissner/doom-emacs</a><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#fnref3" class="footnote-back" role="doc-backlink">â†©ï¸Ž</a></p></li><li id="fn4" role="doc-endnote"><p><a href="https://github.com/rougier/nano-emacs">https://github.com/rougier/nano-emacs</a><a href="https://her.esy.fun/posts/0020-cool-looking-org-mode/index.html#fnref4" class="footnote-back" role="doc-backlink">â†©ï¸Ž</a></p></li></ol></section></div>
]]></description>
</item>


<item>
<title>Utopia (2013)</title>
<guid>https://her.esy.fun/posts/0019-utopia-tv-show/index.html</guid>
<pubDate>Tue, 01 Jun 2021 00:00:00 +0200</pubDate>
<category>tv-show</category>
<description><![CDATA[
<div id="content"><figure><img src="https://her.esy.fun/posts/0019-utopia-tv-show/utopia-s01.jpg.webp" alt="Utopia"></img><figcaption aria-hidden="true">Utopia</figcaption></figure><p>I wanted to write a few articles about great shows lot of people around me do not know about. <a href="https://www.themoviedb.html/tv/46511-utopia">Utopia (2013)</a> is one of these TV Shows that deserve more attention.</p><p>The <strong>filmography</strong> is quite original. I have never seen another film/TV show with a similar atmosphere. The usage of bright colors is magistral. Flashy yellow, green, red.</p><p>The <strong>soundtrack</strong> is also pretty surprising original and enjoyable.</p><p>The <strong>acting</strong> is really great. Actors are doing a great job and are quite relatable. These are not the (super)heroes you are used to. We are far away from shows where every girl is a bimbo and every guy is a Chippendale.</p><p>The <strong>scenario</strong>, in regard to the recent events related to COVID19 is just perfect. I do not want to reveal too much. But let's just say the current real events are close to the events predicted in this show.</p><p>The <strong>Surrealistic Humor</strong> atmosphere make the viewing experience quite exceptionnal. There is a mix between nonchalance and extreme violence. It really feels surrealist. In this show some people act with extreme violence as if there is no choice.</p><p>As a conclusion, if you are looking for a very innovative TV show then search no further this one is a great original choice. If you are still unsure, just watch the opening scene, it is quite incredible.</p><p>ps: Also try to get the original content. Amazon Prime apparently cut some very important scene and also changed the ratio which hurt the very good image work.</p></div>
]]></description>
</item>


<item>
<title>Fast Static Site with make</title>
<guid>https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html</guid>
<pubDate>Tue, 25 May 2021 00:00:00 +0200</pubDate>
<category>blog</category>
<category>static</category>
<description><![CDATA[
<div id="content"><p>This article will dig a bit deeper about my <code>Makefile</code> based static website generator. In a <a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html">previous article</a> I just gave the rationale and an overview to do it yourself. Mainly it is very fast and portable.</p><p>A few goals reached by my current build system are:</p><ol><li>Be fast and make the minimal amount of work as possible. I don't want to rebuild all the html pages if I only change one file.</li><li>Source file format agnostic. You can use markdown, org-mode or even directly write html.</li><li>Support gemini</li><li>Optimize size: minify HTML, CSS, images</li><li>Generate an index page listing the posts</li><li>Generate RSS/atom feed (for both gemini and http)</li></ol><p><code>make</code> will take care of handling the dependency graph to minimize the amount of effort when a change occurs in the sources. For some features, I built specifics small shell scripts. For example to be absolutely agnostic in the source format for my articles I generate the RSS out of a tree of HTML files. But taking advantage of <code>make</code>, I generate an index cache to transform those HTML into XML which will be faster to use to build different indexes. To make those transformations I use very short a shell scripts.</p><h1 id="-makefile--overview"><code>Makefile</code> overview</h1><p>A Makefile is made out of rules. The first rule of your Makefile will be the default rule. The first rule of my Makefile is called <code>all</code>.</p><p>A rule as the following format:</p><div class="sourceCode" id="cb1"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb1-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb1-1" aria-hidden="true"></a><span class="dv">target:</span><span class="dt"> file1 file2</span></span>
<span id="cb1-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb1-2" aria-hidden="true"></a>    cmd --input file1 file2 <span class="ch">\</span></span>
<span id="cb1-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb1-3" aria-hidden="true"></a>        --output target</span></code></pre></div><p>if <code>target</code> does not exists, then <code>make</code> will look at its dependencies. If any of its dependencies need to be updated, it will run all the rules in the correct order to rebuild them and finally run the script to build <code>target</code>. A file needs to be updated if one of its dependency needs to be updated or is newer.</p><p>The usual use case of <code>make</code> is about building a single binary out of many source files. But for a static website, we need to generate a lot of files from a lot of files. So we construct the rules like this:</p><div class="sourceCode" id="cb2"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb2-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-1" aria-hidden="true"></a><span class="dv">all:</span><span class="dt"> site</span></span>
<span id="cb2-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-2" aria-hidden="true"></a></span>
<span id="cb2-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-3" aria-hidden="true"></a><span class="co"># build a list of files that will need to be build</span></span>
<span id="cb2-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-4" aria-hidden="true"></a><span class="dt">DST_FILES </span><span class="ch">:=</span><span class="st"> ....</span></span>
<span id="cb2-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-5" aria-hidden="true"></a><span class="co"># RULES TO GENERATE DST_FILES</span></span>
<span id="cb2-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-6" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_FILES</span><span class="ch">)</span></span>
<span id="cb2-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-7" aria-hidden="true"></a></span>
<span id="cb2-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-8" aria-hidden="true"></a><span class="co"># another list of files</span></span>
<span id="cb2-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-9" aria-hidden="true"></a><span class="dt">DST_FILES_2 </span><span class="ch">:=</span><span class="st"> ....</span></span>
<span id="cb2-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-10" aria-hidden="true"></a><span class="co"># RULES TO GENERATE DST_FILES_2</span></span>
<span id="cb2-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-11" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_FILES_2</span><span class="ch">)</span></span>
<span id="cb2-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-12" aria-hidden="true"></a></span>
<span id="cb2-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb2-13" aria-hidden="true"></a><span class="dv">site:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">ALL</span><span class="ch">)</span></span></code></pre></div><p>In my <code>Makefile</code> I have many similar block with the same pattern.</p><ol><li>I retrieve a list of source files</li><li>I construct the list of destination files (change the directory, the extension)</li><li>I declare a rule to construct these destination files</li><li>I add the destination files to the <code>ALL</code> variable.</li></ol><p>I have a block for:</p><ul><li>raw assets I just want copied</li><li>images I would like to compress for the web</li><li><code>html</code> I would like to generate from org mode files via pandoc</li><li><code>gmi</code> I would like to generate from org mode files</li><li><code>xml</code> files I use as cache to build different index files</li><li><code>index.html</code> file containing a list of my posts</li><li><code>rss.xml</code> file containing a list of my posts</li><li><code>gemini-atom.xml</code> file containing a list of my posts</li></ul><h2 id="assets">Assets</h2><p>The rules to copy assets will be a good first example.</p><ol><li>find all assets in <code>src/</code> directory</li><li>generate all assets from these files in <code>_site/</code> directory</li><li>make this rule a dependency on the <code>all</code> rule.</li></ol><div class="sourceCode" id="cb3"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb3-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb3-1" aria-hidden="true"></a><span class="dt">SRC_ASSETS </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">shell</span><span class="st"> find src -type f</span><span class="ch">)</span></span>
<span id="cb3-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb3-2" aria-hidden="true"></a><span class="dt">DST_ASSETS </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> src/%</span><span class="kw">,</span><span class="st">_site/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">SRC_ASSETS</span><span class="ch">))</span></span>
<span id="cb3-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb3-3" aria-hidden="true"></a><span class="dv">_site/% :</span><span class="dt"> src/%</span></span>
<span id="cb3-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb3-4" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="st">&quot;</span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span><span class="st">&quot;</span></span>
<span id="cb3-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb3-5" aria-hidden="true"></a>    cp <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb3-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb3-6" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> assets</span></span>
<span id="cb3-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb3-7" aria-hidden="true"></a><span class="dv">assets:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_ASSETS</span><span class="ch">)</span></span>
<span id="cb3-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb3-8" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> assets</span></span></code></pre></div><p>OK, this looks terrible. But mainly:</p><ul><li><code>SRC_ASSETS</code> will contain the result of the command <code>find</code>.</li><li><code>DST_ASSETS</code> will contain the files of <code>SRC_ASSETS</code> but we replace the <code>src/</code> by <code>_site/</code>.</li><li>We create a generic rule; for all files matching the following pattern <code>_site/%</code>, look for the file <code>src/%</code> and if it is newer (in our case) then execute the following commands:<ul><li>create the directory to put <code>_site/%</code> in</li><li>copy the file</li></ul></li></ul><p>About the line <code>@mkdir -p "$(dir $@)"</code>:</p><ul><li>the <code>@</code> at the start of the command simply means that we make this execution silent.</li><li>The <code>$@</code> is replaced by the target string.</li><li>And <code>$(dir $@)</code> will generate the folder name of <code>$@</code>.</li></ul><p>For the line with <code>cp</code>, you just need to know that <code>~$&lt;~</code> will represent the first dependency.</p><p>My Makefile is composed of similar blocks, where I replace the first find command to match specific files and where I use different building rules. An important point is that the rules must be the most specific possible. This is because <code>make</code> will use the most specific rule in case of ambiguity. For example, the matching rule <code>_site/%: src/%</code> will match all files in the <code>src/</code> dir. But if we want to treat <code>CSS</code> files with another rule we could write:</p><div class="sourceCode" id="cb4"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb4-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb4-1" aria-hidden="true"></a><span class="dv">_site/%.css:</span><span class="dt"> src/%.css</span></span>
<span id="cb4-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb4-2" aria-hidden="true"></a>    minify <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span></code></pre></div><p>And if the selected file is a <code>CSS</code> file, this rule will be selected.</p><h2 id="prelude">Prelude</h2><p>I start with variables declarations:</p><div class="sourceCode" id="cb5"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb5-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-1" aria-hidden="true"></a><span class="dv">all:</span><span class="dt"> site</span></span>
<span id="cb5-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-2" aria-hidden="true"></a><span class="co"># directory containing the source files</span></span>
<span id="cb5-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-3" aria-hidden="true"></a><span class="dt">SRC_DIR </span><span class="ch">?=</span><span class="st"> src</span></span>
<span id="cb5-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-4" aria-hidden="true"></a><span class="co"># directory that will contain the site files</span></span>
<span id="cb5-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-5" aria-hidden="true"></a><span class="dt">DST_DIR </span><span class="ch">?=</span><span class="st"> _site</span></span>
<span id="cb5-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-6" aria-hidden="true"></a><span class="co"># a directory that will contain a cache to speedup indexing</span></span>
<span id="cb5-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-7" aria-hidden="true"></a><span class="dt">CACHE_DIR </span><span class="ch">?=</span><span class="st"> .cache</span></span>
<span id="cb5-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-8" aria-hidden="true"></a></span>
<span id="cb5-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-9" aria-hidden="true"></a><span class="co"># options to pass to find to prevent matching files in the src/drafts</span></span>
<span id="cb5-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-10" aria-hidden="true"></a><span class="co"># directory</span></span>
<span id="cb5-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-11" aria-hidden="true"></a><span class="dt">NO_DRAFT </span><span class="ch">:=</span><span class="st"> -not -path &#39;</span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st">/drafts/*&#39;</span></span>
<span id="cb5-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-12" aria-hidden="true"></a><span class="co"># option to pass to find to not match  org files</span></span>
<span id="cb5-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb5-13" aria-hidden="true"></a><span class="dt">NO_SRC_FILE </span><span class="ch">:=</span><span class="st"> ! -name &#39;*.org&#39;</span></span></code></pre></div><h2 id="css">CSS</h2><p>Here we go; the same simple pattern for CSS files.</p><div class="sourceCode" id="cb6"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb6-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-1" aria-hidden="true"></a><span class="co"># CSS</span></span>
<span id="cb6-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-2" aria-hidden="true"></a><span class="dt">SRC_CSS_FILES </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">shell</span><span class="st"> find </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st"> -type f -name &#39;*.css&#39;</span><span class="ch">)</span></span>
<span id="cb6-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-3" aria-hidden="true"></a><span class="dt">DST_CSS_FILES </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">SRC_RAW_FILES</span><span class="ch">))</span></span>
<span id="cb6-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-4" aria-hidden="true"></a><span class="dv">$(DST_DIR)/%.css :</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%.css</span></span>
<span id="cb6-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-5" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="st">&quot;</span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span><span class="st">&quot;</span></span>
<span id="cb6-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-6" aria-hidden="true"></a>    minify <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> &gt; <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb6-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-7" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> css</span></span>
<span id="cb6-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-8" aria-hidden="true"></a><span class="dv">css:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_CSS_FILES</span><span class="ch">)</span></span>
<span id="cb6-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb6-9" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> css</span></span></code></pre></div><p>This is very similar to the block for raw assets. The difference is just that instead of using <code>cp</code> we use the <code>minify</code> command.</p><h2 id="org----html">ORG â†’ HTML</h2><p>Now this one is more complex but is still follow the same pattern.</p><div class="sourceCode" id="cb7"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb7-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-1" aria-hidden="true"></a><span class="co"># ORG -&gt; HTML</span></span>
<span id="cb7-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-2" aria-hidden="true"></a><span class="dt">EXT </span><span class="ch">?=</span><span class="st"> .org</span></span>
<span id="cb7-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-3" aria-hidden="true"></a><span class="dt">SRC_PANDOC_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">shell</span><span class="st"> find </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st"> -type f -name &quot;*</span><span class="ch">$(</span><span class="dt">EXT</span><span class="ch">)</span><span class="st">&quot; </span><span class="ch">$(</span><span class="dt">NO_DRAFT</span><span class="ch">))</span></span>
<span id="cb7-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-4" aria-hidden="true"></a><span class="dt">DST_PANDOC_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> %</span><span class="ch">$(</span><span class="dt">EXT</span><span class="ch">)</span><span class="kw">,</span><span class="st">%.html</span><span class="kw">,</span><span class="st"> \</span></span>
<span id="cb7-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-5" aria-hidden="true"></a><span class="st">                        </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="st"> \</span></span>
<span id="cb7-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-6" aria-hidden="true"></a><span class="st">                            </span><span class="ch">$(</span><span class="dt">SRC_PANDOC_FILES</span><span class="ch">)))</span></span>
<span id="cb7-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-7" aria-hidden="true"></a><span class="dt">PANDOC_TEMPLATE </span><span class="ch">?=</span><span class="st"> templates/post.html</span></span>
<span id="cb7-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-8" aria-hidden="true"></a><span class="dt">MK_HTML </span><span class="ch">:=</span><span class="st"> engine/mk-html.sh</span></span>
<span id="cb7-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-9" aria-hidden="true"></a><span class="dt">PANDOC </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">MK_HTML</span><span class="ch">)</span><span class="st"> </span><span class="ch">$(</span><span class="dt">PANDOC_TEMPLATE</span><span class="ch">)</span></span>
<span id="cb7-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-10" aria-hidden="true"></a><span class="dv">$(DST_DIR)/%.html:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%.org </span><span class="ch">$(</span><span class="dt">PANDOC_TEMPLATE</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">MK_HTML</span><span class="ch">)</span></span>
<span id="cb7-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-11" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="st">&quot;</span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span><span class="st">&quot;</span></span>
<span id="cb7-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-12" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">PANDOC</span><span class="ch">)</span> <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="ch">$@</span><span class="st">.tmp&quot;</span></span>
<span id="cb7-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-13" aria-hidden="true"></a>    minify --mime text/html <span class="st">&quot;</span><span class="ch">$@</span><span class="st">.tmp&quot;</span> &gt; <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb7-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-14" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">rm </span><span class="st">&quot;</span><span class="ch">$@</span><span class="st">.tmp&quot;</span></span>
<span id="cb7-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-15" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> html</span></span>
<span id="cb7-16"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-16" aria-hidden="true"></a><span class="dv">html:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_PANDOC_FILES</span><span class="ch">)</span></span>
<span id="cb7-17"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb7-17" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> html</span></span></code></pre></div><p>So to construct <code>DST_PANDOC_FILES</code> this time we also need to change the extension of the file from <code>org</code> to <code>html</code>. We need to provide a template that will be passed to pandoc.</p><p>And of course, as if we change the template file we would like to regenerate all HTML files we put the template as a dependency. But importantly <strong>not</strong> at the first place. Because we use <code>$&lt;</code> that will be the first dependency.</p><p>I also have a short script instead of directly using <code>pandoc</code>. It is easier to handle <code>toc</code> using the metadatas in the file. And if someday I want to put the template in the metas, this will be the right place to put that.</p><p>The <code>mk-html.sh</code> is quite straightforward:</p><div class="sourceCode" id="cb8"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb8-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-1" aria-hidden="true"></a><span class="co">#!/usr/bin/env bash</span></span>
<span id="cb8-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-2" aria-hidden="true"></a><span class="kw">set</span> <span class="ex">-eu</span></span>
<span id="cb8-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-3" aria-hidden="true"></a></span>
<span id="cb8-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-4" aria-hidden="true"></a><span class="co"># put me at the top level of my project (like Makefile)</span></span>
<span id="cb8-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-5" aria-hidden="true"></a><span class="bu">cd</span> <span class="st">&quot;</span><span class="va">$(</span><span class="fu">git</span> rev-parse --show-toplevel<span class="va">)</span><span class="st">&quot;</span> <span class="kw">||</span> <span class="bu">exit</span> 1</span>
<span id="cb8-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-6" aria-hidden="true"></a><span class="va">template=</span><span class="st">&quot;</span><span class="va">$1</span><span class="st">&quot;</span></span>
<span id="cb8-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-7" aria-hidden="true"></a><span class="va">orgfile=</span><span class="st">&quot;</span><span class="va">$2</span><span class="st">&quot;</span></span>
<span id="cb8-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-8" aria-hidden="true"></a><span class="va">htmlfile=</span><span class="st">&quot;</span><span class="va">$3</span><span class="st">&quot;</span></span>
<span id="cb8-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-9" aria-hidden="true"></a></span>
<span id="cb8-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-10" aria-hidden="true"></a><span class="co"># check if there is the #+OPTIONS: toc:t</span></span>
<span id="cb8-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-11" aria-hidden="true"></a><span class="va">tocoption=</span><span class="st">&quot;&quot;</span></span>
<span id="cb8-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-12" aria-hidden="true"></a><span class="kw">if</span> <span class="fu">grep</span> -ie <span class="st">&#39;^#+options:&#39;</span> <span class="st">&quot;</span><span class="va">$orgfile</span><span class="st">&quot;</span> <span class="kw">|</span> <span class="fu">grep</span> <span class="st">&#39;toc:t&#39;</span><span class="op">&gt;</span>/dev/null<span class="kw">;</span> <span class="kw">then</span></span>
<span id="cb8-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-13" aria-hidden="true"></a>    <span class="va">tocoption=</span><span class="st">&quot;--toc&quot;</span></span>
<span id="cb8-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-14" aria-hidden="true"></a><span class="kw">fi</span></span>
<span id="cb8-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-15" aria-hidden="true"></a></span>
<span id="cb8-16"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-16" aria-hidden="true"></a><span class="kw">set</span> <span class="ex">-x</span></span>
<span id="cb8-17"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-17" aria-hidden="true"></a><span class="ex">pandoc</span> <span class="va">$tocoption</span> <span class="kw">\</span></span>
<span id="cb8-18"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-18" aria-hidden="true"></a>       <span class="ex">--template</span>=<span class="st">&quot;</span><span class="va">$template</span><span class="st">&quot;</span> <span class="kw">\</span></span>
<span id="cb8-19"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-19" aria-hidden="true"></a>       <span class="ex">--mathml</span> <span class="kw">\</span></span>
<span id="cb8-20"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-20" aria-hidden="true"></a>       <span class="ex">--from</span> org <span class="kw">\</span></span>
<span id="cb8-21"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-21" aria-hidden="true"></a>       <span class="ex">--to</span> html5 <span class="kw">\</span></span>
<span id="cb8-22"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-22" aria-hidden="true"></a>       <span class="ex">--standalone</span> <span class="kw">\</span></span>
<span id="cb8-23"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-23" aria-hidden="true"></a>       <span class="va">$orgfile</span> <span class="kw">\</span></span>
<span id="cb8-24"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb8-24" aria-hidden="true"></a>       <span class="ex">--output</span> <span class="st">&quot;</span><span class="va">$htmlfile</span><span class="st">&quot;</span></span></code></pre></div><p>Once generated I also minify the html file. And, that's it. But the important part is that now, if I change my script or the template or the file, it will generate the dependencies.</p><h2 id="indexes">Indexes</h2><p>We often need indexes to build a website. Typically to list the latest articles, build the RSS file. So for sake of simplicity, I decided to build my index as a set of XML files. Of course, this could be optimizide, by using SQLite for example. But this will already be really fast.</p><p>For every generated html file I will generate a clean XML file with <code>hxclean</code>. Once cleaned, it will be easy to access a specific node of in these XML files.</p><div class="sourceCode" id="cb9"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb9-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-1" aria-hidden="true"></a><span class="co"># INDEXES</span></span>
<span id="cb9-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-2" aria-hidden="true"></a><span class="dt">SRC_POSTS_DIR </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st">/posts</span></span>
<span id="cb9-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-3" aria-hidden="true"></a><span class="dt">DST_POSTS_DIR </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/posts</span></span>
<span id="cb9-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-4" aria-hidden="true"></a><span class="dt">SRC_POSTS_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">shell</span><span class="st"> find </span><span class="ch">$(</span><span class="dt">SRC_POSTS_DIR</span><span class="ch">)</span><span class="st"> -type f -name &quot;*</span><span class="ch">$(</span><span class="dt">EXT</span><span class="ch">)</span><span class="st">&quot;</span><span class="ch">)</span></span>
<span id="cb9-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-5" aria-hidden="true"></a><span class="dt">RSS_CACHE_DIR </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">CACHE_DIR</span><span class="ch">)</span><span class="st">/rss</span></span>
<span id="cb9-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-6" aria-hidden="true"></a><span class="dt">DST_XML_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> %.org</span><span class="kw">,</span><span class="st">%.xml</span><span class="kw">,</span><span class="st"> \</span></span>
<span id="cb9-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-7" aria-hidden="true"></a><span class="st">                        </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_POSTS_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">RSS_CACHE_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="st"> \</span></span>
<span id="cb9-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-8" aria-hidden="true"></a><span class="st">                            </span><span class="ch">$(</span><span class="dt">SRC_POSTS_FILES</span><span class="ch">)))</span></span>
<span id="cb9-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-9" aria-hidden="true"></a><span class="dv">$(RSS_CACHE_DIR)/%.xml:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_POSTS_DIR</span><span class="ch">)</span><span class="dt">/%.html</span></span>
<span id="cb9-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-10" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="st">&quot;</span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span><span class="st">&quot;</span></span>
<span id="cb9-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-11" aria-hidden="true"></a>    hxclean <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> &gt; <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb9-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-12" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> indexcache</span></span>
<span id="cb9-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-13" aria-hidden="true"></a><span class="dv">indexcache:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_XML_FILES</span><span class="ch">)</span></span>
<span id="cb9-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb9-14" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> indexcache</span></span></code></pre></div><p>This rule will generate for every file in <code>site/posts/*.html</code> a corresponding <code>xml</code> file (<code>hxclean</code> takes an HTML an try its best to make an XML out of it).</p><h2 id="html-index">HTML Index</h2><p>Now we just want to generate the main <code>index.html</code> page at the root of the site. This page should list all articles by date in reverse order.</p><p>The first step is to take advantage of the cache index. For every XML file I generated before I should generate the small HTML block I want for every entry. For this I use a script <code>mk-index-entry.sh</code>. He will use <code>hxselect</code> to retrieve the date and the title from the cached XML files. Then generate a small file just containing the date and the link.</p><p>Here is the block in the Makefile:</p><div class="sourceCode" id="cb10"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb10-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb10-1" aria-hidden="true"></a><span class="dt">DST_INDEX_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> %.xml</span><span class="kw">,</span><span class="st">%.index</span><span class="kw">,</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_XML_FILES</span><span class="ch">))</span></span>
<span id="cb10-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb10-2" aria-hidden="true"></a><span class="dt">MK_INDEX_ENTRY </span><span class="ch">:=</span><span class="st"> ./engine/mk-index-entry.sh</span></span>
<span id="cb10-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb10-3" aria-hidden="true"></a><span class="dt">INDEX_CACHE_DIR </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">CACHE_DIR</span><span class="ch">)</span><span class="st">/rss</span></span>
<span id="cb10-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb10-4" aria-hidden="true"></a><span class="dv">$(INDEX_CACHE_DIR)/%.index:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">INDEX_CACHE_DIR</span><span class="ch">)</span><span class="dt">/%.xml </span><span class="ch">$(</span><span class="dt">MK_INDEX_ENTRY</span><span class="ch">)</span></span>
<span id="cb10-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb10-5" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="dt">INDEX_CACHE_DIR</span><span class="ch">)</span></span>
<span id="cb10-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb10-6" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">MK_INDEX_ENTRY</span><span class="ch">)</span> <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span></code></pre></div><p>It means: for every <code>.xml</code> file generate a <code>.index</code> file with <code>mk-index-entry.sh</code>.</p><div class="sourceCode" id="cb11" data-org-language="sh"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb11-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-1" aria-hidden="true"></a><span class="co">#!/usr/bin/env zsh</span></span>
<span id="cb11-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-2" aria-hidden="true"></a></span>
<span id="cb11-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-3" aria-hidden="true"></a><span class="co"># prelude</span></span>
<span id="cb11-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-4" aria-hidden="true"></a><span class="bu">cd</span> <span class="st">&quot;</span><span class="va">$(</span><span class="fu">git</span> rev-parse --show-toplevel<span class="va">)</span><span class="st">&quot;</span> <span class="kw">||</span> <span class="bu">exit</span> 1</span>
<span id="cb11-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-5" aria-hidden="true"></a><span class="va">xfic=</span><span class="st">&quot;</span><span class="va">$1</span><span class="st">&quot;</span></span>
<span id="cb11-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-6" aria-hidden="true"></a><span class="va">dst=</span><span class="st">&quot;</span><span class="va">$2</span><span class="st">&quot;</span></span>
<span id="cb11-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-7" aria-hidden="true"></a><span class="va">indexdir=</span><span class="st">&quot;.cache/rss&quot;</span></span>
<span id="cb11-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-8" aria-hidden="true"></a></span>
<span id="cb11-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-9" aria-hidden="true"></a><span class="co"># HTML Accessors (similar to CSS accessors)</span></span>
<span id="cb11-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-10" aria-hidden="true"></a><span class="va">dateaccessor=</span><span class="st">&#39;.yyydate&#39;</span></span>
<span id="cb11-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-11" aria-hidden="true"></a><span class="co"># title and keyword shouldn&#39;t be changed</span></span>
<span id="cb11-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-12" aria-hidden="true"></a><span class="va">titleaccessor=</span><span class="st">&#39;title&#39;</span></span>
<span id="cb11-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-13" aria-hidden="true"></a><span class="fu">finddate()</span><span class="kw">{</span> <span class="op">&lt;</span> <span class="va">$1</span> <span class="ex">hxselect</span> -c <span class="va">$dateaccessor</span> <span class="kw">|</span> <span class="fu">sed</span> <span class="st">&#39;s/\[//g;s/\]//g;s/ .*$//&#39;</span> <span class="kw">}</span></span>
<span id="cb11-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-14" aria-hidden="true"></a><span class="fu">findtitle()</span><span class="kw">{</span> <span class="op">&lt;</span> <span class="va">$1</span> <span class="ex">hxselect</span> -c <span class="va">$titleaccessor</span> <span class="kw">}</span></span>
<span id="cb11-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-15" aria-hidden="true"></a></span>
<span id="cb11-16"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-16" aria-hidden="true"></a><span class="ex">autoload</span> -U colors <span class="kw">&amp;&amp;</span> <span class="ex">colors</span></span>
<span id="cb11-17"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-17" aria-hidden="true"></a></span>
<span id="cb11-18"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-18" aria-hidden="true"></a><span class="va">blogfile=</span><span class="st">&quot;</span><span class="va">$(</span><span class="bu">echo</span> <span class="st">&quot;</span><span class="va">$xfic</span><span class="st">&quot;</span><span class="kw">|</span><span class="fu">sed</span> <span class="st">&#39;s#.xml$#.html#;s#^&#39;</span><span class="va">$indexdir</span><span class="st">&#39;/#posts/#&#39;</span><span class="va">)</span><span class="st">&quot;</span></span>
<span id="cb11-19"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-19" aria-hidden="true"></a><span class="bu">printf</span> <span class="st">&quot;%-30s&quot;</span> <span class="va">$blogfile</span></span>
<span id="cb11-20"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-20" aria-hidden="true"></a><span class="va">d=$(</span><span class="ex">finddate</span> <span class="va">$xfic)</span></span>
<span id="cb11-21"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-21" aria-hidden="true"></a><span class="bu">echo</span> -n <span class="st">&quot; [</span><span class="va">$d</span><span class="st">]&quot;</span></span>
<span id="cb11-22"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-22" aria-hidden="true"></a><span class="va">rssdate=$(</span><span class="ex">formatdate</span> <span class="va">$d)</span></span>
<span id="cb11-23"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-23" aria-hidden="true"></a><span class="va">title=$(</span><span class="ex">findtitle</span> <span class="va">$xfic)</span></span>
<span id="cb11-24"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-24" aria-hidden="true"></a><span class="va">keywords=(</span> <span class="va">$(</span><span class="ex">findkeywords</span> <span class="va">$xfic)</span> <span class="va">)</span></span>
<span id="cb11-25"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-25" aria-hidden="true"></a><span class="bu">printf</span> <span class="st">&quot;: %-55s&quot;</span> <span class="st">&quot;</span><span class="va">$title</span><span class="st"> (</span><span class="va">$keywords</span><span class="st">)&quot;</span></span>
<span id="cb11-26"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-26" aria-hidden="true"></a><span class="kw">{</span> <span class="bu">printf</span> <span class="st">&quot;</span><span class="dt">\\</span><span class="st">n&lt;li&gt;&quot;</span></span>
<span id="cb11-27"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-27" aria-hidden="true"></a>  <span class="bu">printf</span> <span class="st">&quot;</span><span class="dt">\\</span><span class="st">n&lt;span class=</span><span class="dt">\&quot;</span><span class="st">pubDate</span><span class="dt">\&quot;</span><span class="st">&gt;%s&lt;/span&gt;&quot;</span> <span class="st">&quot;</span><span class="va">$d</span><span class="st">&quot;</span></span>
<span id="cb11-28"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-28" aria-hidden="true"></a>  <span class="bu">printf</span> <span class="st">&quot;</span><span class="dt">\\</span><span class="st">n&lt;a href=</span><span class="dt">\&quot;</span><span class="st">%s</span><span class="dt">\&quot;</span><span class="st">&gt;%s&lt;/a&gt;&quot;</span> <span class="st">&quot;</span><span class="va">${blogfile}</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="va">$title</span><span class="st">&quot;</span></span>
<span id="cb11-29"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-29" aria-hidden="true"></a>  <span class="bu">printf</span> <span class="st">&quot;</span><span class="dt">\\</span><span class="st">n&lt;/li&gt;</span><span class="dt">\\</span><span class="st">n</span><span class="dt">\\</span><span class="st">n&quot;</span></span>
<span id="cb11-30"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-30" aria-hidden="true"></a><span class="kw">}</span> <span class="op">&gt;&gt;</span> <span class="va">${dst}</span></span>
<span id="cb11-31"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-31" aria-hidden="true"></a></span>
<span id="cb11-32"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb11-32" aria-hidden="true"></a><span class="bu">echo</span> <span class="st">&quot; [</span><span class="va">${fg[green]}</span><span class="st">OK</span><span class="va">${reset_color}</span><span class="st">]&quot;</span></span></code></pre></div><p>Then I use these intermediate files to generate a single bigger index file.</p><div class="sourceCode" id="cb12"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb12-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-1" aria-hidden="true"></a><span class="dt">HTML_INDEX </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/index.html</span></span>
<span id="cb12-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-2" aria-hidden="true"></a><span class="dt">MKINDEX </span><span class="ch">:=</span><span class="st"> engine/mk-index.sh</span></span>
<span id="cb12-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-3" aria-hidden="true"></a><span class="dt">INDEX_TEMPLATE </span><span class="ch">?=</span><span class="st"> templates/index.html</span></span>
<span id="cb12-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-4" aria-hidden="true"></a><span class="dv">$(HTML_INDEX):</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_INDEX_FILES</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">MKINDEX</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">INDEX_TEMPLATE</span><span class="ch">)</span></span>
<span id="cb12-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-5" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span></span>
<span id="cb12-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-6" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">MKINDEX</span><span class="ch">)</span></span>
<span id="cb12-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-7" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> index</span></span>
<span id="cb12-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-8" aria-hidden="true"></a><span class="dv">index:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">HTML_INDEX</span><span class="ch">)</span></span>
<span id="cb12-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb12-9" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> index</span></span></code></pre></div><p>This script is a big one, but it is not that complex. For every file, I generate a new file <code>DATE-dirname</code>. I sort them in reverse order and put their content in the middle of an HTML file.</p><p>Important note: this file updates only if the index change.</p><p>The first part of the script creates files with the creation date in their metadatas. The created file name will contain the creation date, this will be helpful later.</p><div class="sourceCode" id="cb13" data-org-language="sh"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb13-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-1" aria-hidden="true"></a><span class="co">#!/usr/bin/env zsh</span></span>
<span id="cb13-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-2" aria-hidden="true"></a></span>
<span id="cb13-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-3" aria-hidden="true"></a><span class="ex">autoload</span> -U colors <span class="kw">&amp;&amp;</span> <span class="ex">colors</span></span>
<span id="cb13-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-4" aria-hidden="true"></a><span class="bu">cd</span> <span class="st">&quot;</span><span class="va">$(</span><span class="fu">git</span> rev-parse --show-toplevel<span class="va">)</span><span class="st">&quot;</span> <span class="kw">||</span> <span class="bu">exit</span> 1</span>
<span id="cb13-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-5" aria-hidden="true"></a><span class="co"># Directory</span></span>
<span id="cb13-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-6" aria-hidden="true"></a><span class="va">webdir=</span><span class="st">&quot;_site&quot;</span></span>
<span id="cb13-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-7" aria-hidden="true"></a><span class="va">indexfile=</span><span class="st">&quot;</span><span class="va">$webdir</span><span class="st">/index.html&quot;</span></span>
<span id="cb13-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-8" aria-hidden="true"></a><span class="va">indexdir=</span><span class="st">&quot;.cache/rss&quot;</span></span>
<span id="cb13-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-9" aria-hidden="true"></a><span class="va">tmpdir=$(</span><span class="fu">mktemp</span> -d<span class="va">)</span></span>
<span id="cb13-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-10" aria-hidden="true"></a></span>
<span id="cb13-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-11" aria-hidden="true"></a><span class="bu">echo</span> <span class="st">&quot;Publishing&quot;</span></span>
<span id="cb13-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-12" aria-hidden="true"></a></span>
<span id="cb13-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-13" aria-hidden="true"></a><span class="va">dateaccessor=</span><span class="st">&#39;.pubDate&#39;</span></span>
<span id="cb13-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-14" aria-hidden="true"></a><span class="fu">finddate()</span><span class="kw">{</span> <span class="op">&lt;</span> <span class="va">$1</span> <span class="ex">hxselect</span> -c <span class="va">$dateaccessor</span> <span class="kw">}</span></span>
<span id="cb13-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-15" aria-hidden="true"></a><span class="co"># generate files with &lt;DATE&gt;-&lt;FILENAME&gt;.index</span></span>
<span id="cb13-16"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-16" aria-hidden="true"></a><span class="kw">for</span> <span class="ex">fic</span> in <span class="va">$indexdir</span>/**/*.index<span class="kw">;</span> <span class="kw">do</span></span>
<span id="cb13-17"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-17" aria-hidden="true"></a>    <span class="va">d=$(</span><span class="ex">finddate</span> <span class="va">$fic)</span></span>
<span id="cb13-18"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-18" aria-hidden="true"></a>    <span class="bu">echo</span> <span class="st">&quot;${</span><span class="va">${fic:h}</span><span class="st">:t} [</span><span class="va">$d</span><span class="st">]&quot;</span></span>
<span id="cb13-19"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-19" aria-hidden="true"></a>    <span class="fu">cp</span> <span class="va">$fic</span> <span class="va">$tmpdir</span>/<span class="va">$d</span>-$<span class="dt">{</span><span class="va">${fic:h}</span><span class="dt">:t}</span>.index</span>
<span id="cb13-20"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb13-20" aria-hidden="true"></a><span class="kw">done</span></span></code></pre></div><p>Then I use these files to generate a file that will contain the <code>body</code> of the HTML.</p><div class="sourceCode" id="cb14" data-org-language="sh"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb14-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-1" aria-hidden="true"></a><span class="co"># for every post in reverse order</span></span>
<span id="cb14-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-2" aria-hidden="true"></a><span class="co"># generate the body (there is some logic to group by year)</span></span>
<span id="cb14-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-3" aria-hidden="true"></a><span class="va">previousyear=</span><span class="st">&quot;&quot;</span></span>
<span id="cb14-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-4" aria-hidden="true"></a><span class="kw">for</span> <span class="ex">fic</span> in <span class="va">$(</span><span class="fu">ls</span> <span class="va">$tmpdir</span>/*.index <span class="kw">|</span> <span class="fu">sort</span> -r<span class="va">)</span><span class="kw">;</span> <span class="kw">do</span></span>
<span id="cb14-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-5" aria-hidden="true"></a>    <span class="va">d=$(</span><span class="ex">finddate</span> <span class="va">$fic)</span></span>
<span id="cb14-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-6" aria-hidden="true"></a>    <span class="va">year=$(</span> <span class="bu">echo</span> <span class="st">&quot;</span><span class="va">$d</span><span class="st">&quot;</span> <span class="kw">|</span> <span class="fu">perl</span> -pe <span class="st">&#39;s#(\d{4})-.*#$1#&#39;</span><span class="va">)</span></span>
<span id="cb14-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-7" aria-hidden="true"></a>    <span class="kw">if</span> <span class="kw">((</span> year != previousyear <span class="kw">))</span>; <span class="kw">then</span></span>
<span id="cb14-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-8" aria-hidden="true"></a>        <span class="kw">if</span> <span class="kw">((</span> previousyear &gt; 0 <span class="kw">))</span>; <span class="kw">then</span></span>
<span id="cb14-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-9" aria-hidden="true"></a>            <span class="bu">echo</span> <span class="st">&quot;&lt;/ul&gt;&quot;</span> <span class="op">&gt;&gt;</span> <span class="va">$tmpdir</span>/index</span>
<span id="cb14-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-10" aria-hidden="true"></a>        <span class="kw">fi</span></span>
<span id="cb14-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-11" aria-hidden="true"></a>        <span class="va">previousyear=$year</span></span>
<span id="cb14-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-12" aria-hidden="true"></a>        <span class="bu">echo</span> <span class="st">&quot;&lt;h3 name=</span><span class="dt">\&quot;</span><span class="va">${year}</span><span class="dt">\&quot;</span><span class="st"> &gt;</span><span class="va">${year}</span><span class="st">&lt;/h3&gt;&lt;ul&gt;&quot;</span> <span class="op">&gt;&gt;</span> <span class="va">$tmpdir</span>/index</span>
<span id="cb14-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-13" aria-hidden="true"></a>    <span class="kw">fi</span></span>
<span id="cb14-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-14" aria-hidden="true"></a>    <span class="fu">cat</span> <span class="va">$fic</span> <span class="op">&gt;&gt;</span> <span class="va">$tmpdir</span>/index</span>
<span id="cb14-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-15" aria-hidden="true"></a><span class="kw">done</span></span>
<span id="cb14-16"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb14-16" aria-hidden="true"></a><span class="bu">echo</span> <span class="st">&quot;&lt;/ul&gt;&quot;</span> <span class="op">&gt;&gt;</span> <span class="va">$tmpdir</span>/index</span></code></pre></div><p>And finally, I render the HTML using a template within a shell script:</p><div class="sourceCode" id="cb15" data-org-language="sh"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb15-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-1" aria-hidden="true"></a><span class="va">title=</span><span class="st">&quot;Y&quot;</span></span>
<span id="cb15-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-2" aria-hidden="true"></a><span class="va">description=</span><span class="st">&quot;Most recent articles&quot;</span></span>
<span id="cb15-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-3" aria-hidden="true"></a><span class="va">author=</span><span class="st">&quot;Yann Esposito&quot;</span></span>
<span id="cb15-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-4" aria-hidden="true"></a><span class="va">body=</span><span class="op">$(&lt;</span> <span class="va">$tmpdir</span>/index<span class="op">)</span></span>
<span id="cb15-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-5" aria-hidden="true"></a><span class="va">date=$(LC_TIME=</span>en_US <span class="fu">date</span> +<span class="st">&#39;%Y-%m-%d&#39;</span><span class="va">)</span></span>
<span id="cb15-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-6" aria-hidden="true"></a></span>
<span id="cb15-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-7" aria-hidden="true"></a><span class="co"># A neat trick to use pandoc template within a shell script</span></span>
<span id="cb15-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-8" aria-hidden="true"></a><span class="co"># the pandoc templates use $x$ format, we replace it by just $x</span></span>
<span id="cb15-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-9" aria-hidden="true"></a><span class="co"># to be used with envsubst</span></span>
<span id="cb15-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-10" aria-hidden="true"></a><span class="va">template=</span><span class="op">$(&lt;</span> templates/index.html | <span class="kw">\</span></span>
<span id="cb15-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-11" aria-hidden="true"></a>    sed <span class="st">&#39;s/\$\(header-includes\|table-of-content\)\$//&#39;</span> | <span class="kw">\</span></span>
<span id="cb15-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-12" aria-hidden="true"></a>    sed <span class="st">&#39;s/\$if.*\$//&#39;</span> | <span class="kw">\</span></span>
<span id="cb15-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-13" aria-hidden="true"></a>    perl -pe <span class="st">&#39;s#(\$[^\$]*)\$#$1#g&#39;</span> <span class="op">)</span></span>
<span id="cb15-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-14" aria-hidden="true"></a><span class="kw">{</span></span>
<span id="cb15-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-15" aria-hidden="true"></a>    <span class="bu">export</span> <span class="va">title</span></span>
<span id="cb15-16"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-16" aria-hidden="true"></a>    <span class="bu">export</span> <span class="va">author</span></span>
<span id="cb15-17"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-17" aria-hidden="true"></a>    <span class="bu">export</span> <span class="va">description</span></span>
<span id="cb15-18"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-18" aria-hidden="true"></a>    <span class="bu">export</span> <span class="va">date</span></span>
<span id="cb15-19"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-19" aria-hidden="true"></a>    <span class="bu">export</span> <span class="va">body</span></span>
<span id="cb15-20"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-20" aria-hidden="true"></a>    <span class="bu">echo</span> <span class="va">${template}</span> <span class="kw">|</span> <span class="ex">envsubst</span></span>
<span id="cb15-21"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-21" aria-hidden="true"></a><span class="kw">}</span> <span class="op">&gt;</span> <span class="st">&quot;</span><span class="va">$indexfile</span><span class="st">&quot;</span></span>
<span id="cb15-22"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-22" aria-hidden="true"></a></span>
<span id="cb15-23"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-23" aria-hidden="true"></a><span class="fu">rm</span> -rf <span class="va">$tmpdir</span></span>
<span id="cb15-24"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb15-24" aria-hidden="true"></a><span class="bu">echo</span> <span class="st">&quot;* HTML INDEX [done]&quot;</span></span></code></pre></div><h2 id="rss">RSS</h2><p>My RSS generation is similar to the system I used to generate the index file. I just slightly improved the rules.</p><p>The <code>Makefile</code> blocks look like:</p><div class="sourceCode" id="cb16"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb16-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-1" aria-hidden="true"></a><span class="co"># RSS</span></span>
<span id="cb16-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-2" aria-hidden="true"></a><span class="dt">DST_RSS_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> %.xml</span><span class="kw">,</span><span class="st">%.rss</span><span class="kw">,</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_XML_FILES</span><span class="ch">))</span></span>
<span id="cb16-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-3" aria-hidden="true"></a><span class="dt">MK_RSS_ENTRY </span><span class="ch">:=</span><span class="st"> ./engine/mk-rss-entry.sh</span></span>
<span id="cb16-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-4" aria-hidden="true"></a><span class="dv">$(RSS_CACHE_DIR)/%.rss:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">RSS_CACHE_DIR</span><span class="ch">)</span><span class="dt">/%.xml </span><span class="ch">$(</span><span class="dt">MK_RSS_ENTRY</span><span class="ch">)</span></span>
<span id="cb16-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-5" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="dt">RSS_CACHE_DIR</span><span class="ch">)</span></span>
<span id="cb16-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-6" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">MK_RSS_ENTRY</span><span class="ch">)</span> <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb16-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-7" aria-hidden="true"></a></span>
<span id="cb16-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-8" aria-hidden="true"></a><span class="dt">RSS </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/rss.xml</span></span>
<span id="cb16-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-9" aria-hidden="true"></a><span class="dt">MKRSS </span><span class="ch">:=</span><span class="st"> engine/mkrss.sh</span></span>
<span id="cb16-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-10" aria-hidden="true"></a><span class="dv">$(RSS):</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_RSS_FILES</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">MKRSS</span><span class="ch">)</span></span>
<span id="cb16-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-11" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">MKRSS</span><span class="ch">)</span></span>
<span id="cb16-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-12" aria-hidden="true"></a></span>
<span id="cb16-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-13" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> rss</span></span>
<span id="cb16-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-14" aria-hidden="true"></a><span class="dv">rss:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">RSS</span><span class="ch">)</span></span>
<span id="cb16-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb16-15" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> rss</span></span></code></pre></div><h2 id="gemini">Gemini</h2><p>I wrote a minimal script to transform my org files to gemini files. I also need to generate an index and an atom file for gemini:</p><div class="sourceCode" id="cb17"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb17-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-1" aria-hidden="true"></a><span class="co"># ORG -&gt; GEMINI</span></span>
<span id="cb17-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-2" aria-hidden="true"></a><span class="dt">EXT </span><span class="ch">:=</span><span class="st"> .org</span></span>
<span id="cb17-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-3" aria-hidden="true"></a><span class="dt">SRC_GMI_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">shell</span><span class="st"> find </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st"> -type f -name &quot;*</span><span class="ch">$(</span><span class="dt">EXT</span><span class="ch">)</span><span class="st">&quot; </span><span class="ch">$(</span><span class="dt">NO_DRAFT</span><span class="ch">))</span></span>
<span id="cb17-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-4" aria-hidden="true"></a><span class="dt">DST_GMI_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">subst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">EXT</span><span class="ch">)</span><span class="kw">,</span><span class="st">.gmi</span><span class="kw">,</span><span class="st"> \</span></span>
<span id="cb17-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-5" aria-hidden="true"></a><span class="st">                        </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="st"> \</span></span>
<span id="cb17-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-6" aria-hidden="true"></a><span class="st">                            </span><span class="ch">$(</span><span class="dt">SRC_GMI_FILES</span><span class="ch">)))</span></span>
<span id="cb17-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-7" aria-hidden="true"></a><span class="dt">GMI </span><span class="ch">:=</span><span class="st"> engine/org2gemini.sh</span></span>
<span id="cb17-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-8" aria-hidden="true"></a><span class="dv">$(DST_DIR)/%.gmi:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%.org </span><span class="ch">$(</span><span class="dt">GMI</span><span class="ch">)</span><span class="dt"> engine/org2gemini_step1.sh</span></span>
<span id="cb17-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-9" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span></span>
<span id="cb17-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-10" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">GMI</span><span class="ch">)</span> <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb17-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-11" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_GMI_FILES</span><span class="ch">)</span></span>
<span id="cb17-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-12" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> gmi</span></span>
<span id="cb17-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-13" aria-hidden="true"></a><span class="dv">gmi:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_GMI_FILES</span><span class="ch">)</span></span>
<span id="cb17-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-14" aria-hidden="true"></a></span>
<span id="cb17-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-15" aria-hidden="true"></a><span class="co"># GEMINI INDEX</span></span>
<span id="cb17-16"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-16" aria-hidden="true"></a><span class="dt">GMI_INDEX </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/index.gmi</span></span>
<span id="cb17-17"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-17" aria-hidden="true"></a><span class="dt">MK_GMI_INDEX </span><span class="ch">:=</span><span class="st"> engine/mk-gemini-index.sh</span></span>
<span id="cb17-18"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-18" aria-hidden="true"></a><span class="dv">$(GMI_INDEX):</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_GMI_FILES</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">MK_GMI_INDEX</span><span class="ch">)</span></span>
<span id="cb17-19"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-19" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span></span>
<span id="cb17-20"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-20" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">MK_GMI_INDEX</span><span class="ch">)</span></span>
<span id="cb17-21"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-21" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">GMI_INDEX</span><span class="ch">)</span></span>
<span id="cb17-22"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-22" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> gmi-index</span></span>
<span id="cb17-23"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-23" aria-hidden="true"></a><span class="dv">gmi-index:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">GMI_INDEX</span><span class="ch">)</span></span>
<span id="cb17-24"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-24" aria-hidden="true"></a></span>
<span id="cb17-25"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-25" aria-hidden="true"></a><span class="co"># RSS</span></span>
<span id="cb17-26"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-26" aria-hidden="true"></a><span class="dt">GEM_ATOM </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/gem-atom.xml</span></span>
<span id="cb17-27"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-27" aria-hidden="true"></a><span class="dt">MK_GEMINI_ATOM </span><span class="ch">:=</span><span class="st"> engine/mk-gemini-atom.sh</span></span>
<span id="cb17-28"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-28" aria-hidden="true"></a><span class="dv">$(GEM_ATOM):</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_GMI_FILES</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">MK_GEMINI_ATOM</span><span class="ch">)</span></span>
<span id="cb17-29"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-29" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">MK_GEMINI_ATOM</span><span class="ch">)</span></span>
<span id="cb17-30"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-30" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">GEM_ATOM</span><span class="ch">)</span></span>
<span id="cb17-31"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-31" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> gmi-atom</span></span>
<span id="cb17-32"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-32" aria-hidden="true"></a><span class="dv">gmi-atom:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">GMI_ATOM</span><span class="ch">)</span></span>
<span id="cb17-33"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-33" aria-hidden="true"></a></span>
<span id="cb17-34"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-34" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> gemini</span></span>
<span id="cb17-35"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb17-35" aria-hidden="true"></a><span class="dv">gemini:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_GMI_FILES</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">GMI_INDEX</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">GEM_ATOM</span><span class="ch">)</span></span></code></pre></div><h2 id="images">Images</h2><p>For images, I try to compress them all with imagemagick.</p><div class="sourceCode" id="cb18"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb18-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-1" aria-hidden="true"></a><span class="co"># Images</span></span>
<span id="cb18-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-2" aria-hidden="true"></a><span class="dt">SRC_IMG_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">shell</span><span class="st"> find </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st"> -type f -name &quot;*.jpg&quot; -or -name &quot;*.jpeg&quot; -or -name &quot;*.gif&quot; -or -name &quot;*.png&quot;</span><span class="ch">)</span></span>
<span id="cb18-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-3" aria-hidden="true"></a><span class="dt">DST_IMG_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_IMG_FILES</span><span class="ch">))</span></span>
<span id="cb18-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-4" aria-hidden="true"></a></span>
<span id="cb18-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-5" aria-hidden="true"></a><span class="dv">$(DST_DIR)/%.jpg:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%.jpg</span></span>
<span id="cb18-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-6" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span></span>
<span id="cb18-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-7" aria-hidden="true"></a>    convert <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> -quality 50 -resize 800x800\&gt; <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb18-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-8" aria-hidden="true"></a></span>
<span id="cb18-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-9" aria-hidden="true"></a><span class="dv">$(DST_DIR)/%.jpg:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%.jpeg</span></span>
<span id="cb18-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-10" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span></span>
<span id="cb18-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-11" aria-hidden="true"></a>    convert <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> -quality 50 -resize 800x800\&gt; <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb18-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-12" aria-hidden="true"></a></span>
<span id="cb18-13"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-13" aria-hidden="true"></a><span class="dv">$(DST_DIR)/%.gif:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%.gif</span></span>
<span id="cb18-14"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-14" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span></span>
<span id="cb18-15"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-15" aria-hidden="true"></a>    convert <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> -quality 50 -resize 800x800\&gt; <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb18-16"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-16" aria-hidden="true"></a></span>
<span id="cb18-17"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-17" aria-hidden="true"></a><span class="dv">$(DST_DIR)/%.png:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%.png</span></span>
<span id="cb18-18"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-18" aria-hidden="true"></a>    <span class="ch">@</span><span class="fu">mkdir -p </span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span></span>
<span id="cb18-19"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-19" aria-hidden="true"></a>    convert <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> -quality 50 -resize 800x800\&gt; <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span>
<span id="cb18-20"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-20" aria-hidden="true"></a></span>
<span id="cb18-21"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-21" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> img</span></span>
<span id="cb18-22"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-22" aria-hidden="true"></a><span class="dv">img:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_IMG_FILES</span><span class="ch">)</span></span>
<span id="cb18-23"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb18-23" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_IMG_FILES</span><span class="ch">)</span></span></code></pre></div><h2 id="deploy">Deploy</h2><p>A nice bonus is that I also deploy my website using make.</p><div class="sourceCode" id="cb19"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb19-1"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-1" aria-hidden="true"></a><span class="co"># DEPLOY</span></span>
<span id="cb19-2"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-2" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> site</span></span>
<span id="cb19-3"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-3" aria-hidden="true"></a><span class="dv">site:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">ALL</span><span class="ch">)</span></span>
<span id="cb19-4"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-4" aria-hidden="true"></a></span>
<span id="cb19-5"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-5" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> deploy</span></span>
<span id="cb19-6"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-6" aria-hidden="true"></a><span class="dv">deploy:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">ALL</span><span class="ch">)</span></span>
<span id="cb19-7"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-7" aria-hidden="true"></a>    engine/sync.sh</span>
<span id="cb19-8"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-8" aria-hidden="true"></a></span>
<span id="cb19-9"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-9" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> clean</span></span>
<span id="cb19-10"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-10" aria-hidden="true"></a><span class="dv">clean:</span></span>
<span id="cb19-11"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-11" aria-hidden="true"></a>    <span class="ch">-</span><span class="fu">[ ! -z </span><span class="st">&quot;</span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">&quot;</span><span class="fu"> ] &amp;&amp; rm -rf </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="fu">/*</span></span>
<span id="cb19-12"><a href="https://her.esy.fun/posts/0018-makefile-as-static-site-builder-follow-up/index.html#cb19-12" aria-hidden="true"></a>    <span class="ch">-</span><span class="fu">[ ! -z </span><span class="st">&quot;</span><span class="ch">$(</span><span class="dt">CACHE_DIR</span><span class="ch">)</span><span class="st">&quot;</span><span class="fu"> ] &amp;&amp; rm -rf </span><span class="ch">$(</span><span class="dt">CACHE_DIR</span><span class="ch">)</span><span class="fu">/*</span></span></code></pre></div></div>
]]></description>
</item>


<item>
<title>Static Blog Builder</title>
<guid>https://her.esy.fun/posts/0017-static-blog-builder/index.html</guid>
<pubDate>Sat, 01 May 2021 00:00:00 +0200</pubDate>
<category>blog</category>
<category>static</category>
<description><![CDATA[
<div id="content"><p>As someone on the Internet said not so far ago. Building its own static building system is a rite of passage for many developers. It has a lot of nice features. It gives a goal with a feeling of accomplishment. It is simple enough so most developers could build their own system. It could also become complex when you go down the rabbit hole.</p><p>Along the years I used different tools and used and wrote of few static website systems:</p><ul><li><a href="https://nanoc.app">nanoc</a> (in Ruby), at that time it looked like this: <a href="https://web.archive.html/web/20081002071448/http://nanoc.stoneship.html/">old nanoc 2 website</a></li><li><a href="https://jaspervdj.be/hakyll/">hakyll</a> (haskell static website generator)</li><li><a href="https://orgmode.html/worg/org-tutorials/org-publish-html-tutorial.html">org-publish</a> (emacs package in conjunction with org-mode)</li><li><a href="https://shakebuild.com">shake</a> (haskell again)</li></ul><p>So if you look at the progression, I first used nanoc because I used ruby and it was a new solution, the website looked really great. Also the main developer <a href="https://denisdefreyne.com">Denis Defreyne</a> was really helpful. Ruby was really great at dealing with regular expressions for hacking my documents.</p><p>Then I was interested in Haskell, and I switched to a Haskell-made solution. I used hakyll, and I wrote a bit about it in <a href="http://yannesposito.com/Scratch/en/blog/Hakyll-setup/">Hakyll Setup</a>. As a side note, the author of Hakyll <a href="https://jaspervdj.be/hakyll/">Jasper Van der Jeugt</a> is apparently a friend of the author of nanoc. They both wrote a static site generators with their preferred programming language. I added a lot of personal features to my own site builder. It was a nice toy project.</p><p>Then, due to a major disruption in my professional and private life I stopped to take care of my website.</p><p>And a few years ago, I wanted to start a new website from scratch. In the meantime I switched my editor of choice from vim to Emacs. I started to work in Clojure and emacs is generally a natural choice because you can configure it with LISP. I discovered <a href="https://orgmode.html/worg/org-tutorials/org-publish-html-tutorial.html">org-mode</a> (I don't think the homepage of org mode makes justice to how incredible it is). So org-mode comes with an export system. Thus I switched to org-publish. Again <a href="https://her.esy.fun/posts/0001-new-blog/index.html">I wrote a bit about it</a>.</p><p>It was nice but slow. I improved a few things like writing a short script to <a href="https://her.esy.fun/posts/0005-rss-gen/index.html">Generate RSS from a tree of html files.</a> I still had the feeling it was too slow.</p><p>Static site building is a specific usage of a build system. And as I knew I could use <code>pandoc</code> to build HTML out of org-mode files and still versed in the Haskell culture I decided to try <a href="https://shakebuild.com">shake</a>. You can learn more by reading this excellent paper about it, I think all developer should read it: <a href="https://github.com/snowleopard/build-systems/releases/download/icfp-submission/build-systems.pdf">Build System Ã  la carte</a>.</p><p>As a bonus, <a href="https://pandoc.html">pandoc</a> is written in Haskell. I could then directly use the <a href="https://pandoc.html">pandoc</a> library in my build program. It worked like a charm and it was <strong>very fast</strong> as compared to other solutions I tried. So really let me tell you shake is a great build system.</p><p>Unfortunately it was not perfect. While it was very fast, and I was able to use pandoc API directly. It made me dependent on Haskell. The best way I found to have Haskell reproducible build environment is to use <a href="https://nixos.html/nix">nix</a>. This was great until the Big Sur update. To keep it short, nix stopped working on my computers after I upgraded my to Big Sur. Gosh, it was painful to fix.</p><p>Concurrently I discovered <a href="file:///posts/0016-gemini/index.html">gemini</a> and wanted to duplicate my website into gemini sphere. So I tried to update my build system but my code was to oriented to use pandoc and it was painful to have gemini in the middle of it. Particularly, generating a gemini index file. My main goal was to have gemini file that could only be linked from withing gemini sphere. Because gemini is a lot smaller web where you could feel a bit more protected from what the Web has become along the years. Whatever, in the end, I just had two problems to tackles.</p><ol><li>Haskell became difficult to trust as very stable tool. Stable in the sense that I would not have any support work to do in order to keep just using it and not fixing/tweaking it.</li><li>Simplify the overall system to have a simpler build description</li></ol><p>So a very stable tool that I am pretty sure will still work almost exactly as today in 10 years is <strong><code>make</code></strong> (more precisely gnumake). I expected a lot of people had already come to the same conclusion and wrote about it. To my great surprise, I found very few article about generating static website with make. I only found solutions a bit too specific for my need. This is why I would like to give you a more generic starting point solution.</p><h1 id="the--makefile-">The <code>Makefile</code></h1><p>Instead of copy/pasting my current <code>Makefile</code> entirely let me give you a more generic one. It should be a great start.</p><p>The first part will be used to simply copy the files from <code>src/</code> to <code>_site/</code>.</p><div class="sourceCode" id="cb1"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb1-1"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-1" aria-hidden="true"></a><span class="dv">all:</span><span class="dt"> website</span></span>
<span id="cb1-2"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-2" aria-hidden="true"></a></span>
<span id="cb1-3"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-3" aria-hidden="true"></a><span class="co"># directory containing my org files as well as my assets files</span></span>
<span id="cb1-4"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-4" aria-hidden="true"></a><span class="dt">SRC_DIR </span><span class="ch">?=</span><span class="st"> src</span></span>
<span id="cb1-5"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-5" aria-hidden="true"></a><span class="co"># directory where I will but the files for my website (HTML + assets)</span></span>
<span id="cb1-6"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-6" aria-hidden="true"></a><span class="dt">DST_DIR </span><span class="ch">?=</span><span class="st"> _site</span></span>
<span id="cb1-7"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-7" aria-hidden="true"></a></span>
<span id="cb1-8"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-8" aria-hidden="true"></a><span class="co"># list all files in src</span></span>
<span id="cb1-9"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-9" aria-hidden="true"></a><span class="co"># if you want to exclude .org files use the exclude from the find command</span></span>
<span id="cb1-10"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-10" aria-hidden="true"></a><span class="dt">SRC_RAW_FILES </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">shell</span><span class="st"> find </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st"> -type f</span><span class="ch">)</span></span>
<span id="cb1-11"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-11" aria-hidden="true"></a><span class="co"># generate all file that should be copied in the site</span></span>
<span id="cb1-12"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-12" aria-hidden="true"></a><span class="co"># For my site, I want to publish my source files along the HTML files</span></span>
<span id="cb1-13"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-13" aria-hidden="true"></a><span class="dt">DST_RAW_FILES   </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">patsubst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/%</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">SRC_RAW_FILES</span><span class="ch">))</span></span>
<span id="cb1-14"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-14" aria-hidden="true"></a><span class="dt">ALL             </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_RAW_FILES</span><span class="ch">)</span></span>
<span id="cb1-15"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-15" aria-hidden="true"></a></span>
<span id="cb1-16"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-16" aria-hidden="true"></a><span class="co"># COPY EVERYTHING (.org file included)</span></span>
<span id="cb1-17"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-17" aria-hidden="true"></a><span class="dv">$(DST_DIR)/% :</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%</span></span>
<span id="cb1-18"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-18" aria-hidden="true"></a>    mkdir -p <span class="st">&quot;</span><span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span><span class="st">&quot;</span></span>
<span id="cb1-19"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb1-19" aria-hidden="true"></a>    cp <span class="st">&quot;</span><span class="ch">$&lt;</span><span class="st">&quot;</span> <span class="st">&quot;</span><span class="ch">$@</span><span class="st">&quot;</span></span></code></pre></div><p>This part is about running the <code>pandoc</code> command for all <code>org</code> files in <code>src/</code> so they generate a html file in <code>_site/</code>.</p><div class="sourceCode" id="cb2"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb2-1"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-1" aria-hidden="true"></a><span class="co"># ORG -&gt; HTML, If you prefer markdown replace .org by .md</span></span>
<span id="cb2-2"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-2" aria-hidden="true"></a><span class="dt">EXT </span><span class="ch">:=</span><span class="st"> .org</span></span>
<span id="cb2-3"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-3" aria-hidden="true"></a><span class="co"># all source file we&#39;ll pass to pandoc</span></span>
<span id="cb2-4"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-4" aria-hidden="true"></a><span class="dt">SRC_PANDOC_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">shell</span><span class="st"> find </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="st"> -type f -name &quot;*</span><span class="ch">$(</span><span class="dt">EXT</span><span class="ch">)</span><span class="st">&quot;</span><span class="ch">)</span></span>
<span id="cb2-5"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-5" aria-hidden="true"></a><span class="co"># all destination files we expect (replace the extension by .html)</span></span>
<span id="cb2-6"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-6" aria-hidden="true"></a><span class="dt">DST_PANDOC_FILES </span><span class="ch">?=</span><span class="st"> </span><span class="ch">$(</span><span class="kw">subst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">EXT</span><span class="ch">)</span><span class="kw">,</span><span class="st">.html</span><span class="kw">,</span><span class="st"> \</span></span>
<span id="cb2-7"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-7" aria-hidden="true"></a><span class="st">                        </span><span class="ch">$(</span><span class="kw">subst</span><span class="st"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="kw">,</span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="kw">,</span><span class="st"> \</span></span>
<span id="cb2-8"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-8" aria-hidden="true"></a><span class="st">                            </span><span class="ch">$(</span><span class="dt">SRC_PANDOC_FILES</span><span class="ch">)))</span></span>
<span id="cb2-9"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-9" aria-hidden="true"></a><span class="dt">ALL              </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_PANDOC_FILES</span><span class="ch">)</span></span>
<span id="cb2-10"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-10" aria-hidden="true"></a></span>
<span id="cb2-11"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-11" aria-hidden="true"></a><span class="co"># use a template (you should use one)</span></span>
<span id="cb2-12"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-12" aria-hidden="true"></a><span class="dt">TEMPLATE </span><span class="ch">?=</span><span class="st"> templates/post.html</span></span>
<span id="cb2-13"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-13" aria-hidden="true"></a><span class="co"># URL of the CSS put yours</span></span>
<span id="cb2-14"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-14" aria-hidden="true"></a><span class="dt">CSS </span><span class="ch">=</span><span class="st"> /css/y.css</span></span>
<span id="cb2-15"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-15" aria-hidden="true"></a><span class="co"># The pandoc command to run to generate an html out of a source file</span></span>
<span id="cb2-16"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-16" aria-hidden="true"></a><span class="dt">PANDOC </span><span class="ch">:=</span><span class="st"> pandoc </span><span class="ch">\</span></span>
<span id="cb2-17"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-17" aria-hidden="true"></a><span class="st">            -c </span><span class="ch">$(</span><span class="dt">CSS</span><span class="ch">)</span><span class="st"> </span><span class="ch">\</span></span>
<span id="cb2-18"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-18" aria-hidden="true"></a><span class="st">            --template=</span><span class="ch">$(</span><span class="dt">TEMPLATE</span><span class="ch">)</span><span class="st"> </span><span class="ch">\</span></span>
<span id="cb2-19"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-19" aria-hidden="true"></a><span class="st">            --from org </span><span class="ch">\</span></span>
<span id="cb2-20"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-20" aria-hidden="true"></a><span class="st">            --to html5 </span><span class="ch">\</span></span>
<span id="cb2-21"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-21" aria-hidden="true"></a><span class="st">            --standalone</span></span>
<span id="cb2-22"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-22" aria-hidden="true"></a></span>
<span id="cb2-23"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-23" aria-hidden="true"></a><span class="co"># Generate all html if the org file change or the template change</span></span>
<span id="cb2-24"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-24" aria-hidden="true"></a><span class="dv">$(DST_DIR)/%.html:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">SRC_DIR</span><span class="ch">)</span><span class="dt">/%.org </span><span class="ch">$(</span><span class="dt">TEMPLATE</span><span class="ch">)</span></span>
<span id="cb2-25"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-25" aria-hidden="true"></a>    mkdir -p <span class="ch">$(</span><span class="kw">dir</span><span class="st"> </span><span class="ch">$@)</span></span>
<span id="cb2-26"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-26" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">PANDOC</span><span class="ch">)</span> <span class="ch">$&lt;</span> <span class="ch">\</span></span>
<span id="cb2-27"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-27" aria-hidden="true"></a>        --output <span class="ch">$@</span></span>
<span id="cb2-28"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb2-28" aria-hidden="true"></a></span></code></pre></div><p>A missing part is often the part where you would like to generate an index page to list the latest posts. Here you are a bit alone, you need to make one yourself. There is not generic way to do this one.</p><div class="sourceCode" id="cb3"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb3-1"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb3-1" aria-hidden="true"></a><span class="co"># Generating an index page is not difficult but not trivial either</span></span>
<span id="cb3-2"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb3-2" aria-hidden="true"></a><span class="dt">HTML_INDEX </span><span class="ch">:=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="st">/index.html</span></span>
<span id="cb3-3"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb3-3" aria-hidden="true"></a><span class="dt">MKINDEX </span><span class="ch">:=</span><span class="st"> engine/mk-index.sh</span></span>
<span id="cb3-4"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb3-4" aria-hidden="true"></a><span class="dv">$(HTML_INDEX):</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">DST_PANDOC_FILES</span><span class="ch">)</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">MKINDEX</span><span class="ch">)</span></span>
<span id="cb3-5"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb3-5" aria-hidden="true"></a>    mkdir -p <span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span></span>
<span id="cb3-6"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb3-6" aria-hidden="true"></a>    <span class="ch">$(</span><span class="dt">MKINDEX</span><span class="ch">)</span></span>
<span id="cb3-7"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb3-7" aria-hidden="true"></a><span class="dt">ALL </span><span class="ch">+=</span><span class="st"> </span><span class="ch">$(</span><span class="dt">HTML_INDEX</span><span class="ch">)</span></span></code></pre></div><p>Finally, a few useful make commands. <code>make clean</code> and <code>make deploy</code>.</p><div class="sourceCode" id="cb4"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb4-1"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-1" aria-hidden="true"></a><span class="co"># make deploy will deploy the files to my website write your own script</span></span>
<span id="cb4-2"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-2" aria-hidden="true"></a><span class="dv">deploy:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">ALL</span><span class="ch">)</span></span>
<span id="cb4-3"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-3" aria-hidden="true"></a>    engine/deploy.sh</span>
<span id="cb4-4"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-4" aria-hidden="true"></a></span>
<span id="cb4-5"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-5" aria-hidden="true"></a><span class="dv">website:</span><span class="dt"> </span><span class="ch">$(</span><span class="dt">ALL</span><span class="ch">)</span></span>
<span id="cb4-6"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-6" aria-hidden="true"></a></span>
<span id="cb4-7"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-7" aria-hidden="true"></a><span class="ot">.PHONY:</span><span class="dt"> clean</span></span>
<span id="cb4-8"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-8" aria-hidden="true"></a></span>
<span id="cb4-9"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-9" aria-hidden="true"></a><span class="dv">clean:</span></span>
<span id="cb4-10"><a href="https://her.esy.fun/posts/0017-static-blog-builder/index.html#cb4-10" aria-hidden="true"></a>    <span class="ch">-</span><span class="fu">rm -rf </span><span class="ch">$(</span><span class="dt">DST_DIR</span><span class="ch">)</span><span class="fu">/*</span></span></code></pre></div><p>Limitation: <code>make</code> is old. So it really does not support spaces in filenames. Take care of that.</p><p>Let me tell you. While this is quite a minimalist approach (&lt;100 lines) it is nevertheless <strong>very fast</strong>. It will only generate the minimal amount of work to generate your website. I have a nice watcher script that update the website every time I save a file. It is almost instantaneous.</p><p>The only risky dependencies for my website now is <code>pandoc</code>. Perhaps, they will change how they generate an HTML from the same org file in the future. I still use <code>nix</code> to pin my pandoc version. The static site builder itself is very simple, very stable and still very efficient.</p><p>As a conclusion, if you want to write your own static site builder that's great. There are plenty of things to learn along the way. Still if you want something stable for a long time, with a minimal amount of dependencies, I think this Makefile is really a great start.</p></div>
]]></description>
</item>


<item>
<title>Gemini</title>
<guid>https://her.esy.fun/posts/0016-gemini/index.html</guid>
<pubDate>Mon, 09 Nov 2020 00:00:00 +0100</pubDate>
<category>internet</category>
<category>gopher</category>
<category>gemini</category>
<description><![CDATA[
<div id="content"><p>This weekend I read an article about gopher and gemini. I already seen articles about gemini pass. Somehow, it was more appealing to me than gopher space for totally subjective reasons I think. Anyway this time I really dug into it, and I loved the experience.</p><p>At first sight gemini is like a parallel web for nerds. It has fundamental changes that I would have really liked to see from the modern web. The client decide the design, no user tracking, calm, minimalist, simple.</p><p>Right now, on the web, most news website make the experience terrible to read the article. The page is bloated with a lot of animations, popin asking you to accept the cookies, ads with videos, strange fonts or design, plenty of javascript, trackers, etcâ€¦</p><p>Gemini make those kind of anti-design impractical. In gemini space there is no:</p><ul><li>CSS: the client decide the look of the page, the fonts, the colors, the width of the columns, etcâ€¦</li><li>inline image: you can still link to images, but images should not be displayed in the middle of the text.</li><li>inline links: If you link to an external resource, it is clearly visible as an element on its own line.</li><li>cookies</li><li>HTTP headers used to track users</li><li>scripts on the client side</li><li>hard to parse format (no HTML, XHTML, etcâ€¦)</li></ul><p>Another strength of Gemini is its protocol's simplicity. It is easy to write your own gemini server as well as your own gemini client within a few hours of work in your programming language of choice.</p><p>And last but not least, gemini is unfit to serve "big" files. So we should not experience people going to gemini for music/movie piracy. If you want to serve "big" files you should use another protocol.</p><p>Personally I started to browse gemini directly from emacs with elpher. But I know there are a lot of clients.</p><p>I liked gemini so much I hacked my blog to also publish in the gemini sphere. I serve my pages with a rust based server. And I hacked a quick script to transform my org mode files to gemini format. Gemini file format is a kind of super simplified markdown. I really like the simplicity of it.</p><p>Here are a few links to get you started.</p><p>Web:</p><ul><li><a href="https://gemini.circumlunar.space">gemini homepage</a></li><li><a href="https://thelambdalab.xyz/elpher/">elpher emacs gopher and gemini client</a></li><li><a href="https://portal.mozz.us/gemini/gemini.circumlunar.space/">Explore gemini from the web</a></li></ul><p>Gopher:</p><ul><li><a href="gopher://thelambdalab.xyz/1/projects/elpher/">elpher</a></li></ul><p>Gemini:</p><ul><li><a href="gemini://her.esy.fun">my website in gemini</a></li></ul></div>
]]></description>
</item>


<item>
<title>How I use org-mode</title>
<guid>https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html</guid>
<pubDate>Thu, 29 Oct 2020 00:00:00 +0100</pubDate>
<category>org-mode</category>
<description><![CDATA[
<div id="content"><div id="toc"><ul><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#overview">Overview</a><ul><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#daily-routine">daily routine</a></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#document-writing">document writing</a></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#note-taking">note taking</a></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#journaling">journal</a></li></ul></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#task-management">Task Management</a><ul><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#worfklow-1--planned-tasks---org-agenda---clock">Workflow 1; planned tasks : org-agenda + clock</a></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#workflow-2--org-capture-org-refile">Workflow 2: Tracking; org-capture</a></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#workflow-3--org-capture---org-refile">Workflow 3: Add new tasks; org-capture / org-refile</a></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#configuration">Configuration</a></li></ul></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#conclusions">Conclusions</a></li><li><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#footnotes">Footnotes</a></li></ul></div><div class="abstract"><p>In this article I'll try to give an overview of my current use of <a href="https://orgmode.html">org mode</a>. I use org mode for:</p><ul><li>tasks management & time tracking</li><li>writing documents (articles, book, etcâ€¦)</li><li>note taking ; which I consider slightly different from just writing documents</li></ul><p>TL;DR:</p><ul><li><code>SPC y a</code> â‡’ Show agenda view for today</li><li><code>SPC X</code> â‡’ Capture a new task, write a description, then <code>C-c C-c</code>, save that in <code>tracker.org</code> (or <code>inbox.org</code> depending of the capture template)</li><li><code>SPC n o</code> â‡’ jump to the current time tracked tasks</li><li><code>SPC m c o</code> â‡’ stop the clock on that task; if you capture a new time tracking tasks you don't need to clock-out</li><li><code>SPC y o r</code> â‡’ <code>org-refile</code>, meaning move that task somewhere else</li><li><code>SPC q</code> â‡’ add/remove tags to that task</li></ul></div><p>In this article I would like to share a tool that was a real life changer to me: <a href="http://orgmode.html">org mode</a>.</p><p>In my opinion emacs is worth learning just for org-mode. This is by far the best solution I ever used to manage my tasks. I tried a lot of differents tools before it, and this is the only one I really stick with. It is so versatile that it can adapt to your very specific needs.</p><p>The major difficulty faced by tasks management application is the wrong level of complexity facing the user. This is a very hard problem to tackle.</p><p>If your system is too simple, the users will not be able to manage the tasks how they would like. If your system is too complex, the user will be faced with too much details. So most successful systems have a way to adapt their apparent complexity to the need of their users. And org mode is exactly like that. Not only starting with org mode can be extremely simple but also there are mostly no complexity limit.</p><p>Either org mode already handle one of your need, or most of the time you will find a package to fulfill your need. And if not, it is easy to write your own.</p><p>Here is the result of a few years of improving my use of org mode. Today I can say that org mode is part of my day to day life. I still invest a bit of time to improve minor details of my workflow time to time. But now my daily workflow is mostly stable. So I think I can share it.</p><h2 id="overview">Overview</h2><h3 id="daily-routine">daily routine</h3><p>The first thing I do in the morning is to open <code>org-agenda</code> view for today. It shows me the tasks planned for today. What are urgent tasks, deadlines, tasks that have deadlines in a few days, etcâ€¦ I also have a glimpse of my habits, tasks that I should start at some hour in the day, etcâ€¦</p><figure><img src="https://her.esy.fun/posts/0015-how-i-use-org-mode/img/org-super-agenda.png.webp" title="org-super-agenda" alt="Org super calendar view"></img><figcaption aria-hidden="true">Org super calendar view</figcaption></figure><p>I then start to track (<em>clock</em>) the tasks I'm currently working on.</p><p>Often during the day, I need to create new tasks. Most of the time I create a task and I add either a deadline or a schedule date.</p><p>Sometime I also need to deal with interruptions. In that case, I <em>capture</em> the interruption that will also create a new task being clocked.</p><p>At the end of the day, every tasks I worked on are saved in a <code>tracker.org</code> file. That file look like a date tree. And I generally generate a <em>report</em> that tell me how much hours I worked today. Some tasks are tagged <code>work</code>. The report filter only on the <code>work</code> tagged tasks.</p><p>Also I have some repeating tasks like review memory cards using a spaced repetition plugin. I start it, and it shows me a few <code>cards</code> with questions that I review. So mainly those cards contain info I want to keep in my mind and not only in my notes.</p><h3 id="document-writing">document writing</h3><p>Writing documents with org mode and in particular technical document is just incredible. Org mode feels a lot like markdown.</p><p>But org mode shine with its use of <strong>org-babel</strong>. <strong>org-babel</strong> is used to execute code inside your document. So you can execute block of code and get their result in block of code. For technical writing this is extremely useful.</p><p>For example, I wrote most part of an OAuth2 provider in Clojure. And to generate a documentation to some of our advanced users it is very nice to provide the full HTTP request along the response.</p><p>But I also often need to play a few tricks in the doc and directly use our Clojure code to generate JWT for example. The great part is the ability to use those JWT generated from Clojure code in the following code block making HTTP call.</p><p>That plus the natural ability to fold/unfold the tree structure of the org mode file is great.</p><h3 id="note-taking">note taking</h3><p>Time to time, I need to really take the time write note on a technical subject or sometime about articles I read about anything. For that I use <a href="https://github.com/org-roam/org-roam">org roam</a>. I only started to use it a few months ago. But this is a great addition to my previous workflow that used <code>deft</code> (that I still use). But I must say, this is pretty perfect as a note taking app.</p><p>Mainly you capture notes quite easily and put links about the subject, but also tags. In the end that generate a graph of notes that you could use later to dig into your own notes.</p><h3 id="journaling">journal</h3><p>Along with note taking. I also try to write a journal note everyday. For that I use org-journal (another org mode related package). I have a default template which take care of a few metrics I want to focus on. And I guess it is different for anyone of us.</p><h2 id="task-management">Task Management</h2><p>So here is a more detailed description about my org mode usage.</p><h3 id="worfklow-1--planned-tasks---org-agenda---clock">Workflow 1; planned tasks : org-agenda + clock</h3><ol><li>look at the current tasks planned for today</li><li>select a task, clock it</li><li>work on the task</li><li>back to the task and clock it out.</li></ol><p>I work most of my using emacs<a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>. Generally the first thing I do in the morning is opening `org-calendar`. It looks like this:</p><figure><img src="https://her.esy.fun/posts/0015-how-i-use-org-mode/img/org-super-agenda.png.webp" title="org-super-agenda" alt="Org super calendar view"></img><figcaption aria-hidden="true">Org super calendar view</figcaption></figure><p>Pretty brutalist interface which is a great thing to me. Distraction free interface going to the essential.</p><p>With this view, I see what I planned to do today. I also see a few "Due Soon" tasks in case I have the time to handle those.</p><p>When I start working on a task I start a clock on it (I simply type <code>I</code> when my cursor is on the TODO line). When I finished some task I change its status from TODO to something else. Mainly I'm prompted when doing so:</p><pre><code>{ [t] TODO   [p] IN-PROGRESS   [h] HOLD   [w] WAITING
  [d] DONE   [c] CANCELLED     [l] HANDLED }
</code></pre><p>And that's it. The time spent on the task as been clocked I can work on another task.</p><p>Looking at the agenda view you could notice habits. They start to become green when you are doing them correctly.</p><p>But generally, I don't use much direct clocking from the agenda. Most of the time I prefer the capture mechanism. Which bring us to "Workflow 2".</p><h3 id="workflow-2--org-capture-org-refile">Workflow 2: Tracking; org-capture</h3><p>Most of the tasks I perform on the day are not planned. I have a generic routine + some prepared events and tasks to performs. But during the day you have multiple interruptions, and part of my job is to write code reviews too. I cannot plan those.</p><p>In that case I use <code>org-capture</code> along <code>org-refile</code>. Mainly <code>org-capture</code> helps you create a new TODO entry. And <code>org-refile</code> will help you move that TODO entry to the correct place.</p><p>So let say I get a direct message in the chat asking me to do something. I generally start org capture (for me it's <code>SPC X</code>). I am presented with the following choice:</p><pre><code>Select a capture template
=========================

[t] todo
[c] chat
[e] email
[m] meeting
[p] pause
[r] review
[w] work
[i] interruption
[f] chore
---------------------------------------------------------------------------
[q] Abort
</code></pre><p>In my example it was a chat interruption. So I type <code>i</code> that presents me with this</p><pre><code>**** IN-PROGRESS |  :interruption:
:LOGBOOK:
[2020-09-23 Wed 08:01]
ref :: [link-to-where-I-was-in-emacs-when-captured]
</code></pre><p>My cursor placed where the <code>|</code> is displayed. Here I add the tag <code>chat</code> and a small description, "dm from John about X" for example. Then I type <code>C-c C-c</code> and the TODO is placed in a <code>tracker.org</code> file under a date tree that looks like this:</p><pre class="org-mode"><code>* 2020
** 2020-W39
*** 2020-09-21 Monday
*** 2020-09-22 Tuesday
*** 2020-09-23 Wednesday
**** IN-PROGRESS Chat with John about X                          :interruption:chat:
:LOGBOOK:
:END:
[2020-09-23 Wed 17:58]
ref ::
...
</code></pre><p>So the clock for this task started at the moment at made the capture. In my workflow, I prefer to finish the capture and stop clock later. So after I finished the capture, the clock is still running while the task is put in my tracker file.</p><p>Once I finished with that task. I can:</p><ol><li>Jump to the tasks with <code>SPC n o</code> (<code>org-clock-goto</code>), and stop the clock <code>SPC m c o</code> (<code>clock-out</code>).</li><li>Jump to the task and change its status to <code>DONE</code> which will stop the clock.</li><li>Capture another tasks which will stop the clock on the current task and will start on the new one.</li></ol><p>By the end of the day, my tracker file will contain a date tree with all the tasks I done in the day. All tasks nicely clocked. I generally create a clock report that look like this:</p><pre><code>#+BEGIN: clocktable :scope subtree :maxlevel 4 :timestamp t :narrow 36! :match &quot;work&quot;
#+CAPTION: Clock summary at [2020-09-23 Wed 08:20]
| Timestamp              | Headline                             | Time   |   |      |      |
|------------------------+--------------------------------------+--------+---+------+------|
|                        | *Total time*                         | *6:40* |   |      |      |
|------------------------+--------------------------------------+--------+---+------+------|
|                        | \_    2020-09-21 Monday              |        |   | 7:40 |      |
| [2020-09-21 Mon 08:54] | \_      check chat                   |        |   |      | 0:36 |
| [2020-09-21 Mon 09:30] | \_      check reviews                |        |   |      | 0:41 |
| [2020-09-21 Mon 10:11] | \_      check emails                 |        |   |      | 0:07 |
| [2020-09-21 Mon 10:37] | \_      review PR about xxx          |        |   |      | 0:44 |
| [2020-09-21 Mon 11:21] | \_      update my PR from feedbacks  |        |   |      | 0:36 |
| [2020-09-21 Mon 12:08] | \_      review John&#39;s PR about Foo   |        |   |      | 0:12 |
| [2020-09-21 Mon 13:41] | \_      review M&#39;s PR about Bar      |        |   |      | 0:11 |
| [2020-09-21 Mon 13:53] | \_      another thing                |        |   |      | 0:16 |
| [2020-09-21 Mon 14:09] | \_      review PR                    |        |   |      | 0:51 |
| [2020-09-21 Mon 15:00] | \_      work on PR                   |        |   |      | 1:30 |
| [2020-09-21 Mon 16:49] | \_      check another PR             |        |   |      | 0:33 |
| [2020-09-21 Mon 17:03] | \_      answer email                 |        |   |      | 0:55 |
| [2020-09-21 Mon 17:58] | \_      Chat John about X            |        |   |      | 0:28 |

</code></pre><p>And that's mostly it for TODOs and tasks handling.</p><h3 id="workflow-3--org-capture---org-refile">Workflow 3: Add new tasks; org-capture / org-refile</h3><p>Another thing I do quite often. I need to add new task to be done. Be it for today or another day.</p><p>In that case, I generally use org-capture again. This time I choose <code>t</code> for TODO and I generally detail the task to be done. I add either a SCHEDULE (when I plan to start) or a DEADLINE (when this must be finished) and I refile it.</p><p>So refile will start a fuzzy search to put this task under some subtree. So instead of going to my <code>tracker.org</code> file, this goes to my <code>inbox.org</code> file.</p><p>And it will appear in my agenda.</p><h3 id="configuration">Configuration</h3><p>So to have all of that, I added a lot of configuration over time. But here is the most important part.</p><p>Most of that config is what I personally think are better defaults. And a minor part of it only is about how I organize myself.</p><div class="sourceCode" id="cb6" data-org-language="emacs-lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb6-1"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-1" aria-hidden="true"></a>(<span class="kw">defun</span><span class="fu"> org-mode-config </span>()</span>
<span id="cb6-2"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-2" aria-hidden="true"></a>  <span class="st">&quot;Org-mode.&quot;</span></span>
<span id="cb6-3"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-3" aria-hidden="true"></a>  (<span class="kw">setq</span> org-extend-today-until <span class="dv">4</span></span>
<span id="cb6-4"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-4" aria-hidden="true"></a>        org-use-effective-time <span class="kw">t</span>)</span>
<span id="cb6-5"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-5" aria-hidden="true"></a>  (<span class="kw">setq</span> org-todo-keywords</span>
<span id="cb6-6"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-6" aria-hidden="true"></a>        &#39;((<span class="kw">sequence</span> <span class="st">&quot;TODO(t)&quot;</span></span>
<span id="cb6-7"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-7" aria-hidden="true"></a>                    <span class="st">&quot;IN-PROGRESS(p)&quot;</span></span>
<span id="cb6-8"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-8" aria-hidden="true"></a>                    <span class="st">&quot;|&quot;</span></span>
<span id="cb6-9"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-9" aria-hidden="true"></a>                    <span class="st">&quot;DONE(d)&quot;</span></span>
<span id="cb6-10"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-10" aria-hidden="true"></a>                    <span class="st">&quot;HOLD(h@/!)&quot;</span></span>
<span id="cb6-11"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-11" aria-hidden="true"></a>                    <span class="st">&quot;CANCELED(c@/!)&quot;</span></span>
<span id="cb6-12"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-12" aria-hidden="true"></a>                    <span class="st">&quot;HANDLED(l@/!)&quot;</span>)</span>
<span id="cb6-13"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-13" aria-hidden="true"></a>          (<span class="kw">sequence</span> <span class="st">&quot;|&quot;</span> <span class="st">&quot;PAUSE(p)&quot;</span> <span class="st">&quot;CHAT(c)&quot;</span> <span class="st">&quot;EMAIL(e)&quot;</span> <span class="st">&quot;MEETING(m)&quot;</span> <span class="st">&quot;REVIEW(r)&quot;</span> <span class="st">&quot;GEEK(g)&quot;</span>)))</span>
<span id="cb6-14"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-14" aria-hidden="true"></a></span>
<span id="cb6-15"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-15" aria-hidden="true"></a>  <span class="co">;;; Look &amp; Feel</span></span>
<span id="cb6-16"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-16" aria-hidden="true"></a></span>
<span id="cb6-17"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-17" aria-hidden="true"></a>  <span class="co">;; I like to have something different than ellipsis because I often use them</span></span>
<span id="cb6-18"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-18" aria-hidden="true"></a>  <span class="co">;; myself.</span></span>
<span id="cb6-19"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-19" aria-hidden="true"></a>  (<span class="kw">setq</span> org-ellipsis <span class="st">&quot; [+]&quot;</span>)</span>
<span id="cb6-20"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-20" aria-hidden="true"></a>  (custom-set-faces &#39;(org-ellipsis ((<span class="kw">t</span> (:foreground <span class="st">&quot;gray40&quot;</span> :underline <span class="kw">nil</span>)))))</span>
<span id="cb6-21"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-21" aria-hidden="true"></a></span>
<span id="cb6-22"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-22" aria-hidden="true"></a>  (<span class="kw">defun</span><span class="fu"> my-org-settings </span>()</span>
<span id="cb6-23"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-23" aria-hidden="true"></a>    (org-display-inline-images)</span>
<span id="cb6-24"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-24" aria-hidden="true"></a>    (<span class="kw">setq</span> fill-column <span class="dv">75</span>)</span>
<span id="cb6-25"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-25" aria-hidden="true"></a>    (abbrev-mode)</span>
<span id="cb6-26"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-26" aria-hidden="true"></a>    (org-indent-mode)</span>
<span id="cb6-27"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-27" aria-hidden="true"></a>    <span class="kw">nil</span>)</span>
<span id="cb6-28"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-28" aria-hidden="true"></a></span>
<span id="cb6-29"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-29" aria-hidden="true"></a>  (add-hook &#39;org-mode-hook #&#39;my-org-settings)</span>
<span id="cb6-30"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-30" aria-hidden="true"></a></span>
<span id="cb6-31"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-31" aria-hidden="true"></a>  (<span class="kw">setq</span> org-tags-column <span class="dv">69</span>)</span>
<span id="cb6-32"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-32" aria-hidden="true"></a></span>
<span id="cb6-33"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-33" aria-hidden="true"></a>  <span class="co">;; src block indentation / editing / syntax highlighting</span></span>
<span id="cb6-34"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-34" aria-hidden="true"></a>  (<span class="kw">setq</span> org-src-fontify-natively <span class="kw">t</span></span>
<span id="cb6-35"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-35" aria-hidden="true"></a>        org-src-window-setup &#39;current-window <span class="co">;; edit in current window</span></span>
<span id="cb6-36"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-36" aria-hidden="true"></a>        org-src-preserve-indentation <span class="kw">t</span> <span class="co">;; do not put two spaces on the left</span></span>
<span id="cb6-37"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-37" aria-hidden="true"></a>        org-src-tab-acts-natively <span class="kw">t</span>)</span>
<span id="cb6-38"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-38" aria-hidden="true"></a></span>
<span id="cb6-39"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-39" aria-hidden="true"></a>  <span class="co">;; *** Templates</span></span>
<span id="cb6-40"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-40" aria-hidden="true"></a>  <span class="co">;; the %a refer to the place you are in emacs when you make the capture</span></span>
<span id="cb6-41"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-41" aria-hidden="true"></a>  <span class="co">;; that&#39;s very neat when you do that in an email for example.</span></span>
<span id="cb6-42"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-42" aria-hidden="true"></a>  (<span class="kw">setq</span> org-capture-templates</span>
<span id="cb6-43"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-43" aria-hidden="true"></a>        &#39;((<span class="st">&quot;t&quot;</span> <span class="st">&quot;todo&quot;</span>         entry (file <span class="st">&quot;~/.org/inbox.org&quot;</span>)</span>
<span id="cb6-44"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-44" aria-hidden="true"></a>           <span class="st">&quot;* TODO %?</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span>)</span>
<span id="cb6-45"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-45" aria-hidden="true"></a>          <span class="co">;; time tracker (clocked tasks)</span></span>
<span id="cb6-46"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-46" aria-hidden="true"></a>          (<span class="st">&quot;g&quot;</span> <span class="st">&quot;geek&quot;</span>         entry (file+olp+datetree <span class="st">&quot;~/.org/tracker.org&quot;</span>)</span>
<span id="cb6-47"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-47" aria-hidden="true"></a>           <span class="st">&quot;* GEEK %?         :perso:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-48"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-48" aria-hidden="true"></a>           :prepend <span class="kw">t</span> :tree-type week :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)</span>
<span id="cb6-49"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-49" aria-hidden="true"></a>          (<span class="st">&quot;c&quot;</span> <span class="st">&quot;chat&quot;</span>         entry (file+olp+datetree <span class="st">&quot;~/.org/tracker.org&quot;</span>)</span>
<span id="cb6-50"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-50" aria-hidden="true"></a>           <span class="st">&quot;* CHAT %?         :work:chat:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-51"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-51" aria-hidden="true"></a>           :prepend <span class="kw">t</span> :tree-type week :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)</span>
<span id="cb6-52"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-52" aria-hidden="true"></a>          (<span class="st">&quot;e&quot;</span> <span class="st">&quot;email&quot;</span>        entry (file+olp+datetree <span class="st">&quot;~/.org/tracker.org&quot;</span>)</span>
<span id="cb6-53"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-53" aria-hidden="true"></a>           <span class="st">&quot;* EMAIL %?        :work:email:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-54"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-54" aria-hidden="true"></a>           :prepend <span class="kw">t</span> :tree-type week :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)</span>
<span id="cb6-55"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-55" aria-hidden="true"></a>          (<span class="st">&quot;m&quot;</span> <span class="st">&quot;meeting&quot;</span>      entry (file+olp+datetree <span class="st">&quot;~/.org/tracker.org&quot;</span>)</span>
<span id="cb6-56"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-56" aria-hidden="true"></a>           <span class="st">&quot;* MEETING %?      :work:meeting:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-57"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-57" aria-hidden="true"></a>           :prepend <span class="kw">t</span> :tree-type week :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)</span>
<span id="cb6-58"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-58" aria-hidden="true"></a>          (<span class="st">&quot;r&quot;</span> <span class="st">&quot;review&quot;</span>       entry (file+olp+datetree <span class="st">&quot;~/.org/tracker.org&quot;</span>)</span>
<span id="cb6-59"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-59" aria-hidden="true"></a>           <span class="st">&quot;* REVIEW %?       :work:review:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-60"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-60" aria-hidden="true"></a>           :prepend <span class="kw">t</span> :tree-type week :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)</span>
<span id="cb6-61"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-61" aria-hidden="true"></a>          (<span class="st">&quot;w&quot;</span> <span class="st">&quot;work&quot;</span>         entry (file+olp+datetree <span class="st">&quot;~/.org/tracker.org&quot;</span>)</span>
<span id="cb6-62"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-62" aria-hidden="true"></a>           <span class="st">&quot;* IN-PROGRESS %?  :work:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-63"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-63" aria-hidden="true"></a>           :prepend <span class="kw">t</span> :tree-type week :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)</span>
<span id="cb6-64"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-64" aria-hidden="true"></a>          (<span class="st">&quot;p&quot;</span> <span class="st">&quot;pause&quot;</span>        entry (file+olp+datetree <span class="st">&quot;~/.org/tracker.org&quot;</span>)</span>
<span id="cb6-65"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-65" aria-hidden="true"></a>           <span class="st">&quot;* PAUSE %?        :pause:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-66"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-66" aria-hidden="true"></a>           :prepend <span class="kw">t</span> :tree-type week :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)</span>
<span id="cb6-67"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-67" aria-hidden="true"></a>          (<span class="st">&quot;i&quot;</span> <span class="st">&quot;interruption&quot;</span> entry (file+olp+datetree <span class="st">&quot;~/.org/tracker.org&quot;</span>)</span>
<span id="cb6-68"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-68" aria-hidden="true"></a>           <span class="st">&quot;* IN-PROGRESS %?  :interruption:work:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">- ref :: %a</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-69"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-69" aria-hidden="true"></a>           :prepend <span class="kw">t</span> :tree-type week :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)</span>
<span id="cb6-70"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-70" aria-hidden="true"></a>          (<span class="st">&quot;f&quot;</span> <span class="st">&quot;chore&quot;</span>        entry (file <span class="st">&quot;~/.org/inbox.org&quot;</span>)</span>
<span id="cb6-71"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-71" aria-hidden="true"></a>           <span class="st">&quot;* IN-PROGRESS %?  :chore:</span><span class="sc">\n</span><span class="st">%U</span><span class="sc">\n</span><span class="st">&quot;</span></span>
<span id="cb6-72"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-72" aria-hidden="true"></a>           :clock-in <span class="kw">t</span> :clock-keep <span class="kw">t</span>)))</span>
<span id="cb6-73"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-73" aria-hidden="true"></a></span>
<span id="cb6-74"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-74" aria-hidden="true"></a>  <span class="co">;; How to create default clocktable</span></span>
<span id="cb6-75"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-75" aria-hidden="true"></a>  (<span class="kw">setq</span> org-clock-clocktable-default-properties</span>
<span id="cb6-76"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-76" aria-hidden="true"></a>        &#39;(:scope subtree :maxlevel <span class="dv">4</span> :timestamp <span class="kw">t</span> :link <span class="kw">t</span> :tags <span class="kw">t</span> :narrow <span class="dv">36</span>! :match <span class="st">&quot;work&quot;</span>))</span>
<span id="cb6-77"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-77" aria-hidden="true"></a></span>
<span id="cb6-78"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-78" aria-hidden="true"></a>  <span class="co">;; How to display default clock report in agenda view</span></span>
<span id="cb6-79"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-79" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-clockreport-parameter-plist</span>
<span id="cb6-80"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-80" aria-hidden="true"></a>        &#39;(:lang <span class="st">&quot;en&quot;</span> :maxlevel <span class="dv">4</span> :fileskip0 <span class="kw">t</span> :link <span class="kw">t</span> :indent <span class="kw">t</span> :narrow <span class="dv">80</span>!))</span>
<span id="cb6-81"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-81" aria-hidden="true"></a></span>
<span id="cb6-82"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-82" aria-hidden="true"></a>  <span class="co">;; *** Projectile; default TODO file to create in your projects</span></span>
<span id="cb6-83"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-83" aria-hidden="true"></a>  (<span class="kw">setq</span> org-projectile-file <span class="st">&quot;inbox.org&quot;</span>)</span>
<span id="cb6-84"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-84" aria-hidden="true"></a></span>
<span id="cb6-85"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-85" aria-hidden="true"></a>  <span class="co">;; *** Refile mapped to SPC y o r</span></span>
<span id="cb6-86"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-86" aria-hidden="true"></a>  (map! :leader :desc <span class="st">&quot;org-refile&quot;</span> <span class="st">&quot;y o r&quot;</span> #&#39;org-refile)</span>
<span id="cb6-87"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-87" aria-hidden="true"></a></span>
<span id="cb6-88"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-88" aria-hidden="true"></a>  <span class="co">;; Refile to either the =refile.org= file or to =agenda.org= org =standup.org=</span></span>
<span id="cb6-89"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-89" aria-hidden="true"></a>  (<span class="kw">setq</span> org-refile-target-files</span>
<span id="cb6-90"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-90" aria-hidden="true"></a>        &#39;(<span class="st">&quot;~/.org/tracker.org&quot;</span></span>
<span id="cb6-91"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-91" aria-hidden="true"></a>          <span class="st">&quot;~/.org/inbox.org&quot;</span>))</span>
<span id="cb6-92"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-92" aria-hidden="true"></a></span>
<span id="cb6-93"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-93" aria-hidden="true"></a>  (<span class="kw">setq</span> org-refile-targets</span>
<span id="cb6-94"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-94" aria-hidden="true"></a>        &#39;((<span class="kw">nil</span> :maxlevel . <span class="dv">5</span>)</span>
<span id="cb6-95"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-95" aria-hidden="true"></a>          (org-refile-target-files :maxlevel . <span class="dv">5</span>)))</span>
<span id="cb6-96"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-96" aria-hidden="true"></a></span>
<span id="cb6-97"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-97" aria-hidden="true"></a>  <span class="co">;; *** Agenda</span></span>
<span id="cb6-98"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-98" aria-hidden="true"></a>  (<span class="kw">setq</span> org-log-into-drawer <span class="kw">t</span>) <span class="co">;; hide the log state change history a bit better</span></span>
<span id="cb6-99"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-99" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-files org-refile-target-files)</span>
<span id="cb6-100"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-100" aria-hidden="true"></a>  (<span class="kw">setq</span> org-deadline-warning-days <span class="dv">7</span>)</span>
<span id="cb6-101"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-101" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-skip-scheduled-if-deadline-is-shown <span class="kw">t</span>)</span>
<span id="cb6-102"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-102" aria-hidden="true"></a>  (<span class="kw">setq</span> org-habit-show-habits-only-for-today <span class="kw">nil</span>)</span>
<span id="cb6-103"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-103" aria-hidden="true"></a>  (<span class="kw">setq</span> org-habit-graph-column <span class="dv">65</span>)</span>
<span id="cb6-104"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-104" aria-hidden="true"></a>  (<span class="kw">setq</span> org-duration-format &#39;h:mm) <span class="co">;; show hours at max, not days</span></span>
<span id="cb6-105"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-105" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-compact-blocks <span class="kw">t</span>)</span>
<span id="cb6-106"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-106" aria-hidden="true"></a>  <span class="co">;; default show today</span></span>
<span id="cb6-107"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-107" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-span &#39;day)</span>
<span id="cb6-108"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-108" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-start-day <span class="st">&quot;-0d&quot;</span>)</span>
<span id="cb6-109"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-109" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-start-on-weekday <span class="kw">nil</span>)</span>
<span id="cb6-110"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-110" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-custom-commands</span>
<span id="cb6-111"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-111" aria-hidden="true"></a>        &#39;((<span class="st">&quot;d&quot;</span> <span class="st">&quot;Done tasks&quot;</span> tags <span class="st">&quot;/DONE|CANCELED&quot;</span>)</span>
<span id="cb6-112"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-112" aria-hidden="true"></a>          (<span class="st">&quot;g&quot;</span> <span class="st">&quot;Plan Today&quot;</span></span>
<span id="cb6-113"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-113" aria-hidden="true"></a>           ((agenda <span class="st">&quot;&quot;</span> ((org-agenda-span &#39;day)))</span>
<span id="cb6-114"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-114" aria-hidden="true"></a>            (org-agenda-skip-function &#39;(org-agenda-skip-deadline-if-not-today))</span>
<span id="cb6-115"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-115" aria-hidden="true"></a>            (org-agenda-entry-types &#39;(:deadline))</span>
<span id="cb6-116"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-116" aria-hidden="true"></a>            (org-agenda-overriding-header <span class="st">&quot;Today&#39;s Deadlines &quot;</span>)))))</span>
<span id="cb6-117"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-117" aria-hidden="true"></a>  (<span class="kw">setq</span> org-agenda-window-setup &#39;only-window)</span>
<span id="cb6-118"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-118" aria-hidden="true"></a></span>
<span id="cb6-119"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-119" aria-hidden="true"></a>  (<span class="kw">defun</span><span class="fu"> y/go-to-today-agenda </span>()</span>
<span id="cb6-120"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-120" aria-hidden="true"></a>    (interactive)</span>
<span id="cb6-121"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-121" aria-hidden="true"></a>    (org-agenda <span class="kw">nil</span> <span class="st">&quot;a&quot;</span>))</span>
<span id="cb6-122"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-122" aria-hidden="true"></a>  <span class="co">;; Faster jump to agenda today keybinding shortcut (SPC y a)</span></span>
<span id="cb6-123"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-123" aria-hidden="true"></a>  (map! :leader</span>
<span id="cb6-124"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-124" aria-hidden="true"></a>        :desc <span class="st">&quot;Today&#39;s agenda&quot;</span></span>
<span id="cb6-125"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-125" aria-hidden="true"></a>        <span class="st">&quot;y a&quot;</span> #&#39;y/go-to-today-agenda)</span>
<span id="cb6-126"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-126" aria-hidden="true"></a></span>
<span id="cb6-127"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-127" aria-hidden="true"></a>  <span class="co">;; ** Org Annotate</span></span>
<span id="cb6-128"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-128" aria-hidden="true"></a></span>
<span id="cb6-129"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-129" aria-hidden="true"></a>  <span class="co">;; Ability to take annotate some files, can of double usage with org-capture.</span></span>
<span id="cb6-130"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-130" aria-hidden="true"></a>  <span class="co">;; Still, I keep that keyboard shortcut here.</span></span>
<span id="cb6-131"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-131" aria-hidden="true"></a>  <span class="co">;; (evil-leader/set-key &quot;oa&quot; &#39;org-annotate-file)</span></span>
<span id="cb6-132"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-132" aria-hidden="true"></a>  (<span class="kw">setq</span> org-annotate-file-storage-file <span class="st">&quot;~/.org/annotations.org&quot;</span>)</span>
<span id="cb6-133"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-133" aria-hidden="true"></a></span>
<span id="cb6-134"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-134" aria-hidden="true"></a></span>
<span id="cb6-135"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-135" aria-hidden="true"></a>  <span class="co">;; ** Org colums</span></span>
<span id="cb6-136"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-136" aria-hidden="true"></a>  <span class="co">;; Can be nice sometime to have that column view</span></span>
<span id="cb6-137"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-137" aria-hidden="true"></a>  <span class="co">;; give a felling of Excel view</span></span>
<span id="cb6-138"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-138" aria-hidden="true"></a>  (<span class="kw">setq</span> org-columns-default-format</span>
<span id="cb6-139"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-139" aria-hidden="true"></a>        <span class="st">&quot;%TODO %3PRIORITY %40ITEM(Task) %17Effort(Estimated Effort){:} %CLOCKSUM %8TAGS(TAG)&quot;</span>)</span>
<span id="cb6-140"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-140" aria-hidden="true"></a>  (map! :leader <span class="st">&quot;y o c&quot;</span> #&#39;org-columns)</span>
<span id="cb6-141"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-141" aria-hidden="true"></a></span>
<span id="cb6-142"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-142" aria-hidden="true"></a>  <span class="co">;; ** Deft</span></span>
<span id="cb6-143"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-143" aria-hidden="true"></a>  <span class="co">;; useful to find files and jump to them</span></span>
<span id="cb6-144"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-144" aria-hidden="true"></a>  (<span class="kw">setq</span> deft-extensions &#39;(<span class="st">&quot;org&quot;</span> <span class="st">&quot;gpg&quot;</span> <span class="st">&quot;md&quot;</span> <span class="st">&quot;txt&quot;</span>))</span>
<span id="cb6-145"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-145" aria-hidden="true"></a>  (<span class="kw">setq</span> deft-recursive <span class="kw">t</span>)</span>
<span id="cb6-146"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-146" aria-hidden="true"></a>  (<span class="kw">setq</span> deft-use-filter-string-for-filename <span class="kw">t</span>)</span>
<span id="cb6-147"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-147" aria-hidden="true"></a>  (<span class="kw">setq</span> deft-default-extension <span class="st">&quot;org&quot;</span>)</span>
<span id="cb6-148"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-148" aria-hidden="true"></a>  (<span class="kw">setq</span> deft-directory <span class="st">&quot;~/.org&quot;</span>)</span>
<span id="cb6-149"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-149" aria-hidden="true"></a></span>
<span id="cb6-150"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-150" aria-hidden="true"></a></span>
<span id="cb6-151"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-151" aria-hidden="true"></a>  <span class="co">;; Org Babel</span></span>
<span id="cb6-152"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-152" aria-hidden="true"></a>  (org-babel-do-load-languages</span>
<span id="cb6-153"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-153" aria-hidden="true"></a>   &#39;org-babel-load-languages</span>
<span id="cb6-154"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-154" aria-hidden="true"></a>   &#39;(<span class="co">;; other Babel languages</span></span>
<span id="cb6-155"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-155" aria-hidden="true"></a>     (shell . <span class="kw">t</span>)</span>
<span id="cb6-156"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-156" aria-hidden="true"></a>     (http . <span class="kw">t</span>)</span>
<span id="cb6-157"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-157" aria-hidden="true"></a>     (clojure . <span class="kw">t</span>)</span>
<span id="cb6-158"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-158" aria-hidden="true"></a>     (haskell . <span class="kw">t</span>)</span>
<span id="cb6-159"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-159" aria-hidden="true"></a>     (plantuml . <span class="kw">t</span>) <span class="co">;; UML graphs</span></span>
<span id="cb6-160"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-160" aria-hidden="true"></a>     (gnuplot . <span class="kw">t</span>)))</span>
<span id="cb6-161"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-161" aria-hidden="true"></a>  (<span class="kw">setq</span> org-plantuml-jar-path <span class="st">&quot;~/bin/plantuml.jar&quot;</span>))</span>
<span id="cb6-162"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-162" aria-hidden="true"></a></span>
<span id="cb6-163"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-163" aria-hidden="true"></a>(use-package! org</span>
<span id="cb6-164"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb6-164" aria-hidden="true"></a>  :config (org-mode-config))</span></code></pre></div><p>And also</p><div class="sourceCode" id="cb7" data-org-language="emacs-lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb7-1"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-1" aria-hidden="true"></a>(use-package! org-super-agenda</span>
<span id="cb7-2"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-2" aria-hidden="true"></a>  :after org-agenda</span>
<span id="cb7-3"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-3" aria-hidden="true"></a>  :custom (org-super-agenda-groups</span>
<span id="cb7-4"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-4" aria-hidden="true"></a>           &#39;( <span class="co">;; Each group has an implicit boolean OR operator between its selectors.</span></span>
<span id="cb7-5"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-5" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Overdue&quot;</span> :deadline past :order <span class="dv">0</span>)</span>
<span id="cb7-6"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-6" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Evening Habits&quot;</span> :and (:habit <span class="kw">t</span> :tag <span class="st">&quot;evening&quot;</span>) :order <span class="dv">8</span>)</span>
<span id="cb7-7"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-7" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Habits&quot;</span> :habit <span class="kw">t</span> :order <span class="dv">6</span>)</span>
<span id="cb7-8"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-8" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Today&quot;</span> <span class="co">;; Optionally specify section name</span></span>
<span id="cb7-9"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-9" aria-hidden="true"></a>              :time-grid <span class="kw">t</span>  <span class="co">;; Items that appear on the time grid (scheduled/deadline with time)</span></span>
<span id="cb7-10"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-10" aria-hidden="true"></a>              :order <span class="dv">3</span>)     <span class="co">;; capture the today first but show it in order 3</span></span>
<span id="cb7-11"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-11" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Low Priority&quot;</span> :priority <span class="st">&quot;C&quot;</span> :tag <span class="st">&quot;maybe&quot;</span> :order <span class="dv">7</span>)</span>
<span id="cb7-12"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-12" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Due Today&quot;</span> :deadline today :order <span class="dv">1</span>)</span>
<span id="cb7-13"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-13" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Important&quot;</span></span>
<span id="cb7-14"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-14" aria-hidden="true"></a>              :and (:priority <span class="st">&quot;A&quot;</span> :not (:todo (<span class="st">&quot;DONE&quot;</span> <span class="st">&quot;CANCELED&quot;</span>)))</span>
<span id="cb7-15"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-15" aria-hidden="true"></a>              :order <span class="dv">2</span>)</span>
<span id="cb7-16"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-16" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Due Soon&quot;</span> :deadline future :order <span class="dv">4</span>)</span>
<span id="cb7-17"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-17" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Todo&quot;</span> :not (:habit <span class="kw">t</span>) :order <span class="dv">5</span>)</span>
<span id="cb7-18"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-18" aria-hidden="true"></a>             (<span class="bu">:name</span> <span class="st">&quot;Waiting&quot;</span> :todo (<span class="st">&quot;WAITING&quot;</span> <span class="st">&quot;HOLD&quot;</span>) :order <span class="dv">9</span>)))</span>
<span id="cb7-19"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-19" aria-hidden="true"></a>  :config</span>
<span id="cb7-20"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-20" aria-hidden="true"></a>  (<span class="kw">setq</span> org-super-agenda-header-map <span class="kw">nil</span>)</span>
<span id="cb7-21"><a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#cb7-21" aria-hidden="true"></a>  (org-super-agenda-mode <span class="kw">t</span>))</span></code></pre></div><h2 id="conclusions">Conclusions</h2><p>That article is already quite long. But if you intend to dig into org mode, this can be a nice default starting point.</p><p>I haven't really dig into some details but only given you the ability to start not completely from scratch and with decent default values for an already advanced usage.</p><p>To resume:</p><ul><li><code>SPC y a</code> â‡’ Show agenda view for today</li><li><code>SPC X</code> â‡’ Capture a new task, write a description, then <code>C-c C-c</code>, save that in <code>tracker.org</code> (or <code>inbox.org</code> depending of the capture template)</li><li><code>SPC n o</code> â‡’ jump to the current time tracked tasks</li><li><code>SPC m c o</code> â‡’ stop the clock on that task; if you capture a new time tracking tasks you don't need to clock-out</li><li><code>SPC y o r</code> â‡’ <code>org-refile</code>, meaning move that task somewhere else</li><li><code>SPC q</code> â‡’ add/remove tags to that task</li></ul><h2 id="footnotes">Footnotes</h2><section class="footnotes" role="doc-endnotes"><hr></hr><ol><li id="fn1" role="doc-endnote"><p><em>Short digression</em>: Historically, I coded using different IDEs. Then I worked for a company that forced me to use terrible keyboards and after just a few weeks I started to have serious wrist issues. So to minimize that pain I switched to vim. And it was <em>awesome</em>. Once you're use to the power of vim keybinding forever your soul will bound to them. So learning vim is a bit like learning a new music instrument. You need to construct some muscle memory and integrate one after one new tricks. Once learned your personal editing power start to become overwhelming.</p><p>After a few years of vim, I wanted to try to explore new editor tooling. So I switched to emacs using the spacemacs distribution. So mainly it's vim but with even better keybindgs, helpers and within emacs. The main reason for the switch was that vimscript is a really bad language to configure your editor. Emacs use emacs-LISP. For editor customization a LISP looked perfect to me. LISP is still one of the most powerful and easy to use programming language to date.</p><p>And recently, as my personal configuration started to grow so much I switched to <a href="https://github.com/hlissner/doom-emacs">doom-emacs</a>. I was quite hesitant to do the switch but so far its been a pleasure. IMHO using <a href="https://github.com/hlissner/doom-emacs">doom-emacs</a> is a lot better than using my own personal configuration from scratch because I wouldn't be able to end up with so much configuration quality.<a href="https://her.esy.fun/posts/0015-how-i-use-org-mode/index.html#fnref1" class="footnote-back" role="doc-backlink">â†©ï¸Ž</a></p></li></ol></section></div>
]]></description>
</item>


<item>
<title>Auto change emacs theme</title>
<guid>https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html</guid>
<pubDate>Tue, 22 Sep 2020 00:00:00 +0200</pubDate>
<category>emacs</category>
<description><![CDATA[
<div id="content"><p>One thing I kind of like is the ability to change emacs theme depending of the hour. There are two possibilities. One would be to sync with the sun using the current location. There is an emacs package for that. It's called <a href="https://github.com/hadronzoo/theme-changer">theme-changer</a> which at the time of writing those lines is asking for a new maintainer. This theme changer is very elegant because like macOS use the location to determine if it is day or night. But I wanted to have more themes from morning to night:</p><ol><li>early morning: deep yellow (gruvbox-light),</li><li>morning: light yellow (solarized-light),</li><li>day: grey/blueish during the day (nord-light),</li><li>evening: deep yellow again (gruvbox-light)</li><li>night: dark theme (oceanic-next)</li><li>sleep time: neon-like (laserwave)</li></ol><p>And also, I wanted that to follow my working hours and not really the sun. I might change my mind and use the code of theme-changer to follow the curve of the sun. But for now, just using straight hours should be good enough. So here is my piece of code I added to my doom-emacs <code>config.el</code>:</p><div class="sourceCode" id="cb1" data-org-language="emacs-lisp"><pre class="sourceCode commonlisp"><code class="sourceCode commonlisp"><span id="cb1-1"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-1" aria-hidden="true"></a>(<span class="kw">defun</span><span class="fu"> y/auto-update-theme </span>()</span>
<span id="cb1-2"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-2" aria-hidden="true"></a>  <span class="st">&quot;depending on time use different theme&quot;</span></span>
<span id="cb1-3"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-3" aria-hidden="true"></a>  <span class="co">;; very early =&gt; gruvbox-light, solarized-light, nord-light</span></span>
<span id="cb1-4"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-4" aria-hidden="true"></a>  (<span class="kw">let*</span> ((hour (<span class="kw">nth</span> <span class="dv">2</span> (decode-time (current-time))))</span>
<span id="cb1-5"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-5" aria-hidden="true"></a>         (theme (<span class="kw">cond</span> ((<span class="op">&lt;=</span> <span class="dv">7</span> hour <span class="dv">8</span>)   &#39;doom-gruvbox-light)</span>
<span id="cb1-6"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-6" aria-hidden="true"></a>                      ((<span class="op">=</span> <span class="dv">9</span> hour)      &#39;doom-solarized-light)</span>
<span id="cb1-7"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-7" aria-hidden="true"></a>                      ((<span class="op">&lt;=</span> <span class="dv">10</span> hour <span class="dv">16</span>) &#39;doom-nord-light)</span>
<span id="cb1-8"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-8" aria-hidden="true"></a>                      ((<span class="op">&lt;=</span> <span class="dv">17</span> hour <span class="dv">18</span>) &#39;doom-gruvbox-light)</span>
<span id="cb1-9"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-9" aria-hidden="true"></a>                      ((<span class="op">&lt;=</span> <span class="dv">19</span> hour <span class="dv">22</span>) &#39;doom-oceanic-next)</span>
<span id="cb1-10"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-10" aria-hidden="true"></a>                      (<span class="kw">t</span>               &#39;doom-laserwave))))</span>
<span id="cb1-11"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-11" aria-hidden="true"></a>    (<span class="kw">when</span> (<span class="kw">not</span> (<span class="kw">equal</span> doom-theme theme))</span>
<span id="cb1-12"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-12" aria-hidden="true"></a>      (<span class="kw">setq</span> doom-theme theme)</span>
<span id="cb1-13"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-13" aria-hidden="true"></a>      (load-theme doom-theme <span class="kw">t</span>))</span>
<span id="cb1-14"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-14" aria-hidden="true"></a>    <span class="co">;; run that function again next hour</span></span>
<span id="cb1-15"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-15" aria-hidden="true"></a>    (run-at-time (<span class="kw">format</span> <span class="st">&quot;%02d:%02d&quot;</span> (<span class="op">+</span> hour <span class="dv">1</span>) <span class="dv">0</span>) <span class="kw">nil</span> &#39;y/auto-update-theme)))</span>
<span id="cb1-16"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-16" aria-hidden="true"></a></span>
<span id="cb1-17"><a href="https://her.esy.fun/posts/0014-change-emacs-theme-automatically/index.html#cb1-17" aria-hidden="true"></a>(y/auto-update-theme)</span></code></pre></div><p>I'm still playing with it. So there still might be a bug. Use at your own risk. Happy hacking to all of you.</p></div>
]]></description>
</item>


<item>
<title>How to choose your tools</title>
<guid>https://her.esy.fun/posts/0013-how-to-choose-your-tools/index.html</guid>
<pubDate>Sat, 09 May 2020 00:00:00 +0200</pubDate>
<category>emacs</category>
<category>softwares</category>
<description><![CDATA[
<div id="content"><p>This week I didn't take a look at HN to grab some news. And this week-end, in the morning I read those:</p><ul><li><a href="https://news.ycombinator.com/item?id=23102430">Zoom acquires keybase</a></li><li><a href="https://news.ycombinator.com/item?id=23107123">Making Emacs popular again</a></li><li><a href="https://news.ycombinator.com/item?id=23092904">Github Codespace</a></li></ul><figure><img src="https://her.esy.fun/posts/0013-how-to-choose-your-tools/Welcome-to-Halsingland.jpg.webp" title="Welcome to Halsingland" alt="Midsommar Welcome" alt="Welcome to Halsingland"></img><figcaption aria-hidden="true">Welcome to Halsingland</figcaption></figure><p>Similar articles have existed for years on different products. What is their common point? <em>Software tooling and their potential change and disappearance</em>.</p><p>Across the years, too many times I saw tools disappear. By tools I mean applications, web applications, web sites. I think we can also include programming languages, control versioning tools, building tools, package manager, etcâ€¦</p><p>The story can be quite different. Sometimes the disappearance of a tool is positive, because I found a better one (from cvs to svn to git). But, too often, the tool simply disappears or worse downgrade its quality. I think we can find different names for those softwares:</p><ul><li><em>bloatware</em>: remember digg, stumbleupon, windows?</li><li><em>downgradeware</em>: Swagger-UI v3 (v2 is neat), reddit new redesign (looks better, but slow)</li><li><em>payware</em>: Useful free service ask for money now. Or cost a lot more.</li><li><em>crapware</em>: Stop to works, quality degrate unless you pay: Twitter streaming API?</li><li><em>dieware</em>: Remember Friendfeed, Google Readerâ„¢, etcâ€¦</li><li>etcâ€¦</li></ul><p>This is often quite frustrating because you lose a lot of your investment with that tool.</p><p>Regarding Github Codespace; the integration of VSCodeâ„¢ inside GitHubâ„¢ can be even worse. This is what I would call a <em>trapware</em>.</p><div class="notes"><p><em>trapware</em>: A software that is intended to put you inside a closed ecosystem. By slowly but surely add features that while looking great for the user at first sight will prevent interoperability with other tools.</p></div><p>Furthermore, the fact that Microsoft is involved give this story a taste of <a href="https://en.wikipedia.html/wiki/Embrace,_extend,_and_extinguish">Embrace, Extend and Extinguish</a>.</p><p>My real concern is that it could become a <em>work framework</em>. This could impose the full tooling on a lot of developers without giving them the freedom of choice.</p><p>For a startup CTO/CEO this GitHubâ„¢ Codespaceâ„¢ could offer the following advantages:</p><ul><li><em>security</em>: impossible or very hard to steal the source code by a single dev.</li><li><em>homogeneity</em>: all dev must use the same development environment. Thus the integration of new dev is faster.</li><li><em>cheaper</em>: don't need to pay for a full featured, fast machine to each new developer. A less performant machine able to display an electron app will do the trick.</li><li><em>stats</em>: you can observe the throughput of your developers. How many commits a day, how many lines of code, etcâ€¦ How much bugs involved which part of the code and thus which dev to blame? How much time the dev is typing, moving its mouse, how much copy/paste is involved, etcâ€¦</li></ul><p>For the single developers and open source developers this offer:</p><ul><li><em>homogeneity</em>: if I learn how to work in this environment, I'll be easier to recruit and I'll know how to work fast.</li><li><em>lower barrier to entry</em>: for an opensource repository, it will become much easier for anyone to propose a PR to fix some issue. No need to local clone the project, no need to download all the dependencies to test it locally, etcâ€¦</li></ul><p>But the price to pay is hidden.</p><figure><img src="https://her.esy.fun/posts/0013-how-to-choose-your-tools/midsommar-cry.jpg.webp" alt="Midsommar Sorrow" alt="Midsommar Sorrow"></img><figcaption aria-hidden="true">Midsommar Sorrow</figcaption></figure><ol><li>First, you are now, not able to choose your local working environment on your machine.</li><li>GitHubâ„¢ can still change so much to become one of the previously mentionned <code>/.*ware/</code> you don't want to be involved with. They could forces you to pay a lot more, remove features, redesign to a bloatware, make it harder to interop with other platforms (prefer Azure to AWS etcâ€¦).</li><li>If everything involve machines in the cloud via the browser and via authorized plugins only. A lot of tools, features will never be allowed in this new ecosystem.</li><li>Surveillance on meaningless or wrong metrics about your work. Instead of being evaluated on the feature you shipped or on other higher level metrics. It will be very tempting for your bosses to find flaws in your working habits. We are already living in a world were surveillance, metrics and stats are too easy to grab about a person. And anyone involved know this is all bullshit. Human are very good to play those kind of games. So people really working hard for the best will certainly perform badly compared to other people that simply trick the system.</li></ol><p>So as good as Codespace can be, I think this warning is good to keep that in mind. Don't put yourself in a trap.</p><p>The <a href="https://news.ycombinator.com/item?id=23102430">Zoom acquires keybase</a> is just another story of a dying product. Apparently the keybase team will probably stop maintaining keybase. The idea behind keybase was pretty nice. And they filled a gap in the current open source world.</p><p>The last article I mentionned was <a href="https://news.ycombinator.com/item?id=23107123">Making Emacs popular again</a>. The first comment in HN was about how VSCode is easy to start with as compared to Emacs that need a lot more time to configure correctly for your needs. Yes, VSCode certainly just work and is easy to use. But Emacs is another beast. VSCode can become bad very fast, you don't control how it will evolve. The fact that this is a succesful Microsoft product does not garanty it will keep its currently quality. Emacs on the other hand is 44 year old and was designed so that it adapts to you. You are the one using libs and customizing it.</p><p>The argument to chose VSCode instead of Emacs look similar to me to the debate "Frameworks vs Libraries". Frameworks are easier to start with, but soon you find corner cases were you start to fight against them.</p><p>A Library on the other hand, is just a bunch of helpers you can use. And if you need another functionality, just make it using the libraries. But you have a lot more work to do yourself.</p><p>The common pattern I see during choice decision is often reducible to:</p><ol><li>Easy now, but less extensible and harder in the long run.</li><li>Harder now, but more extensible and easier in the long run.</li></ol><p>As a conclustion I would state that when you need to choose between different tools. Take the time to think about the investment costs. Sometime, the bit of pain in the begining is worth it. In particular if you are going to use this tool every days for many hours during the following years. If on the other hand you don't plan to use that tool much. Going with the easy option is certainly the best choice.</p><p>I consider Emacs to be of the 2nd option when compared to VSCode. Harder to start, but with a lot more control and potential power that you will probably never be able to get with most modern IDE/Editor. Also choosing a Free Software<a href="https://her.esy.fun/posts/0013-how-to-choose-your-tools/index.html#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a> gives you a lot more control about its future.</p><h2 id="post-conclusion">Post-conclusion â€“ Emacs is awesome</h2><figure><img src="https://her.esy.fun/posts/0013-how-to-choose-your-tools/midsommar-joy.jpg.webp" alt="Midsommar Joy" alt="Midsommar Joy"></img><figcaption aria-hidden="true">Midsommar Joy</figcaption></figure><p>To go beyond my opinion, I'd like to share my experience with editors and emacs.</p><p>When I started to be serious about coding, I was taught to use vi, not vim, vi. I only knew a few survival vi commands: <code>i</code>, <code>a</code>, <code>dd</code> and <code>cw</code>. A few years later I started to use IDEs and I was thrilled. A few years forward I started to work for a company that forced me to use their shitty computers. Quite soon, I started to have wrist issues. Thus I decided to use vim again but be serious about it this time. And I saw the benefits only after a few weeks. They were tremendous. No more wrist pain. And an incredible edition power at the tip of my fingers<a href="https://her.esy.fun/posts/0013-how-to-choose-your-tools/index.html#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>.</p><p>Then, I started a new job where we decided to code in Clojure. Of course Clojure being a LISP and emacs using also a LISP as script language, it sound natural to try Emacs even though I loved Vim. I started by installing spacemacs. At that time I didn't want to invest much time in learning Emacs. I just wanted to learn the tricks that will make Emacs more valuable to my work. It did after just a few days or maybe weeks. I used Emacs superficially for years. This was already quite efficient, at least as much as vim.</p><p>Recently I dug deeper. I heard much praise about org-mode and I became curious. I discovered why it is so great. Basic org-mode is already quite valuable. But if you dig, it starts to be awesome. Unfortunately this is a bit hard to describe how org-mode is great without really digging a bit.</p><p>You can think of org-mode as an extremely versatile todo-list and note taker with agenda and time tracking integration. You are in deep control of your workflow. But mainly here are a few example of usages that are really worth it:</p><ul><li>note taker</li><li>documentation; this is a far better than markdown</li><li>interactive document; run code inside the doc, keep track of the results</li><li>export to HMTL/PDF</li><li>time tracking</li><li>reminders</li></ul><p>Recently there is also org-roam that is a step further to make orgmode a nice place to keep track of all your knowledge in one place. You can take a look at this <a href="https://www.youtube.com/watch?v=Lg61ocfxk3c">great video</a> by Matt Williams.</p><p>Emacs changed my workflow by making me more productive. It improved not only my coding workflow, but my full work environment. I started with the editor, a few plugins, and slowly, I integrated more aspect of my day to day tasks in emacs. Emacs is designed to adapt to your own needs. As such it is a lot easier to automate a lot of small tasks.</p><p>I really love Emacs and if you want to joyfully join the Emacs users here are my advices:</p><p>Start by using either <a href="https://www.spacemacs.html">spacemacs</a> or <a href="https://github.com/hlissner/doom-emacs">doom-emacs</a>. It will take a few weeks to absorb vim keybindings. Slowly you'll start to learn how to configure it for your needs.</p><p>I really advise you to take a look at org-mode. Mastering it could change your carrier. Im my opinion <a href="https://orgmode.html">org-mode</a> alone is a good reason enough to use emacs. But there are a lot more to discover.</p><p>However, if you are used to tools from startups, with nice UI/UX. Almost no configuration cost. Be aware that digging in Free Softwares is a lot different. Instead of having a big bundle with everything prepared to work you you will need to take the time to configure each part of a big system separately.</p><p>Howevery I'm deeply convinced the investment is really worth it.</p><section class="footnotes" role="doc-endnotes"><hr></hr><ol><li id="fn1" role="doc-endnote"><p>note I said <em>free software</em> and not <em>open source</em>; c.f <a href="https://www.gnu.html/philosophy/open-source-misses-the-point.en.html">Why Open Source misses the point of Free Software</a><a href="https://her.esy.fun/posts/0013-how-to-choose-your-tools/index.html#fnref1" class="footnote-back" role="doc-backlink">â†©ï¸Ž</a></p></li><li id="fn2" role="doc-endnote"><p><a href="http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/">Lear Vim Progressively</a> is an old "popular" blog post of mine.<a href="https://her.esy.fun/posts/0013-how-to-choose-your-tools/index.html#fnref2" class="footnote-back" role="doc-backlink">â†©ï¸Ž</a></p></li></ol></section></div>
]]></description>
</item>

</channel>
</rss>
